{"/home/travis/build/npmtest/node-npmtest-dagre/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_dagre */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-dagre/lib.npmtest_dagre.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/lib.npmtest_dagre.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":50}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":56}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_dagre */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_dagre = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_dagre = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-dagre/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":49}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":63},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-dagre && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_dagre */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_dagre","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_dagre.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_dagre.rollup.js'] =","            local.assetsDict['/assets.npmtest_dagre.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_dagre.__dirname + '/lib.npmtest_dagre.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":23,"column":0},"end":{"line":33,"column":2}}},"branchMap":{},"code":["/*","Copyright (c) 2012-2014 Chris Pettitt","","Permission is hereby granted, free of charge, to any person obtaining a copy","of this software and associated documentation files (the \"Software\"), to deal","in the Software without restriction, including without limitation the rights","to use, copy, modify, merge, publish, distribute, sublicense, and/or sell","copies of the Software, and to permit persons to whom the Software is","furnished to do so, subject to the following conditions:","","The above copyright notice and this permission notice shall be included in","all copies or substantial portions of the Software.","","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR","IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,","FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE","AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER","LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,","OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN","THE SOFTWARE.","*/","","module.exports = {","  graphlib: require(\"./lib/graphlib\"),","","  layout: require(\"./lib/layout\"),","  debug: require(\"./lib/debug\"),","  util: {","    time: require(\"./lib/util\").time,","    notime: require(\"./lib/util\").notime","  },","  version: require(\"./lib/version\")","};",""],"l":{"23":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/graphlib.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/graphlib.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1},"b":{"1":[1,0],"2":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":13}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":16}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":35}},"5":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":29}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":26}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":0},"end":{"line":11,"column":0}},{"start":{"line":11,"column":0},"end":{"line":11,"column":0}}]}},"code":["/* global window */","","var graphlib;","","if (typeof require === \"function\") {","  try {","    graphlib = require(\"graphlib\");","  } catch (e) {}","}","","if (!graphlib) {","  graphlib = window.graphlib;","}","","module.exports = graphlib;",""],"l":{"3":1,"5":1,"6":1,"7":1,"11":1,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/layout.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/layout.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":1,"85":1,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":0,"110":0,"111":0,"112":1,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":1,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":1,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":1,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":1,"225":0,"226":1,"227":0,"228":0,"229":0,"230":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"fnMap":{"1":{"name":"layout","line":20,"loc":{"start":{"line":20,"column":0},"end":{"line":20,"column":25}}},"2":{"name":"(anonymous_2)","line":22,"loc":{"start":{"line":22,"column":17},"end":{"line":22,"column":28}}},"3":{"name":"(anonymous_3)","line":24,"loc":{"start":{"line":24,"column":31},"end":{"line":24,"column":42}}},"4":{"name":"(anonymous_4)","line":25,"loc":{"start":{"line":25,"column":31},"end":{"line":25,"column":42}}},"5":{"name":"(anonymous_5)","line":26,"loc":{"start":{"line":26,"column":31},"end":{"line":26,"column":42}}},"6":{"name":"runLayout","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":28}}},"7":{"name":"(anonymous_7)","line":31,"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":48}}},"8":{"name":"(anonymous_8)","line":32,"loc":{"start":{"line":32,"column":37},"end":{"line":32,"column":48}}},"9":{"name":"(anonymous_9)","line":33,"loc":{"start":{"line":33,"column":37},"end":{"line":33,"column":48}}},"10":{"name":"(anonymous_10)","line":34,"loc":{"start":{"line":34,"column":37},"end":{"line":34,"column":48}}},"11":{"name":"(anonymous_11)","line":35,"loc":{"start":{"line":35,"column":37},"end":{"line":35,"column":48}}},"12":{"name":"(anonymous_12)","line":36,"loc":{"start":{"line":36,"column":37},"end":{"line":36,"column":48}}},"13":{"name":"(anonymous_13)","line":37,"loc":{"start":{"line":37,"column":37},"end":{"line":37,"column":48}}},"14":{"name":"(anonymous_14)","line":38,"loc":{"start":{"line":38,"column":37},"end":{"line":38,"column":48}}},"15":{"name":"(anonymous_15)","line":39,"loc":{"start":{"line":39,"column":37},"end":{"line":39,"column":48}}},"16":{"name":"(anonymous_16)","line":40,"loc":{"start":{"line":40,"column":37},"end":{"line":40,"column":48}}},"17":{"name":"(anonymous_17)","line":41,"loc":{"start":{"line":41,"column":37},"end":{"line":41,"column":48}}},"18":{"name":"(anonymous_18)","line":42,"loc":{"start":{"line":42,"column":37},"end":{"line":42,"column":48}}},"19":{"name":"(anonymous_19)","line":43,"loc":{"start":{"line":43,"column":37},"end":{"line":43,"column":48}}},"20":{"name":"(anonymous_20)","line":44,"loc":{"start":{"line":44,"column":37},"end":{"line":44,"column":48}}},"21":{"name":"(anonymous_21)","line":45,"loc":{"start":{"line":45,"column":37},"end":{"line":45,"column":48}}},"22":{"name":"(anonymous_22)","line":46,"loc":{"start":{"line":46,"column":37},"end":{"line":46,"column":48}}},"23":{"name":"(anonymous_23)","line":47,"loc":{"start":{"line":47,"column":37},"end":{"line":47,"column":48}}},"24":{"name":"(anonymous_24)","line":48,"loc":{"start":{"line":48,"column":37},"end":{"line":48,"column":48}}},"25":{"name":"(anonymous_25)","line":49,"loc":{"start":{"line":49,"column":37},"end":{"line":49,"column":48}}},"26":{"name":"(anonymous_26)","line":50,"loc":{"start":{"line":50,"column":37},"end":{"line":50,"column":48}}},"27":{"name":"(anonymous_27)","line":51,"loc":{"start":{"line":51,"column":37},"end":{"line":51,"column":48}}},"28":{"name":"(anonymous_28)","line":52,"loc":{"start":{"line":52,"column":37},"end":{"line":52,"column":48}}},"29":{"name":"(anonymous_29)","line":53,"loc":{"start":{"line":53,"column":37},"end":{"line":53,"column":48}}},"30":{"name":"(anonymous_30)","line":54,"loc":{"start":{"line":54,"column":37},"end":{"line":54,"column":48}}},"31":{"name":"(anonymous_31)","line":55,"loc":{"start":{"line":55,"column":37},"end":{"line":55,"column":48}}},"32":{"name":"(anonymous_32)","line":56,"loc":{"start":{"line":56,"column":37},"end":{"line":56,"column":48}}},"33":{"name":"(anonymous_33)","line":57,"loc":{"start":{"line":57,"column":37},"end":{"line":57,"column":48}}},"34":{"name":"updateInputGraph","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":51}}},"35":{"name":"(anonymous_35)","line":67,"loc":{"start":{"line":67,"column":29},"end":{"line":67,"column":41}}},"36":{"name":"(anonymous_36)","line":82,"loc":{"start":{"line":82,"column":29},"end":{"line":82,"column":41}}},"37":{"name":"buildLayoutGraph","line":115,"loc":{"start":{"line":115,"column":0},"end":{"line":115,"column":38}}},"38":{"name":"(anonymous_38)","line":124,"loc":{"start":{"line":124,"column":29},"end":{"line":124,"column":41}}},"39":{"name":"(anonymous_39)","line":130,"loc":{"start":{"line":130,"column":29},"end":{"line":130,"column":41}}},"40":{"name":"makeSpaceForEdgeLabels","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":35}}},"41":{"name":"(anonymous_41)","line":152,"loc":{"start":{"line":152,"column":20},"end":{"line":152,"column":32}}},"42":{"name":"injectEdgeLabelProxies","line":171,"loc":{"start":{"line":171,"column":0},"end":{"line":171,"column":35}}},"43":{"name":"(anonymous_43)","line":172,"loc":{"start":{"line":172,"column":20},"end":{"line":172,"column":32}}},"44":{"name":"assignRankMinMax","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":29}}},"45":{"name":"(anonymous_45)","line":185,"loc":{"start":{"line":185,"column":20},"end":{"line":185,"column":32}}},"46":{"name":"removeEdgeLabelProxies","line":196,"loc":{"start":{"line":196,"column":0},"end":{"line":196,"column":35}}},"47":{"name":"(anonymous_47)","line":197,"loc":{"start":{"line":197,"column":20},"end":{"line":197,"column":32}}},"48":{"name":"translateGraph","line":206,"loc":{"start":{"line":206,"column":0},"end":{"line":206,"column":27}}},"49":{"name":"getExtremes","line":215,"loc":{"start":{"line":215,"column":2},"end":{"line":215,"column":30}}},"50":{"name":"(anonymous_50)","line":226,"loc":{"start":{"line":226,"column":20},"end":{"line":226,"column":32}}},"51":{"name":"(anonymous_51)","line":227,"loc":{"start":{"line":227,"column":20},"end":{"line":227,"column":32}}},"52":{"name":"(anonymous_52)","line":237,"loc":{"start":{"line":237,"column":20},"end":{"line":237,"column":32}}},"53":{"name":"(anonymous_53)","line":243,"loc":{"start":{"line":243,"column":20},"end":{"line":243,"column":32}}},"54":{"name":"(anonymous_54)","line":245,"loc":{"start":{"line":245,"column":24},"end":{"line":245,"column":36}}},"55":{"name":"assignNodeIntersects","line":257,"loc":{"start":{"line":257,"column":0},"end":{"line":257,"column":33}}},"56":{"name":"(anonymous_56)","line":258,"loc":{"start":{"line":258,"column":20},"end":{"line":258,"column":32}}},"57":{"name":"fixupEdgeLabelCoords","line":276,"loc":{"start":{"line":276,"column":0},"end":{"line":276,"column":33}}},"58":{"name":"(anonymous_58)","line":277,"loc":{"start":{"line":277,"column":20},"end":{"line":277,"column":32}}},"59":{"name":"reversePointsForReversedEdges","line":291,"loc":{"start":{"line":291,"column":0},"end":{"line":291,"column":42}}},"60":{"name":"(anonymous_60)","line":292,"loc":{"start":{"line":292,"column":20},"end":{"line":292,"column":32}}},"61":{"name":"removeBorderNodes","line":300,"loc":{"start":{"line":300,"column":0},"end":{"line":300,"column":30}}},"62":{"name":"(anonymous_62)","line":301,"loc":{"start":{"line":301,"column":20},"end":{"line":301,"column":32}}},"63":{"name":"(anonymous_63)","line":316,"loc":{"start":{"line":316,"column":20},"end":{"line":316,"column":32}}},"64":{"name":"removeSelfEdges","line":323,"loc":{"start":{"line":323,"column":0},"end":{"line":323,"column":28}}},"65":{"name":"(anonymous_65)","line":324,"loc":{"start":{"line":324,"column":20},"end":{"line":324,"column":32}}},"66":{"name":"insertSelfEdges","line":336,"loc":{"start":{"line":336,"column":0},"end":{"line":336,"column":28}}},"67":{"name":"(anonymous_67)","line":338,"loc":{"start":{"line":338,"column":17},"end":{"line":338,"column":33}}},"68":{"name":"(anonymous_68)","line":340,"loc":{"start":{"line":340,"column":18},"end":{"line":340,"column":33}}},"69":{"name":"(anonymous_69)","line":343,"loc":{"start":{"line":343,"column":29},"end":{"line":343,"column":48}}},"70":{"name":"positionSelfEdges","line":358,"loc":{"start":{"line":358,"column":0},"end":{"line":358,"column":30}}},"71":{"name":"(anonymous_71)","line":359,"loc":{"start":{"line":359,"column":20},"end":{"line":359,"column":32}}},"72":{"name":"selectNumberAttrs","line":382,"loc":{"start":{"line":382,"column":0},"end":{"line":382,"column":39}}},"73":{"name":"canonicalize","line":386,"loc":{"start":{"line":386,"column":0},"end":{"line":386,"column":29}}},"74":{"name":"(anonymous_74)","line":388,"loc":{"start":{"line":388,"column":16},"end":{"line":388,"column":31}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":16,"column":40}},"2":{"start":{"line":18,"column":0},"end":{"line":18,"column":24}},"3":{"start":{"line":20,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":21,"column":2},"end":{"line":21,"column":64}},"5":{"start":{"line":22,"column":2},"end":{"line":27,"column":5}},"6":{"start":{"line":23,"column":4},"end":{"line":24,"column":75}},"7":{"start":{"line":24,"column":44},"end":{"line":24,"column":71}},"8":{"start":{"line":25,"column":4},"end":{"line":25,"column":77}},"9":{"start":{"line":25,"column":44},"end":{"line":25,"column":73}},"10":{"start":{"line":26,"column":4},"end":{"line":26,"column":81}},"11":{"start":{"line":26,"column":44},"end":{"line":26,"column":77}},"12":{"start":{"line":30,"column":0},"end":{"line":58,"column":1}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":80}},"14":{"start":{"line":31,"column":50},"end":{"line":31,"column":76}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":73}},"16":{"start":{"line":32,"column":50},"end":{"line":32,"column":69}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":69}},"18":{"start":{"line":33,"column":50},"end":{"line":33,"column":65}},"19":{"start":{"line":34,"column":2},"end":{"line":34,"column":74}},"20":{"start":{"line":34,"column":50},"end":{"line":34,"column":70}},"21":{"start":{"line":35,"column":2},"end":{"line":35,"column":87}},"22":{"start":{"line":35,"column":50},"end":{"line":35,"column":83}},"23":{"start":{"line":36,"column":2},"end":{"line":36,"column":80}},"24":{"start":{"line":36,"column":50},"end":{"line":36,"column":76}},"25":{"start":{"line":37,"column":2},"end":{"line":37,"column":74}},"26":{"start":{"line":37,"column":50},"end":{"line":37,"column":70}},"27":{"start":{"line":38,"column":2},"end":{"line":38,"column":78}},"28":{"start":{"line":38,"column":50},"end":{"line":38,"column":74}},"29":{"start":{"line":39,"column":2},"end":{"line":39,"column":72}},"30":{"start":{"line":39,"column":50},"end":{"line":39,"column":68}},"31":{"start":{"line":40,"column":2},"end":{"line":40,"column":74}},"32":{"start":{"line":40,"column":50},"end":{"line":40,"column":70}},"33":{"start":{"line":41,"column":2},"end":{"line":41,"column":80}},"34":{"start":{"line":41,"column":50},"end":{"line":41,"column":76}},"35":{"start":{"line":42,"column":2},"end":{"line":42,"column":71}},"36":{"start":{"line":42,"column":50},"end":{"line":42,"column":67}},"37":{"start":{"line":43,"column":2},"end":{"line":43,"column":75}},"38":{"start":{"line":43,"column":50},"end":{"line":43,"column":71}},"39":{"start":{"line":44,"column":2},"end":{"line":44,"column":75}},"40":{"start":{"line":44,"column":50},"end":{"line":44,"column":71}},"41":{"start":{"line":45,"column":2},"end":{"line":45,"column":63}},"42":{"start":{"line":45,"column":50},"end":{"line":45,"column":59}},"43":{"start":{"line":46,"column":2},"end":{"line":46,"column":73}},"44":{"start":{"line":46,"column":50},"end":{"line":46,"column":69}},"45":{"start":{"line":47,"column":2},"end":{"line":47,"column":81}},"46":{"start":{"line":47,"column":50},"end":{"line":47,"column":77}},"47":{"start":{"line":48,"column":2},"end":{"line":48,"column":66}},"48":{"start":{"line":48,"column":50},"end":{"line":48,"column":62}},"49":{"start":{"line":49,"column":2},"end":{"line":49,"column":75}},"50":{"start":{"line":49,"column":50},"end":{"line":49,"column":71}},"51":{"start":{"line":50,"column":2},"end":{"line":50,"column":75}},"52":{"start":{"line":50,"column":50},"end":{"line":50,"column":71}},"53":{"start":{"line":51,"column":2},"end":{"line":51,"column":72}},"54":{"start":{"line":51,"column":50},"end":{"line":51,"column":68}},"55":{"start":{"line":52,"column":2},"end":{"line":52,"column":78}},"56":{"start":{"line":52,"column":50},"end":{"line":52,"column":74}},"57":{"start":{"line":53,"column":2},"end":{"line":53,"column":79}},"58":{"start":{"line":53,"column":50},"end":{"line":53,"column":75}},"59":{"start":{"line":54,"column":2},"end":{"line":54,"column":72}},"60":{"start":{"line":54,"column":50},"end":{"line":54,"column":68}},"61":{"start":{"line":55,"column":2},"end":{"line":55,"column":78}},"62":{"start":{"line":55,"column":50},"end":{"line":55,"column":74}},"63":{"start":{"line":56,"column":2},"end":{"line":56,"column":87}},"64":{"start":{"line":56,"column":50},"end":{"line":56,"column":83}},"65":{"start":{"line":57,"column":2},"end":{"line":57,"column":70}},"66":{"start":{"line":57,"column":50},"end":{"line":57,"column":66}},"67":{"start":{"line":66,"column":0},"end":{"line":95,"column":1}},"68":{"start":{"line":67,"column":2},"end":{"line":80,"column":5}},"69":{"start":{"line":68,"column":4},"end":{"line":69,"column":42}},"70":{"start":{"line":71,"column":4},"end":{"line":79,"column":5}},"71":{"start":{"line":72,"column":6},"end":{"line":72,"column":35}},"72":{"start":{"line":73,"column":6},"end":{"line":73,"column":35}},"73":{"start":{"line":75,"column":6},"end":{"line":78,"column":7}},"74":{"start":{"line":76,"column":8},"end":{"line":76,"column":45}},"75":{"start":{"line":77,"column":8},"end":{"line":77,"column":47}},"76":{"start":{"line":82,"column":2},"end":{"line":91,"column":5}},"77":{"start":{"line":83,"column":4},"end":{"line":84,"column":42}},"78":{"start":{"line":86,"column":4},"end":{"line":86,"column":43}},"79":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"80":{"start":{"line":88,"column":6},"end":{"line":88,"column":35}},"81":{"start":{"line":89,"column":6},"end":{"line":89,"column":35}},"82":{"start":{"line":93,"column":2},"end":{"line":93,"column":55}},"83":{"start":{"line":94,"column":2},"end":{"line":94,"column":57}},"84":{"start":{"line":97,"column":0},"end":{"line":107,"column":29}},"85":{"start":{"line":115,"column":0},"end":{"line":139,"column":1}},"86":{"start":{"line":116,"column":2},"end":{"line":117,"column":47}},"87":{"start":{"line":119,"column":2},"end":{"line":122,"column":32}},"88":{"start":{"line":124,"column":2},"end":{"line":128,"column":5}},"89":{"start":{"line":125,"column":4},"end":{"line":125,"column":48}},"90":{"start":{"line":126,"column":4},"end":{"line":126,"column":82}},"91":{"start":{"line":127,"column":4},"end":{"line":127,"column":41}},"92":{"start":{"line":130,"column":2},"end":{"line":136,"column":5}},"93":{"start":{"line":131,"column":4},"end":{"line":131,"column":48}},"94":{"start":{"line":132,"column":4},"end":{"line":135,"column":32}},"95":{"start":{"line":138,"column":2},"end":{"line":138,"column":11}},"96":{"start":{"line":149,"column":0},"end":{"line":163,"column":1}},"97":{"start":{"line":150,"column":2},"end":{"line":150,"column":24}},"98":{"start":{"line":151,"column":2},"end":{"line":151,"column":21}},"99":{"start":{"line":152,"column":2},"end":{"line":162,"column":5}},"100":{"start":{"line":153,"column":4},"end":{"line":153,"column":25}},"101":{"start":{"line":154,"column":4},"end":{"line":154,"column":21}},"102":{"start":{"line":155,"column":4},"end":{"line":161,"column":5}},"103":{"start":{"line":156,"column":6},"end":{"line":160,"column":7}},"104":{"start":{"line":157,"column":8},"end":{"line":157,"column":39}},"105":{"start":{"line":159,"column":8},"end":{"line":159,"column":40}},"106":{"start":{"line":171,"column":0},"end":{"line":181,"column":1}},"107":{"start":{"line":172,"column":2},"end":{"line":180,"column":5}},"108":{"start":{"line":173,"column":4},"end":{"line":173,"column":25}},"109":{"start":{"line":174,"column":4},"end":{"line":179,"column":5}},"110":{"start":{"line":175,"column":6},"end":{"line":177,"column":65}},"111":{"start":{"line":178,"column":6},"end":{"line":178,"column":55}},"112":{"start":{"line":183,"column":0},"end":{"line":194,"column":1}},"113":{"start":{"line":184,"column":2},"end":{"line":184,"column":18}},"114":{"start":{"line":185,"column":2},"end":{"line":192,"column":5}},"115":{"start":{"line":186,"column":4},"end":{"line":186,"column":25}},"116":{"start":{"line":187,"column":4},"end":{"line":191,"column":5}},"117":{"start":{"line":188,"column":6},"end":{"line":188,"column":49}},"118":{"start":{"line":189,"column":6},"end":{"line":189,"column":52}},"119":{"start":{"line":190,"column":6},"end":{"line":190,"column":45}},"120":{"start":{"line":193,"column":2},"end":{"line":193,"column":30}},"121":{"start":{"line":196,"column":0},"end":{"line":204,"column":1}},"122":{"start":{"line":197,"column":2},"end":{"line":203,"column":5}},"123":{"start":{"line":198,"column":4},"end":{"line":198,"column":25}},"124":{"start":{"line":199,"column":4},"end":{"line":202,"column":5}},"125":{"start":{"line":200,"column":6},"end":{"line":200,"column":43}},"126":{"start":{"line":201,"column":6},"end":{"line":201,"column":22}},"127":{"start":{"line":206,"column":0},"end":{"line":255,"column":1}},"128":{"start":{"line":207,"column":2},"end":{"line":213,"column":40}},"129":{"start":{"line":215,"column":2},"end":{"line":224,"column":3}},"130":{"start":{"line":216,"column":4},"end":{"line":219,"column":25}},"131":{"start":{"line":220,"column":4},"end":{"line":220,"column":37}},"132":{"start":{"line":221,"column":4},"end":{"line":221,"column":37}},"133":{"start":{"line":222,"column":4},"end":{"line":222,"column":37}},"134":{"start":{"line":223,"column":4},"end":{"line":223,"column":37}},"135":{"start":{"line":226,"column":2},"end":{"line":226,"column":61}},"136":{"start":{"line":226,"column":34},"end":{"line":226,"column":57}},"137":{"start":{"line":227,"column":2},"end":{"line":232,"column":5}},"138":{"start":{"line":228,"column":4},"end":{"line":228,"column":25}},"139":{"start":{"line":229,"column":4},"end":{"line":231,"column":5}},"140":{"start":{"line":230,"column":6},"end":{"line":230,"column":24}},"141":{"start":{"line":234,"column":2},"end":{"line":234,"column":18}},"142":{"start":{"line":235,"column":2},"end":{"line":235,"column":18}},"143":{"start":{"line":237,"column":2},"end":{"line":241,"column":5}},"144":{"start":{"line":238,"column":4},"end":{"line":238,"column":25}},"145":{"start":{"line":239,"column":4},"end":{"line":239,"column":19}},"146":{"start":{"line":240,"column":4},"end":{"line":240,"column":19}},"147":{"start":{"line":243,"column":2},"end":{"line":251,"column":5}},"148":{"start":{"line":244,"column":4},"end":{"line":244,"column":25}},"149":{"start":{"line":245,"column":4},"end":{"line":248,"column":7}},"150":{"start":{"line":246,"column":6},"end":{"line":246,"column":18}},"151":{"start":{"line":247,"column":6},"end":{"line":247,"column":18}},"152":{"start":{"line":249,"column":4},"end":{"line":249,"column":45}},"153":{"start":{"line":249,"column":28},"end":{"line":249,"column":43}},"154":{"start":{"line":250,"column":4},"end":{"line":250,"column":45}},"155":{"start":{"line":250,"column":28},"end":{"line":250,"column":43}},"156":{"start":{"line":253,"column":2},"end":{"line":253,"column":43}},"157":{"start":{"line":254,"column":2},"end":{"line":254,"column":44}},"158":{"start":{"line":257,"column":0},"end":{"line":274,"column":1}},"159":{"start":{"line":258,"column":2},"end":{"line":273,"column":5}},"160":{"start":{"line":259,"column":4},"end":{"line":262,"column":15}},"161":{"start":{"line":263,"column":4},"end":{"line":270,"column":5}},"162":{"start":{"line":264,"column":6},"end":{"line":264,"column":23}},"163":{"start":{"line":265,"column":6},"end":{"line":265,"column":17}},"164":{"start":{"line":266,"column":6},"end":{"line":266,"column":17}},"165":{"start":{"line":268,"column":6},"end":{"line":268,"column":26}},"166":{"start":{"line":269,"column":6},"end":{"line":269,"column":47}},"167":{"start":{"line":271,"column":4},"end":{"line":271,"column":55}},"168":{"start":{"line":272,"column":4},"end":{"line":272,"column":52}},"169":{"start":{"line":276,"column":0},"end":{"line":289,"column":1}},"170":{"start":{"line":277,"column":2},"end":{"line":288,"column":5}},"171":{"start":{"line":278,"column":4},"end":{"line":278,"column":25}},"172":{"start":{"line":279,"column":4},"end":{"line":287,"column":5}},"173":{"start":{"line":280,"column":6},"end":{"line":282,"column":7}},"174":{"start":{"line":281,"column":8},"end":{"line":281,"column":39}},"175":{"start":{"line":283,"column":6},"end":{"line":286,"column":7}},"176":{"start":{"line":284,"column":18},"end":{"line":284,"column":62}},"177":{"start":{"line":284,"column":63},"end":{"line":284,"column":69}},"178":{"start":{"line":285,"column":18},"end":{"line":285,"column":62}},"179":{"start":{"line":285,"column":63},"end":{"line":285,"column":69}},"180":{"start":{"line":291,"column":0},"end":{"line":298,"column":1}},"181":{"start":{"line":292,"column":2},"end":{"line":297,"column":5}},"182":{"start":{"line":293,"column":4},"end":{"line":293,"column":25}},"183":{"start":{"line":294,"column":4},"end":{"line":296,"column":5}},"184":{"start":{"line":295,"column":6},"end":{"line":295,"column":28}},"185":{"start":{"line":300,"column":0},"end":{"line":321,"column":1}},"186":{"start":{"line":301,"column":2},"end":{"line":314,"column":5}},"187":{"start":{"line":302,"column":4},"end":{"line":313,"column":5}},"188":{"start":{"line":303,"column":6},"end":{"line":307,"column":47}},"189":{"start":{"line":309,"column":6},"end":{"line":309,"column":39}},"190":{"start":{"line":310,"column":6},"end":{"line":310,"column":40}},"191":{"start":{"line":311,"column":6},"end":{"line":311,"column":36}},"192":{"start":{"line":312,"column":6},"end":{"line":312,"column":37}},"193":{"start":{"line":316,"column":2},"end":{"line":320,"column":5}},"194":{"start":{"line":317,"column":4},"end":{"line":319,"column":5}},"195":{"start":{"line":318,"column":6},"end":{"line":318,"column":22}},"196":{"start":{"line":323,"column":0},"end":{"line":334,"column":1}},"197":{"start":{"line":324,"column":2},"end":{"line":333,"column":5}},"198":{"start":{"line":325,"column":4},"end":{"line":332,"column":5}},"199":{"start":{"line":326,"column":6},"end":{"line":326,"column":29}},"200":{"start":{"line":327,"column":6},"end":{"line":329,"column":7}},"201":{"start":{"line":328,"column":8},"end":{"line":328,"column":28}},"202":{"start":{"line":330,"column":6},"end":{"line":330,"column":54}},"203":{"start":{"line":331,"column":6},"end":{"line":331,"column":22}},"204":{"start":{"line":336,"column":0},"end":{"line":356,"column":1}},"205":{"start":{"line":337,"column":2},"end":{"line":337,"column":40}},"206":{"start":{"line":338,"column":2},"end":{"line":355,"column":5}},"207":{"start":{"line":339,"column":4},"end":{"line":339,"column":23}},"208":{"start":{"line":340,"column":4},"end":{"line":354,"column":7}},"209":{"start":{"line":341,"column":6},"end":{"line":341,"column":27}},"210":{"start":{"line":342,"column":6},"end":{"line":342,"column":34}},"211":{"start":{"line":343,"column":6},"end":{"line":352,"column":9}},"212":{"start":{"line":344,"column":8},"end":{"line":351,"column":18}},"213":{"start":{"line":353,"column":6},"end":{"line":353,"column":28}},"214":{"start":{"line":358,"column":0},"end":{"line":380,"column":1}},"215":{"start":{"line":359,"column":2},"end":{"line":379,"column":5}},"216":{"start":{"line":360,"column":4},"end":{"line":360,"column":25}},"217":{"start":{"line":361,"column":4},"end":{"line":378,"column":5}},"218":{"start":{"line":362,"column":6},"end":{"line":366,"column":35}},"219":{"start":{"line":367,"column":6},"end":{"line":367,"column":36}},"220":{"start":{"line":368,"column":6},"end":{"line":368,"column":22}},"221":{"start":{"line":369,"column":6},"end":{"line":375,"column":8}},"222":{"start":{"line":376,"column":6},"end":{"line":376,"column":28}},"223":{"start":{"line":377,"column":6},"end":{"line":377,"column":28}},"224":{"start":{"line":382,"column":0},"end":{"line":384,"column":1}},"225":{"start":{"line":383,"column":2},"end":{"line":383,"column":49}},"226":{"start":{"line":386,"column":0},"end":{"line":392,"column":1}},"227":{"start":{"line":387,"column":2},"end":{"line":387,"column":20}},"228":{"start":{"line":388,"column":2},"end":{"line":390,"column":5}},"229":{"start":{"line":389,"column":4},"end":{"line":389,"column":34}},"230":{"start":{"line":391,"column":2},"end":{"line":391,"column":18}}},"branchMap":{"1":{"line":21,"type":"cond-expr","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":49}},{"start":{"line":21,"column":52},"end":{"line":21,"column":63}}]},"2":{"line":21,"type":"binary-expr","locations":[{"start":{"line":21,"column":13},"end":{"line":21,"column":17}},{"start":{"line":21,"column":21},"end":{"line":21,"column":37}}]},"3":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":4},"end":{"line":71,"column":4}},{"start":{"line":71,"column":4},"end":{"line":71,"column":4}}]},"4":{"line":75,"type":"if","locations":[{"start":{"line":75,"column":6},"end":{"line":75,"column":6}},{"start":{"line":75,"column":6},"end":{"line":75,"column":6}}]},"5":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"6":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"7":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":6},"end":{"line":156,"column":6}},{"start":{"line":156,"column":6},"end":{"line":156,"column":6}}]},"8":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":10},"end":{"line":156,"column":32}},{"start":{"line":156,"column":36},"end":{"line":156,"column":58}}]},"9":{"line":174,"type":"if","locations":[{"start":{"line":174,"column":4},"end":{"line":174,"column":4}},{"start":{"line":174,"column":4},"end":{"line":174,"column":4}}]},"10":{"line":174,"type":"binary-expr","locations":[{"start":{"line":174,"column":8},"end":{"line":174,"column":18}},{"start":{"line":174,"column":22},"end":{"line":174,"column":33}}]},"11":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"12":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"13":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":16},"end":{"line":212,"column":34}},{"start":{"line":212,"column":38},"end":{"line":212,"column":39}}]},"14":{"line":213,"type":"binary-expr","locations":[{"start":{"line":213,"column":16},"end":{"line":213,"column":34}},{"start":{"line":213,"column":38},"end":{"line":213,"column":39}}]},"15":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":4},"end":{"line":229,"column":4}},{"start":{"line":229,"column":4},"end":{"line":229,"column":4}}]},"16":{"line":249,"type":"if","locations":[{"start":{"line":249,"column":4},"end":{"line":249,"column":4}},{"start":{"line":249,"column":4},"end":{"line":249,"column":4}}]},"17":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":4},"end":{"line":250,"column":4}},{"start":{"line":250,"column":4},"end":{"line":250,"column":4}}]},"18":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"19":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"20":{"line":280,"type":"if","locations":[{"start":{"line":280,"column":6},"end":{"line":280,"column":6}},{"start":{"line":280,"column":6},"end":{"line":280,"column":6}}]},"21":{"line":280,"type":"binary-expr","locations":[{"start":{"line":280,"column":10},"end":{"line":280,"column":31}},{"start":{"line":280,"column":35},"end":{"line":280,"column":56}}]},"22":{"line":283,"type":"switch","locations":[{"start":{"line":284,"column":8},"end":{"line":284,"column":69}},{"start":{"line":285,"column":8},"end":{"line":285,"column":69}}]},"23":{"line":294,"type":"if","locations":[{"start":{"line":294,"column":4},"end":{"line":294,"column":4}},{"start":{"line":294,"column":4},"end":{"line":294,"column":4}}]},"24":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":4},"end":{"line":302,"column":4}},{"start":{"line":302,"column":4},"end":{"line":302,"column":4}}]},"25":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":4},"end":{"line":317,"column":4}},{"start":{"line":317,"column":4},"end":{"line":317,"column":4}}]},"26":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":4},"end":{"line":325,"column":4}},{"start":{"line":325,"column":4},"end":{"line":325,"column":4}}]},"27":{"line":327,"type":"if","locations":[{"start":{"line":327,"column":6},"end":{"line":327,"column":6}},{"start":{"line":327,"column":6},"end":{"line":327,"column":6}}]},"28":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":4},"end":{"line":361,"column":4}},{"start":{"line":361,"column":4},"end":{"line":361,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"./lodash\"),","    acyclic = require(\"./acyclic\"),","    normalize = require(\"./normalize\"),","    rank = require(\"./rank\"),","    normalizeRanks = require(\"./util\").normalizeRanks,","    parentDummyChains = require(\"./parent-dummy-chains\"),","    removeEmptyRanks = require(\"./util\").removeEmptyRanks,","    nestingGraph = require(\"./nesting-graph\"),","    addBorderSegments = require(\"./add-border-segments\"),","    coordinateSystem = require(\"./coordinate-system\"),","    order = require(\"./order\"),","    position = require(\"./position\"),","    util = require(\"./util\"),","    Graph = require(\"./graphlib\").Graph;","","module.exports = layout;","","function layout(g, opts) {","  var time = opts && opts.debugTiming ? util.time : util.notime;","  time(\"layout\", function() {","    var layoutGraph = time(\"  buildLayoutGraph\",","                               function() { return buildLayoutGraph(g); });","    time(\"  runLayout\",        function() { runLayout(layoutGraph, time); });","    time(\"  updateInputGraph\", function() { updateInputGraph(g, layoutGraph); });","  });","}","","function runLayout(g, time) {","  time(\"    makeSpaceForEdgeLabels\", function() { makeSpaceForEdgeLabels(g); });","  time(\"    removeSelfEdges\",        function() { removeSelfEdges(g); });","  time(\"    acyclic\",                function() { acyclic.run(g); });","  time(\"    nestingGraph.run\",       function() { nestingGraph.run(g); });","  time(\"    rank\",                   function() { rank(util.asNonCompoundGraph(g)); });","  time(\"    injectEdgeLabelProxies\", function() { injectEdgeLabelProxies(g); });","  time(\"    removeEmptyRanks\",       function() { removeEmptyRanks(g); });","  time(\"    nestingGraph.cleanup\",   function() { nestingGraph.cleanup(g); });","  time(\"    normalizeRanks\",         function() { normalizeRanks(g); });","  time(\"    assignRankMinMax\",       function() { assignRankMinMax(g); });","  time(\"    removeEdgeLabelProxies\", function() { removeEdgeLabelProxies(g); });","  time(\"    normalize.run\",          function() { normalize.run(g); });","  time(\"    parentDummyChains\",      function() { parentDummyChains(g); });","  time(\"    addBorderSegments\",      function() { addBorderSegments(g); });","  time(\"    order\",                  function() { order(g); });","  time(\"    insertSelfEdges\",        function() { insertSelfEdges(g); });","  time(\"    adjustCoordinateSystem\", function() { coordinateSystem.adjust(g); });","  time(\"    position\",               function() { position(g); });","  time(\"    positionSelfEdges\",      function() { positionSelfEdges(g); });","  time(\"    removeBorderNodes\",      function() { removeBorderNodes(g); });","  time(\"    normalize.undo\",         function() { normalize.undo(g); });","  time(\"    fixupEdgeLabelCoords\",   function() { fixupEdgeLabelCoords(g); });","  time(\"    undoCoordinateSystem\",   function() { coordinateSystem.undo(g); });","  time(\"    translateGraph\",         function() { translateGraph(g); });","  time(\"    assignNodeIntersects\",   function() { assignNodeIntersects(g); });","  time(\"    reversePoints\",          function() { reversePointsForReversedEdges(g); });","  time(\"    acyclic.undo\",           function() { acyclic.undo(g); });","}","","/*"," * Copies final layout information from the layout graph back to the input"," * graph. This process only copies whitelisted attributes from the layout graph"," * to the input graph, so it serves as a good place to determine what"," * attributes can influence layout."," */","function updateInputGraph(inputGraph, layoutGraph) {","  _.each(inputGraph.nodes(), function(v) {","    var inputLabel = inputGraph.node(v),","        layoutLabel = layoutGraph.node(v);","","    if (inputLabel) {","      inputLabel.x = layoutLabel.x;","      inputLabel.y = layoutLabel.y;","","      if (layoutGraph.children(v).length) {","        inputLabel.width = layoutLabel.width;","        inputLabel.height = layoutLabel.height;","      }","    }","  });","","  _.each(inputGraph.edges(), function(e) {","    var inputLabel = inputGraph.edge(e),","        layoutLabel = layoutGraph.edge(e);","","    inputLabel.points = layoutLabel.points;","    if (_.has(layoutLabel, \"x\")) {","      inputLabel.x = layoutLabel.x;","      inputLabel.y = layoutLabel.y;","    }","  });","","  inputGraph.graph().width = layoutGraph.graph().width;","  inputGraph.graph().height = layoutGraph.graph().height;","}","","var graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],","    graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: \"tb\" },","    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],","    nodeNumAttrs = [\"width\", \"height\"],","    nodeDefaults = { width: 0, height: 0 },","    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],","    edgeDefaults = {","      minlen: 1, weight: 1, width: 0, height: 0,","      labeloffset: 10, labelpos: \"r\"","    },","    edgeAttrs = [\"labelpos\"];","","/*"," * Constructs a new graph from the input graph, which can be used for layout."," * This process copies only whitelisted attributes from the input graph to the"," * layout graph. Thus this function serves as a good place to determine what"," * attributes can influence layout."," */","function buildLayoutGraph(inputGraph) {","  var g = new Graph({ multigraph: true, compound: true }),","      graph = canonicalize(inputGraph.graph());","","  g.setGraph(_.merge({},","    graphDefaults,","    selectNumberAttrs(graph, graphNumAttrs),","    _.pick(graph, graphAttrs)));","","  _.each(inputGraph.nodes(), function(v) {","    var node = canonicalize(inputGraph.node(v));","    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));","    g.setParent(v, inputGraph.parent(v));","  });","","  _.each(inputGraph.edges(), function(e) {","    var edge = canonicalize(inputGraph.edge(e));","    g.setEdge(e, _.merge({},","      edgeDefaults,","      selectNumberAttrs(edge, edgeNumAttrs),","      _.pick(edge, edgeAttrs)));","  });","","  return g;","}","","/*"," * This idea comes from the Gansner paper: to account for edge labels in our"," * layout we split each rank in half by doubling minlen and halving ranksep."," * Then we can place labels at these mid-points between nodes."," *"," * We also add some minimal padding to the width to push the label for the edge"," * away from the edge itself a bit."," */","function makeSpaceForEdgeLabels(g) {","  var graph = g.graph();","  graph.ranksep /= 2;","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    edge.minlen *= 2;","    if (edge.labelpos.toLowerCase() !== \"c\") {","      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {","        edge.width += edge.labeloffset;","      } else {","        edge.height += edge.labeloffset;","      }","    }","  });","}","","/*"," * Creates temporary dummy nodes that capture the rank in which each edge's"," * label is going to, if it has one of non-zero width and height. We do this"," * so that we can safely remove empty ranks while preserving balance for the"," * label's position."," */","function injectEdgeLabelProxies(g) {","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    if (edge.width && edge.height) {","      var v = g.node(e.v),","          w = g.node(e.w),","          label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };","      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");","    }","  });","}","","function assignRankMinMax(g) {","  var maxRank = 0;","  _.each(g.nodes(), function(v) {","    var node = g.node(v);","    if (node.borderTop) {","      node.minRank = g.node(node.borderTop).rank;","      node.maxRank = g.node(node.borderBottom).rank;","      maxRank = _.max(maxRank, node.maxRank);","    }","  });","  g.graph().maxRank = maxRank;","}","","function removeEdgeLabelProxies(g) {","  _.each(g.nodes(), function(v) {","    var node = g.node(v);","    if (node.dummy === \"edge-proxy\") {","      g.edge(node.e).labelRank = node.rank;","      g.removeNode(v);","    }","  });","}","","function translateGraph(g) {","  var minX = Number.POSITIVE_INFINITY,","      maxX = 0,","      minY = Number.POSITIVE_INFINITY,","      maxY = 0,","      graphLabel = g.graph(),","      marginX = graphLabel.marginx || 0,","      marginY = graphLabel.marginy || 0;","","  function getExtremes(attrs) {","    var x = attrs.x,","        y = attrs.y,","        w = attrs.width,","        h = attrs.height;","    minX = Math.min(minX, x - w / 2);","    maxX = Math.max(maxX, x + w / 2);","    minY = Math.min(minY, y - h / 2);","    maxY = Math.max(maxY, y + h / 2);","  }","","  _.each(g.nodes(), function(v) { getExtremes(g.node(v)); });","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    if (_.has(edge, \"x\")) {","      getExtremes(edge);","    }","  });","","  minX -= marginX;","  minY -= marginY;","","  _.each(g.nodes(), function(v) {","    var node = g.node(v);","    node.x -= minX;","    node.y -= minY;","  });","","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    _.each(edge.points, function(p) {","      p.x -= minX;","      p.y -= minY;","    });","    if (_.has(edge, \"x\")) { edge.x -= minX; }","    if (_.has(edge, \"y\")) { edge.y -= minY; }","  });","","  graphLabel.width = maxX - minX + marginX;","  graphLabel.height = maxY - minY + marginY;","}","","function assignNodeIntersects(g) {","  _.each(g.edges(), function(e) {","    var edge = g.edge(e),","        nodeV = g.node(e.v),","        nodeW = g.node(e.w),","        p1, p2;","    if (!edge.points) {","      edge.points = [];","      p1 = nodeW;","      p2 = nodeV;","    } else {","      p1 = edge.points[0];","      p2 = edge.points[edge.points.length - 1];","    }","    edge.points.unshift(util.intersectRect(nodeV, p1));","    edge.points.push(util.intersectRect(nodeW, p2));","  });","}","","function fixupEdgeLabelCoords(g) {","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    if (_.has(edge, \"x\")) {","      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {","        edge.width -= edge.labeloffset;","      }","      switch (edge.labelpos) {","        case \"l\": edge.x -= edge.width / 2 + edge.labeloffset; break;","        case \"r\": edge.x += edge.width / 2 + edge.labeloffset; break;","      }","    }","  });","}","","function reversePointsForReversedEdges(g) {","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    if (edge.reversed) {","      edge.points.reverse();","    }","  });","}","","function removeBorderNodes(g) {","  _.each(g.nodes(), function(v) {","    if (g.children(v).length) {","      var node = g.node(v),","          t = g.node(node.borderTop),","          b = g.node(node.borderBottom),","          l = g.node(_.last(node.borderLeft)),","          r = g.node(_.last(node.borderRight));","","      node.width = Math.abs(r.x - l.x);","      node.height = Math.abs(b.y - t.y);","      node.x = l.x + node.width / 2;","      node.y = t.y + node.height / 2;","    }","  });","","  _.each(g.nodes(), function(v) {","    if (g.node(v).dummy === \"border\") {","      g.removeNode(v);","    }","  });","}","","function removeSelfEdges(g) {","  _.each(g.edges(), function(e) {","    if (e.v === e.w) {","      var node = g.node(e.v);","      if (!node.selfEdges) {","        node.selfEdges = [];","      }","      node.selfEdges.push({ e: e, label: g.edge(e) });","      g.removeEdge(e);","    }","  });","}","","function insertSelfEdges(g) {","  var layers = util.buildLayerMatrix(g);","  _.each(layers, function(layer) {","    var orderShift = 0;","    _.each(layer, function(v, i) {","      var node = g.node(v);","      node.order = i + orderShift;","      _.each(node.selfEdges, function(selfEdge) {","        util.addDummyNode(g, \"selfedge\", {","          width: selfEdge.label.width,","          height: selfEdge.label.height,","          rank: node.rank,","          order: i + (++orderShift),","          e: selfEdge.e,","          label: selfEdge.label","        }, \"_se\");","      });","      delete node.selfEdges;","    });","  });","}","","function positionSelfEdges(g) {","  _.each(g.nodes(), function(v) {","    var node = g.node(v);","    if (node.dummy === \"selfedge\") {","      var selfNode = g.node(node.e.v),","          x = selfNode.x + selfNode.width / 2,","          y = selfNode.y,","          dx = node.x - x,","          dy = selfNode.height / 2;","      g.setEdge(node.e, node.label);","      g.removeNode(v);","      node.label.points = [","        { x: x + 2 * dx / 3, y: y - dy },","        { x: x + 5 * dx / 6, y: y - dy },","        { x: x +     dx    , y: y },","        { x: x + 5 * dx / 6, y: y + dy },","        { x: x + 2 * dx / 3, y: y + dy },","      ];","      node.label.x = node.x;","      node.label.y = node.y;","    }","  });","}","","function selectNumberAttrs(obj, attrs) {","  return _.mapValues(_.pick(obj, attrs), Number);","}","","function canonicalize(attrs) {","  var newAttrs = {};","  _.each(attrs, function(v, k) {","    newAttrs[k.toLowerCase()] = v;","  });","  return newAttrs;","}",""],"l":{"3":1,"18":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"66":1,"67":0,"68":0,"71":0,"72":0,"73":0,"75":0,"76":0,"77":0,"82":0,"83":0,"86":0,"87":0,"88":0,"89":0,"93":0,"94":0,"97":1,"115":1,"116":0,"119":0,"124":0,"125":0,"126":0,"127":0,"130":0,"131":0,"132":0,"138":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"159":0,"171":1,"172":0,"173":0,"174":0,"175":0,"178":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"193":0,"196":1,"197":0,"198":0,"199":0,"200":0,"201":0,"206":1,"207":0,"215":1,"216":0,"220":0,"221":0,"222":0,"223":0,"226":0,"227":0,"228":0,"229":0,"230":0,"234":0,"235":0,"237":0,"238":0,"239":0,"240":0,"243":0,"244":0,"245":0,"246":0,"247":0,"249":0,"250":0,"253":0,"254":0,"257":1,"258":0,"259":0,"263":0,"264":0,"265":0,"266":0,"268":0,"269":0,"271":0,"272":0,"276":1,"277":0,"278":0,"279":0,"280":0,"281":0,"283":0,"284":0,"285":0,"291":1,"292":0,"293":0,"294":0,"295":0,"300":1,"301":0,"302":0,"303":0,"309":0,"310":0,"311":0,"312":0,"316":0,"317":0,"318":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"330":0,"331":0,"336":1,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"353":0,"358":1,"359":0,"360":0,"361":0,"362":0,"367":0,"368":0,"369":0,"376":0,"377":0,"382":1,"383":0,"386":1,"387":0,"388":0,"389":0,"391":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/lodash.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/lodash.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":1},"b":{"1":[1,0],"2":[0,1]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":11}},"2":{"start":{"line":5,"column":0},"end":{"line":9,"column":1}},"3":{"start":{"line":6,"column":2},"end":{"line":8,"column":16}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":31}},"5":{"start":{"line":11,"column":0},"end":{"line":13,"column":1}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":20}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":24}}},"branchMap":{"1":{"line":5,"type":"if","locations":[{"start":{"line":5,"column":0},"end":{"line":5,"column":0}},{"start":{"line":5,"column":0},"end":{"line":5,"column":0}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":0},"end":{"line":11,"column":0}},{"start":{"line":11,"column":0},"end":{"line":11,"column":0}}]}},"code":["/* global window */","","var lodash;","","if (typeof require === \"function\") {","  try {","    lodash = require(\"lodash\");","  } catch (e) {}","}","","if (!lodash) {","  lodash = window._;","}","","module.exports = lodash;",""],"l":{"3":1,"5":1,"6":1,"7":1,"11":1,"12":0,"15":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/acyclic.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/acyclic.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":1,"15":0,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"run","line":11,"loc":{"start":{"line":11,"column":0},"end":{"line":11,"column":16}}},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":14},"end":{"line":15,"column":26}}},"3":{"name":"weightFn","line":23,"loc":{"start":{"line":23,"column":2},"end":{"line":23,"column":23}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":11},"end":{"line":24,"column":23}}},"5":{"name":"dfsFAS","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":19}}},"6":{"name":"dfs","line":35,"loc":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}}},"7":{"name":"(anonymous_7)","line":41,"loc":{"start":{"line":41,"column":26},"end":{"line":41,"column":38}}},"8":{"name":"undo","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":17}}},"9":{"name":"(anonymous_9)","line":56,"loc":{"start":{"line":56,"column":20},"end":{"line":56,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":40}},"2":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":11,"column":0},"end":{"line":28,"column":1}},"4":{"start":{"line":12,"column":2},"end":{"line":14,"column":29}},"5":{"start":{"line":15,"column":2},"end":{"line":21,"column":5}},"6":{"start":{"line":16,"column":4},"end":{"line":16,"column":26}},"7":{"start":{"line":17,"column":4},"end":{"line":17,"column":20}},"8":{"start":{"line":18,"column":4},"end":{"line":18,"column":31}},"9":{"start":{"line":19,"column":4},"end":{"line":19,"column":26}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":50}},"11":{"start":{"line":23,"column":2},"end":{"line":27,"column":3}},"12":{"start":{"line":24,"column":4},"end":{"line":26,"column":6}},"13":{"start":{"line":25,"column":6},"end":{"line":25,"column":30}},"14":{"start":{"line":30,"column":0},"end":{"line":53,"column":1}},"15":{"start":{"line":31,"column":2},"end":{"line":33,"column":19}},"16":{"start":{"line":35,"column":2},"end":{"line":49,"column":3}},"17":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"18":{"start":{"line":37,"column":6},"end":{"line":37,"column":13}},"19":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"20":{"start":{"line":40,"column":4},"end":{"line":40,"column":20}},"21":{"start":{"line":41,"column":4},"end":{"line":47,"column":7}},"22":{"start":{"line":42,"column":6},"end":{"line":46,"column":7}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":20}},"24":{"start":{"line":45,"column":8},"end":{"line":45,"column":17}},"25":{"start":{"line":48,"column":4},"end":{"line":48,"column":20}},"26":{"start":{"line":51,"column":2},"end":{"line":51,"column":25}},"27":{"start":{"line":52,"column":2},"end":{"line":52,"column":13}},"28":{"start":{"line":55,"column":0},"end":{"line":67,"column":1}},"29":{"start":{"line":56,"column":2},"end":{"line":66,"column":5}},"30":{"start":{"line":57,"column":4},"end":{"line":57,"column":26}},"31":{"start":{"line":58,"column":4},"end":{"line":65,"column":5}},"32":{"start":{"line":59,"column":6},"end":{"line":59,"column":22}},"33":{"start":{"line":61,"column":6},"end":{"line":61,"column":42}},"34":{"start":{"line":62,"column":6},"end":{"line":62,"column":28}},"35":{"start":{"line":63,"column":6},"end":{"line":63,"column":31}},"36":{"start":{"line":64,"column":6},"end":{"line":64,"column":46}}},"branchMap":{"1":{"line":12,"type":"cond-expr","locations":[{"start":{"line":13,"column":18},"end":{"line":13,"column":43}},{"start":{"line":14,"column":18},"end":{"line":14,"column":27}}]},"2":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"./lodash\"),","    greedyFAS = require(\"./greedy-fas\");","","module.exports = {","  run: run,","  undo: undo","};","","function run(g) {","  var fas = (g.graph().acyclicer === \"greedy\"","                ? greedyFAS(g, weightFn(g))","                : dfsFAS(g));","  _.each(fas, function(e) {","    var label = g.edge(e);","    g.removeEdge(e);","    label.forwardName = e.name;","    label.reversed = true;","    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));","  });","","  function weightFn(g) {","    return function(e) {","      return g.edge(e).weight;","    };","  }","}","","function dfsFAS(g) {","  var fas = [],","      stack = {},","      visited = {};","","  function dfs(v) {","    if (_.has(visited, v)) {","      return;","    }","    visited[v] = true;","    stack[v] = true;","    _.each(g.outEdges(v), function(e) {","      if (_.has(stack, e.w)) {","        fas.push(e);","      } else {","        dfs(e.w);","      }","    });","    delete stack[v];","  }","","  _.each(g.nodes(), dfs);","  return fas;","}","","function undo(g) {","  _.each(g.edges(), function(e) {","    var label = g.edge(e);","    if (label.reversed) {","      g.removeEdge(e);","","      var forwardName = label.forwardName;","      delete label.reversed;","      delete label.forwardName;","      g.setEdge(e.w, e.v, label, forwardName);","    }","  });","}",""],"l":{"3":1,"6":1,"11":1,"12":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"23":1,"24":0,"25":0,"30":1,"31":0,"35":1,"36":0,"37":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"48":0,"51":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/greedy-fas.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/greedy-fas.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"greedyFAS","line":16,"loc":{"start":{"line":16,"column":0},"end":{"line":16,"column":32}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":34},"end":{"line":24,"column":46}}},"3":{"name":"doGreedyFAS","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":42}}},"4":{"name":"removeNode","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":69}}},"5":{"name":"(anonymous_5)","line":55,"loc":{"start":{"line":55,"column":29},"end":{"line":55,"column":44}}},"6":{"name":"(anonymous_6)","line":67,"loc":{"start":{"line":67,"column":30},"end":{"line":67,"column":45}}},"7":{"name":"buildState","line":80,"loc":{"start":{"line":80,"column":0},"end":{"line":80,"column":33}}},"8":{"name":"(anonymous_8)","line":85,"loc":{"start":{"line":85,"column":20},"end":{"line":85,"column":32}}},"9":{"name":"(anonymous_9)","line":91,"loc":{"start":{"line":91,"column":20},"end":{"line":91,"column":32}}},"10":{"name":"(anonymous_10)","line":100,"loc":{"start":{"line":100,"column":48},"end":{"line":100,"column":59}}},"11":{"name":"(anonymous_11)","line":103,"loc":{"start":{"line":103,"column":27},"end":{"line":103,"column":39}}},"12":{"name":"assignBucket","line":110,"loc":{"start":{"line":110,"column":0},"end":{"line":110,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":38}},"4":{"start":{"line":16,"column":0},"end":{"line":27,"column":1}},"5":{"start":{"line":17,"column":2},"end":{"line":19,"column":3}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":14}},"7":{"start":{"line":20,"column":2},"end":{"line":20,"column":59}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":71}},"9":{"start":{"line":24,"column":2},"end":{"line":26,"column":12}},"10":{"start":{"line":25,"column":4},"end":{"line":25,"column":32}},"11":{"start":{"line":29,"column":0},"end":{"line":50,"column":1}},"12":{"start":{"line":30,"column":2},"end":{"line":32,"column":25}},"13":{"start":{"line":34,"column":2},"end":{"line":34,"column":12}},"14":{"start":{"line":35,"column":2},"end":{"line":47,"column":3}},"15":{"start":{"line":36,"column":4},"end":{"line":36,"column":83}},"16":{"start":{"line":36,"column":42},"end":{"line":36,"column":81}},"17":{"start":{"line":37,"column":4},"end":{"line":37,"column":83}},"18":{"start":{"line":37,"column":42},"end":{"line":37,"column":81}},"19":{"start":{"line":38,"column":4},"end":{"line":46,"column":5}},"20":{"start":{"line":39,"column":6},"end":{"line":45,"column":7}},"21":{"start":{"line":40,"column":8},"end":{"line":40,"column":37}},"22":{"start":{"line":41,"column":8},"end":{"line":44,"column":9}},"23":{"start":{"line":42,"column":10},"end":{"line":42,"column":81}},"24":{"start":{"line":43,"column":10},"end":{"line":43,"column":16}},"25":{"start":{"line":49,"column":2},"end":{"line":49,"column":17}},"26":{"start":{"line":52,"column":0},"end":{"line":78,"column":1}},"27":{"start":{"line":53,"column":2},"end":{"line":53,"column":53}},"28":{"start":{"line":55,"column":2},"end":{"line":65,"column":5}},"29":{"start":{"line":56,"column":4},"end":{"line":57,"column":32}},"30":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"31":{"start":{"line":60,"column":6},"end":{"line":60,"column":45}},"32":{"start":{"line":63,"column":4},"end":{"line":63,"column":25}},"33":{"start":{"line":64,"column":4},"end":{"line":64,"column":43}},"34":{"start":{"line":67,"column":2},"end":{"line":73,"column":5}},"35":{"start":{"line":68,"column":4},"end":{"line":70,"column":27}},"36":{"start":{"line":71,"column":4},"end":{"line":71,"column":27}},"37":{"start":{"line":72,"column":4},"end":{"line":72,"column":43}},"38":{"start":{"line":75,"column":2},"end":{"line":75,"column":24}},"39":{"start":{"line":77,"column":2},"end":{"line":77,"column":17}},"40":{"start":{"line":80,"column":0},"end":{"line":108,"column":1}},"41":{"start":{"line":81,"column":2},"end":{"line":83,"column":17}},"42":{"start":{"line":85,"column":2},"end":{"line":87,"column":5}},"43":{"start":{"line":86,"column":4},"end":{"line":86,"column":51}},"44":{"start":{"line":91,"column":2},"end":{"line":98,"column":5}},"45":{"start":{"line":92,"column":4},"end":{"line":94,"column":41}},"46":{"start":{"line":95,"column":4},"end":{"line":95,"column":43}},"47":{"start":{"line":96,"column":4},"end":{"line":96,"column":64}},"48":{"start":{"line":97,"column":4},"end":{"line":97,"column":67}},"49":{"start":{"line":100,"column":2},"end":{"line":100,"column":83}},"50":{"start":{"line":100,"column":61},"end":{"line":100,"column":79}},"51":{"start":{"line":101,"column":2},"end":{"line":101,"column":26}},"52":{"start":{"line":103,"column":2},"end":{"line":105,"column":5}},"53":{"start":{"line":104,"column":4},"end":{"line":104,"column":53}},"54":{"start":{"line":107,"column":2},"end":{"line":107,"column":65}},"55":{"start":{"line":110,"column":0},"end":{"line":118,"column":1}},"56":{"start":{"line":111,"column":2},"end":{"line":117,"column":3}},"57":{"start":{"line":112,"column":4},"end":{"line":112,"column":30}},"58":{"start":{"line":113,"column":9},"end":{"line":117,"column":3}},"59":{"start":{"line":114,"column":4},"end":{"line":114,"column":47}},"60":{"start":{"line":116,"column":4},"end":{"line":116,"column":62}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":20,"type":"binary-expr","locations":[{"start":{"line":20,"column":28},"end":{"line":20,"column":36}},{"start":{"line":20,"column":40},"end":{"line":20,"column":57}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":41,"column":8}},{"start":{"line":41,"column":8},"end":{"line":41,"column":8}}]},"5":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":38},"end":{"line":53,"column":40}},{"start":{"line":53,"column":43},"end":{"line":53,"column":52}}]},"6":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"7":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":21},"end":{"line":92,"column":44}},{"start":{"line":92,"column":48},"end":{"line":92,"column":49}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":2},"end":{"line":111,"column":2}},{"start":{"line":111,"column":2},"end":{"line":111,"column":2}}]},"9":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":9},"end":{"line":113,"column":9}},{"start":{"line":113,"column":9},"end":{"line":113,"column":9}}]}},"code":["var _ = require(\"./lodash\"),","    Graph = require(\"./graphlib\").Graph,","    List = require(\"./data/list\");","","/*"," * A greedy heuristic for finding a feedback arc set for a graph. A feedback"," * arc set is a set of edges that can be removed to make a graph acyclic."," * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and"," * effective heuristic for the feedback arc set problem.\" This implementation"," * adjusts that from the paper to allow for weighted edges."," */","module.exports = greedyFAS;","","var DEFAULT_WEIGHT_FN = _.constant(1);","","function greedyFAS(g, weightFn) {","  if (g.nodeCount() <= 1) {","    return [];","  }","  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);","  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);","","  // Expand multi-edges","  return _.flatten(_.map(results, function(e) {","    return g.outEdges(e.v, e.w);","  }), true);","}","","function doGreedyFAS(g, buckets, zeroIdx) {","  var results = [],","      sources = buckets[buckets.length - 1],","      sinks = buckets[0];","","  var entry;","  while (g.nodeCount()) {","    while ((entry = sinks.dequeue()))   { removeNode(g, buckets, zeroIdx, entry); }","    while ((entry = sources.dequeue())) { removeNode(g, buckets, zeroIdx, entry); }","    if (g.nodeCount()) {","      for (var i = buckets.length - 2; i > 0; --i) {","        entry = buckets[i].dequeue();","        if (entry) {","          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));","          break;","        }","      }","    }","  }","","  return results;","}","","function removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {","  var results = collectPredecessors ? [] : undefined;","","  _.each(g.inEdges(entry.v), function(edge) {","    var weight = g.edge(edge),","        uEntry = g.node(edge.v);","","    if (collectPredecessors) {","      results.push({ v: edge.v, w: edge.w });","    }","","    uEntry.out -= weight;","    assignBucket(buckets, zeroIdx, uEntry);","  });","","  _.each(g.outEdges(entry.v), function(edge) {","    var weight = g.edge(edge),","        w = edge.w,","        wEntry = g.node(w);","    wEntry[\"in\"] -= weight;","    assignBucket(buckets, zeroIdx, wEntry);","  });","","  g.removeNode(entry.v);","","  return results;","}","","function buildState(g, weightFn) {","  var fasGraph = new Graph(),","      maxIn = 0,","      maxOut = 0;","","  _.each(g.nodes(), function(v) {","    fasGraph.setNode(v, { v: v, \"in\": 0, out: 0 });","  });","","  // Aggregate weights on nodes, but also sum the weights across multi-edges","  // into a single edge for the fasGraph.","  _.each(g.edges(), function(e) {","    var prevWeight = fasGraph.edge(e.v, e.w) || 0,","        weight = weightFn(e),","        edgeWeight = prevWeight + weight;","    fasGraph.setEdge(e.v, e.w, edgeWeight);","    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);","    maxIn  = Math.max(maxIn,  fasGraph.node(e.w)[\"in\"]  += weight);","  });","","  var buckets = _.range(maxOut + maxIn + 3).map(function() { return new List(); });","  var zeroIdx = maxIn + 1;","","  _.each(fasGraph.nodes(), function(v) {","    assignBucket(buckets, zeroIdx, fasGraph.node(v));","  });","","  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };","}","","function assignBucket(buckets, zeroIdx, entry) {","  if (!entry.out) {","    buckets[0].enqueue(entry);","  } else if (!entry[\"in\"]) {","    buckets[buckets.length - 1].enqueue(entry);","  } else {","    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);","  }","}",""],"l":{"1":1,"12":1,"14":1,"16":1,"17":0,"18":0,"20":0,"21":0,"24":0,"25":0,"29":1,"30":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"49":0,"52":1,"53":0,"55":0,"56":0,"59":0,"60":0,"63":0,"64":0,"67":0,"68":0,"71":0,"72":0,"75":0,"77":0,"80":1,"81":0,"85":0,"86":0,"91":0,"92":0,"95":0,"96":0,"97":0,"100":0,"101":0,"103":0,"104":0,"107":0,"110":1,"111":0,"112":0,"113":0,"114":0,"116":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/data/list.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/data/list.js","s":{"1":1,"2":1,"3":0,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"List","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":16}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":25},"end":{"line":14,"column":36}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":25},"end":{"line":23,"column":41}}},"4":{"name":"(anonymous_4)","line":34,"loc":{"start":{"line":34,"column":26},"end":{"line":34,"column":37}}},"5":{"name":"unlink","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":45,"column":23}}},"6":{"name":"filterOutLinks","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":30}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":22}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":1}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":20}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":45}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":28}},"6":{"start":{"line":14,"column":0},"end":{"line":21,"column":2}},"7":{"start":{"line":15,"column":2},"end":{"line":16,"column":29}},"8":{"start":{"line":17,"column":2},"end":{"line":20,"column":3}},"9":{"start":{"line":18,"column":4},"end":{"line":18,"column":18}},"10":{"start":{"line":19,"column":4},"end":{"line":19,"column":17}},"11":{"start":{"line":23,"column":0},"end":{"line":32,"column":2}},"12":{"start":{"line":24,"column":2},"end":{"line":24,"column":32}},"13":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"14":{"start":{"line":26,"column":4},"end":{"line":26,"column":18}},"15":{"start":{"line":28,"column":2},"end":{"line":28,"column":31}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":31}},"17":{"start":{"line":30,"column":2},"end":{"line":30,"column":25}},"18":{"start":{"line":31,"column":2},"end":{"line":31,"column":25}},"19":{"start":{"line":34,"column":0},"end":{"line":43,"column":2}},"20":{"start":{"line":35,"column":2},"end":{"line":37,"column":28}},"21":{"start":{"line":38,"column":2},"end":{"line":41,"column":3}},"22":{"start":{"line":39,"column":4},"end":{"line":39,"column":52}},"23":{"start":{"line":40,"column":4},"end":{"line":40,"column":22}},"24":{"start":{"line":42,"column":2},"end":{"line":42,"column":37}},"25":{"start":{"line":45,"column":0},"end":{"line":50,"column":1}},"26":{"start":{"line":46,"column":2},"end":{"line":46,"column":34}},"27":{"start":{"line":47,"column":2},"end":{"line":47,"column":34}},"28":{"start":{"line":48,"column":2},"end":{"line":48,"column":21}},"29":{"start":{"line":49,"column":2},"end":{"line":49,"column":21}},"30":{"start":{"line":52,"column":0},"end":{"line":56,"column":1}},"31":{"start":{"line":53,"column":2},"end":{"line":55,"column":3}},"32":{"start":{"line":54,"column":4},"end":{"line":54,"column":13}}},"branchMap":{"1":{"line":17,"type":"if","locations":[{"start":{"line":17,"column":2},"end":{"line":17,"column":2}},{"start":{"line":17,"column":2},"end":{"line":17,"column":2}}]},"2":{"line":25,"type":"if","locations":[{"start":{"line":25,"column":2},"end":{"line":25,"column":2}},{"start":{"line":25,"column":2},"end":{"line":25,"column":2}}]},"3":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":6},"end":{"line":25,"column":17}},{"start":{"line":25,"column":21},"end":{"line":25,"column":32}}]},"4":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":2},"end":{"line":53,"column":2}},{"start":{"line":53,"column":2},"end":{"line":53,"column":2}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":6},"end":{"line":53,"column":19}},{"start":{"line":53,"column":23},"end":{"line":53,"column":36}}]}},"code":["/*"," * Simple doubly linked list implementation derived from Cormen, et al.,"," * \"Introduction to Algorithms\"."," */","","module.exports = List;","","function List() {","  var sentinel = {};","  sentinel._next = sentinel._prev = sentinel;","  this._sentinel = sentinel;","}","","List.prototype.dequeue = function() {","  var sentinel = this._sentinel,","      entry = sentinel._prev;","  if (entry !== sentinel) {","    unlink(entry);","    return entry;","  }","};","","List.prototype.enqueue = function(entry) {","  var sentinel = this._sentinel;","  if (entry._prev && entry._next) {","    unlink(entry);","  }","  entry._next = sentinel._next;","  sentinel._next._prev = entry;","  sentinel._next = entry;","  entry._prev = sentinel;","};","","List.prototype.toString = function() {","  var strs = [],","      sentinel = this._sentinel,","      curr = sentinel._prev;","  while (curr !== sentinel) {","    strs.push(JSON.stringify(curr, filterOutLinks));","    curr = curr._prev;","  }","  return \"[\" + strs.join(\", \") + \"]\";","};","","function unlink(entry) {","  entry._prev._next = entry._next;","  entry._next._prev = entry._prev;","  delete entry._next;","  delete entry._prev;","}","","function filterOutLinks(k, v) {","  if (k !== \"_next\" && k !== \"_prev\") {","    return v;","  }","}",""],"l":{"6":1,"8":1,"9":0,"10":0,"11":0,"14":1,"15":0,"17":0,"18":0,"19":0,"23":1,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"31":0,"34":1,"35":0,"38":0,"39":0,"40":0,"42":0,"45":1,"46":0,"47":0,"48":0,"49":0,"52":1,"53":0,"54":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/normalize.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/normalize.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"run","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":16}}},"2":{"name":"(anonymous_2)","line":29,"loc":{"start":{"line":29,"column":20},"end":{"line":29,"column":35}}},"3":{"name":"normalizeEdge","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":29}}},"4":{"name":"undo","line":70,"loc":{"start":{"line":70,"column":0},"end":{"line":70,"column":17}}},"5":{"name":"(anonymous_5)","line":71,"loc":{"start":{"line":71,"column":32},"end":{"line":71,"column":44}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":9,"column":2}},"3":{"start":{"line":27,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":28,"column":2},"end":{"line":28,"column":29}},"5":{"start":{"line":29,"column":2},"end":{"line":29,"column":64}},"6":{"start":{"line":29,"column":37},"end":{"line":29,"column":60}},"7":{"start":{"line":32,"column":0},"end":{"line":68,"column":1}},"8":{"start":{"line":33,"column":2},"end":{"line":39,"column":38}},"9":{"start":{"line":41,"column":2},"end":{"line":41,"column":34}},"10":{"start":{"line":41,"column":27},"end":{"line":41,"column":34}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"12":{"start":{"line":45,"column":2},"end":{"line":45,"column":22}},"13":{"start":{"line":46,"column":2},"end":{"line":65,"column":3}},"14":{"start":{"line":47,"column":4},"end":{"line":47,"column":26}},"15":{"start":{"line":48,"column":4},"end":{"line":52,"column":6}},"16":{"start":{"line":53,"column":4},"end":{"line":53,"column":54}},"17":{"start":{"line":54,"column":4},"end":{"line":59,"column":5}},"18":{"start":{"line":55,"column":6},"end":{"line":55,"column":36}},"19":{"start":{"line":56,"column":6},"end":{"line":56,"column":38}},"20":{"start":{"line":57,"column":6},"end":{"line":57,"column":33}},"21":{"start":{"line":58,"column":6},"end":{"line":58,"column":42}},"22":{"start":{"line":60,"column":4},"end":{"line":60,"column":60}},"23":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"24":{"start":{"line":62,"column":6},"end":{"line":62,"column":40}},"25":{"start":{"line":64,"column":4},"end":{"line":64,"column":14}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":54}},"27":{"start":{"line":70,"column":0},"end":{"line":90,"column":1}},"28":{"start":{"line":71,"column":2},"end":{"line":89,"column":5}},"29":{"start":{"line":72,"column":4},"end":{"line":74,"column":10}},"30":{"start":{"line":75,"column":4},"end":{"line":75,"column":39}},"31":{"start":{"line":76,"column":4},"end":{"line":88,"column":5}},"32":{"start":{"line":77,"column":6},"end":{"line":77,"column":29}},"33":{"start":{"line":78,"column":6},"end":{"line":78,"column":22}},"34":{"start":{"line":79,"column":6},"end":{"line":79,"column":54}},"35":{"start":{"line":80,"column":6},"end":{"line":85,"column":7}},"36":{"start":{"line":81,"column":8},"end":{"line":81,"column":29}},"37":{"start":{"line":82,"column":8},"end":{"line":82,"column":29}},"38":{"start":{"line":83,"column":8},"end":{"line":83,"column":37}},"39":{"start":{"line":84,"column":8},"end":{"line":84,"column":39}},"40":{"start":{"line":86,"column":6},"end":{"line":86,"column":12}},"41":{"start":{"line":87,"column":6},"end":{"line":87,"column":23}}},"branchMap":{"1":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"2":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"4":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":6}},{"start":{"line":80,"column":6},"end":{"line":80,"column":6}}]}},"code":["\"use strict\";","","var _ = require(\"./lodash\"),","    util = require(\"./util\");","","module.exports = {","  run: run,","  undo: undo","};","","/*"," * Breaks any long edges in the graph into short segments that span 1 layer"," * each. This operation is undoable with the denormalize function."," *"," * Pre-conditions:"," *"," *    1. The input graph is a DAG."," *    2. Each node in the graph has a \"rank\" property."," *"," * Post-condition:"," *"," *    1. All edges in the graph have a length of 1."," *    2. Dummy nodes are added where edges have been split into segments."," *    3. The graph is augmented with a \"dummyChains\" attribute which contains"," *       the first dummy in each chain of dummy nodes produced."," */","function run(g) {","  g.graph().dummyChains = [];","  _.each(g.edges(), function(edge) { normalizeEdge(g, edge); });","}","","function normalizeEdge(g, e) {","  var v = e.v,","      vRank = g.node(v).rank,","      w = e.w,","      wRank = g.node(w).rank,","      name = e.name,","      edgeLabel = g.edge(e),","      labelRank = edgeLabel.labelRank;","","  if (wRank === vRank + 1) return;","","  g.removeEdge(e);","","  var dummy, attrs, i;","  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {","    edgeLabel.points = [];","    attrs = {","      width: 0, height: 0,","      edgeLabel: edgeLabel, edgeObj: e,","      rank: vRank","    };","    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");","    if (vRank === labelRank) {","      attrs.width = edgeLabel.width;","      attrs.height = edgeLabel.height;","      attrs.dummy = \"edge-label\";","      attrs.labelpos = edgeLabel.labelpos;","    }","    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);","    if (i === 0) {","      g.graph().dummyChains.push(dummy);","    }","    v = dummy;","  }","","  g.setEdge(v, w, { weight: edgeLabel.weight }, name);","}","","function undo(g) {","  _.each(g.graph().dummyChains, function(v) {","    var node = g.node(v),","        origLabel = node.edgeLabel,","        w;","    g.setEdge(node.edgeObj, origLabel);","    while (node.dummy) {","      w = g.successors(v)[0];","      g.removeNode(v);","      origLabel.points.push({ x: node.x, y: node.y });","      if (node.dummy === \"edge-label\") {","        origLabel.x = node.x;","        origLabel.y = node.y;","        origLabel.width = node.width;","        origLabel.height = node.height;","      }","      v = w;","      node = g.node(v);","    }","  });","}",""],"l":{"3":1,"6":1,"27":1,"28":0,"29":0,"32":1,"33":0,"41":0,"43":0,"45":0,"46":0,"47":0,"48":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"60":0,"61":0,"62":0,"64":0,"67":0,"70":1,"71":0,"72":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/util.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":1,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"fnMap":{"1":{"name":"addDummyNode","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":26,"column":44}}},"2":{"name":"simplify","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":21}}},"3":{"name":"(anonymous_3)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":32}}},"4":{"name":"(anonymous_4)","line":44,"loc":{"start":{"line":44,"column":20},"end":{"line":44,"column":32}}},"5":{"name":"asNonCompoundGraph","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":31}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":20},"end":{"line":57,"column":32}}},"7":{"name":"(anonymous_7)","line":62,"loc":{"start":{"line":62,"column":20},"end":{"line":62,"column":32}}},"8":{"name":"successorWeights","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":29}}},"9":{"name":"(anonymous_9)","line":69,"loc":{"start":{"line":69,"column":35},"end":{"line":69,"column":47}}},"10":{"name":"(anonymous_10)","line":71,"loc":{"start":{"line":71,"column":26},"end":{"line":71,"column":38}}},"11":{"name":"predecessorWeights","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":31}}},"12":{"name":"(anonymous_12)","line":80,"loc":{"start":{"line":80,"column":35},"end":{"line":80,"column":47}}},"13":{"name":"(anonymous_13)","line":82,"loc":{"start":{"line":82,"column":25},"end":{"line":82,"column":37}}},"14":{"name":"intersectRect","line":94,"loc":{"start":{"line":94,"column":0},"end":{"line":94,"column":36}}},"15":{"name":"buildLayerMatrix","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":29}}},"16":{"name":"(anonymous_16)","line":134,"loc":{"start":{"line":134,"column":48},"end":{"line":134,"column":59}}},"17":{"name":"(anonymous_17)","line":135,"loc":{"start":{"line":135,"column":20},"end":{"line":135,"column":32}}},"18":{"name":"normalizeRanks","line":149,"loc":{"start":{"line":149,"column":0},"end":{"line":149,"column":27}}},"19":{"name":"(anonymous_19)","line":150,"loc":{"start":{"line":150,"column":35},"end":{"line":150,"column":47}}},"20":{"name":"(anonymous_20)","line":151,"loc":{"start":{"line":151,"column":20},"end":{"line":151,"column":32}}},"21":{"name":"removeEmptyRanks","line":159,"loc":{"start":{"line":159,"column":0},"end":{"line":159,"column":29}}},"22":{"name":"(anonymous_22)","line":161,"loc":{"start":{"line":161,"column":38},"end":{"line":161,"column":50}}},"23":{"name":"(anonymous_23)","line":164,"loc":{"start":{"line":164,"column":20},"end":{"line":164,"column":32}}},"24":{"name":"(anonymous_24)","line":174,"loc":{"start":{"line":174,"column":17},"end":{"line":174,"column":33}}},"25":{"name":"(anonymous_25)","line":178,"loc":{"start":{"line":178,"column":17},"end":{"line":178,"column":29}}},"26":{"name":"addBorderNode","line":183,"loc":{"start":{"line":183,"column":0},"end":{"line":183,"column":47}}},"27":{"name":"maxRank","line":195,"loc":{"start":{"line":195,"column":0},"end":{"line":195,"column":20}}},"28":{"name":"(anonymous_28)","line":196,"loc":{"start":{"line":196,"column":32},"end":{"line":196,"column":44}}},"29":{"name":"partition","line":209,"loc":{"start":{"line":209,"column":0},"end":{"line":209,"column":35}}},"30":{"name":"(anonymous_30)","line":211,"loc":{"start":{"line":211,"column":21},"end":{"line":211,"column":37}}},"31":{"name":"time","line":225,"loc":{"start":{"line":225,"column":0},"end":{"line":225,"column":24}}},"32":{"name":"notime","line":234,"loc":{"start":{"line":234,"column":0},"end":{"line":234,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":4,"column":40}},"2":{"start":{"line":6,"column":0},"end":{"line":21,"column":2}},"3":{"start":{"line":26,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":27,"column":2},"end":{"line":27,"column":8}},"5":{"start":{"line":28,"column":2},"end":{"line":30,"column":25}},"6":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"7":{"start":{"line":32,"column":2},"end":{"line":32,"column":21}},"8":{"start":{"line":33,"column":2},"end":{"line":33,"column":22}},"9":{"start":{"line":34,"column":2},"end":{"line":34,"column":11}},"10":{"start":{"line":41,"column":0},"end":{"line":53,"column":1}},"11":{"start":{"line":42,"column":2},"end":{"line":42,"column":51}},"12":{"start":{"line":43,"column":2},"end":{"line":43,"column":71}},"13":{"start":{"line":43,"column":34},"end":{"line":43,"column":67}},"14":{"start":{"line":44,"column":2},"end":{"line":51,"column":5}},"15":{"start":{"line":45,"column":4},"end":{"line":46,"column":26}},"16":{"start":{"line":47,"column":4},"end":{"line":50,"column":7}},"17":{"start":{"line":52,"column":2},"end":{"line":52,"column":20}},"18":{"start":{"line":55,"column":0},"end":{"line":66,"column":1}},"19":{"start":{"line":56,"column":2},"end":{"line":56,"column":83}},"20":{"start":{"line":57,"column":2},"end":{"line":61,"column":5}},"21":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"22":{"start":{"line":59,"column":6},"end":{"line":59,"column":39}},"23":{"start":{"line":62,"column":2},"end":{"line":64,"column":5}},"24":{"start":{"line":63,"column":4},"end":{"line":63,"column":37}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":20}},"26":{"start":{"line":68,"column":0},"end":{"line":77,"column":1}},"27":{"start":{"line":69,"column":2},"end":{"line":75,"column":5}},"28":{"start":{"line":70,"column":4},"end":{"line":70,"column":18}},"29":{"start":{"line":71,"column":4},"end":{"line":73,"column":7}},"30":{"start":{"line":72,"column":6},"end":{"line":72,"column":54}},"31":{"start":{"line":74,"column":4},"end":{"line":74,"column":16}},"32":{"start":{"line":76,"column":2},"end":{"line":76,"column":43}},"33":{"start":{"line":79,"column":0},"end":{"line":88,"column":1}},"34":{"start":{"line":80,"column":2},"end":{"line":86,"column":5}},"35":{"start":{"line":81,"column":4},"end":{"line":81,"column":19}},"36":{"start":{"line":82,"column":4},"end":{"line":84,"column":7}},"37":{"start":{"line":83,"column":6},"end":{"line":83,"column":56}},"38":{"start":{"line":85,"column":4},"end":{"line":85,"column":17}},"39":{"start":{"line":87,"column":2},"end":{"line":87,"column":43}},"40":{"start":{"line":94,"column":0},"end":{"line":127,"column":1}},"41":{"start":{"line":95,"column":2},"end":{"line":95,"column":17}},"42":{"start":{"line":96,"column":2},"end":{"line":96,"column":17}},"43":{"start":{"line":100,"column":2},"end":{"line":100,"column":23}},"44":{"start":{"line":101,"column":2},"end":{"line":101,"column":23}},"45":{"start":{"line":102,"column":2},"end":{"line":102,"column":25}},"46":{"start":{"line":103,"column":2},"end":{"line":103,"column":26}},"47":{"start":{"line":105,"column":2},"end":{"line":107,"column":3}},"48":{"start":{"line":106,"column":4},"end":{"line":106,"column":81}},"49":{"start":{"line":109,"column":2},"end":{"line":109,"column":13}},"50":{"start":{"line":110,"column":2},"end":{"line":124,"column":3}},"51":{"start":{"line":112,"column":4},"end":{"line":114,"column":5}},"52":{"start":{"line":113,"column":6},"end":{"line":113,"column":13}},"53":{"start":{"line":115,"column":4},"end":{"line":115,"column":21}},"54":{"start":{"line":116,"column":4},"end":{"line":116,"column":11}},"55":{"start":{"line":119,"column":4},"end":{"line":121,"column":5}},"56":{"start":{"line":120,"column":6},"end":{"line":120,"column":13}},"57":{"start":{"line":122,"column":4},"end":{"line":122,"column":11}},"58":{"start":{"line":123,"column":4},"end":{"line":123,"column":21}},"59":{"start":{"line":126,"column":2},"end":{"line":126,"column":34}},"60":{"start":{"line":133,"column":0},"end":{"line":143,"column":1}},"61":{"start":{"line":134,"column":2},"end":{"line":134,"column":75}},"62":{"start":{"line":134,"column":61},"end":{"line":134,"column":71}},"63":{"start":{"line":135,"column":2},"end":{"line":141,"column":5}},"64":{"start":{"line":136,"column":4},"end":{"line":137,"column":25}},"65":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"66":{"start":{"line":139,"column":6},"end":{"line":139,"column":37}},"67":{"start":{"line":142,"column":2},"end":{"line":142,"column":18}},"68":{"start":{"line":149,"column":0},"end":{"line":157,"column":1}},"69":{"start":{"line":150,"column":2},"end":{"line":150,"column":76}},"70":{"start":{"line":150,"column":49},"end":{"line":150,"column":71}},"71":{"start":{"line":151,"column":2},"end":{"line":156,"column":5}},"72":{"start":{"line":152,"column":4},"end":{"line":152,"column":25}},"73":{"start":{"line":153,"column":4},"end":{"line":155,"column":5}},"74":{"start":{"line":154,"column":6},"end":{"line":154,"column":23}},"75":{"start":{"line":159,"column":0},"end":{"line":181,"column":1}},"76":{"start":{"line":161,"column":2},"end":{"line":161,"column":79}},"77":{"start":{"line":161,"column":52},"end":{"line":161,"column":74}},"78":{"start":{"line":163,"column":2},"end":{"line":163,"column":18}},"79":{"start":{"line":164,"column":2},"end":{"line":170,"column":5}},"80":{"start":{"line":165,"column":4},"end":{"line":165,"column":39}},"81":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"82":{"start":{"line":167,"column":6},"end":{"line":167,"column":24}},"83":{"start":{"line":169,"column":4},"end":{"line":169,"column":25}},"84":{"start":{"line":172,"column":2},"end":{"line":173,"column":48}},"85":{"start":{"line":174,"column":2},"end":{"line":180,"column":5}},"86":{"start":{"line":175,"column":4},"end":{"line":179,"column":5}},"87":{"start":{"line":176,"column":6},"end":{"line":176,"column":14}},"88":{"start":{"line":177,"column":11},"end":{"line":179,"column":5}},"89":{"start":{"line":178,"column":6},"end":{"line":178,"column":59}},"90":{"start":{"line":178,"column":31},"end":{"line":178,"column":55}},"91":{"start":{"line":183,"column":0},"end":{"line":193,"column":1}},"92":{"start":{"line":184,"column":2},"end":{"line":187,"column":4}},"93":{"start":{"line":188,"column":2},"end":{"line":191,"column":3}},"94":{"start":{"line":189,"column":4},"end":{"line":189,"column":21}},"95":{"start":{"line":190,"column":4},"end":{"line":190,"column":23}},"96":{"start":{"line":192,"column":2},"end":{"line":192,"column":49}},"97":{"start":{"line":195,"column":0},"end":{"line":202,"column":1}},"98":{"start":{"line":196,"column":2},"end":{"line":201,"column":6}},"99":{"start":{"line":197,"column":4},"end":{"line":197,"column":30}},"100":{"start":{"line":198,"column":4},"end":{"line":200,"column":5}},"101":{"start":{"line":199,"column":6},"end":{"line":199,"column":18}},"102":{"start":{"line":209,"column":0},"end":{"line":219,"column":1}},"103":{"start":{"line":210,"column":2},"end":{"line":210,"column":36}},"104":{"start":{"line":211,"column":2},"end":{"line":217,"column":5}},"105":{"start":{"line":212,"column":4},"end":{"line":216,"column":5}},"106":{"start":{"line":213,"column":6},"end":{"line":213,"column":29}},"107":{"start":{"line":215,"column":6},"end":{"line":215,"column":29}},"108":{"start":{"line":218,"column":2},"end":{"line":218,"column":16}},"109":{"start":{"line":225,"column":0},"end":{"line":232,"column":1}},"110":{"start":{"line":226,"column":2},"end":{"line":226,"column":22}},"111":{"start":{"line":227,"column":2},"end":{"line":231,"column":3}},"112":{"start":{"line":228,"column":4},"end":{"line":228,"column":16}},"113":{"start":{"line":230,"column":4},"end":{"line":230,"column":61}},"114":{"start":{"line":234,"column":0},"end":{"line":236,"column":1}},"115":{"start":{"line":235,"column":2},"end":{"line":235,"column":14}}},"branchMap":{"1":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":22},"end":{"line":45,"column":47}},{"start":{"line":45,"column":51},"end":{"line":45,"column":75}}]},"2":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"3":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":19},"end":{"line":72,"column":28}},{"start":{"line":72,"column":32},"end":{"line":72,"column":33}}]},"4":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":20},"end":{"line":83,"column":30}},{"start":{"line":83,"column":34},"end":{"line":83,"column":35}}]},"5":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":2},"end":{"line":105,"column":2}},{"start":{"line":105,"column":2},"end":{"line":105,"column":2}}]},"6":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":6},"end":{"line":105,"column":9}},{"start":{"line":105,"column":13},"end":{"line":105,"column":16}}]},"7":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"8":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":4},"end":{"line":112,"column":4}},{"start":{"line":112,"column":4},"end":{"line":112,"column":4}}]},"9":{"line":119,"type":"if","locations":[{"start":{"line":119,"column":4},"end":{"line":119,"column":4}},{"start":{"line":119,"column":4},"end":{"line":119,"column":4}}]},"10":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"11":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":4},"end":{"line":153,"column":4}},{"start":{"line":153,"column":4},"end":{"line":153,"column":4}}]},"12":{"line":166,"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":166,"column":4}},{"start":{"line":166,"column":4},"end":{"line":166,"column":4}}]},"13":{"line":175,"type":"if","locations":[{"start":{"line":175,"column":4},"end":{"line":175,"column":4}},{"start":{"line":175,"column":4},"end":{"line":175,"column":4}}]},"14":{"line":175,"type":"binary-expr","locations":[{"start":{"line":175,"column":8},"end":{"line":175,"column":25}},{"start":{"line":175,"column":29},"end":{"line":175,"column":53}}]},"15":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":11},"end":{"line":177,"column":11}},{"start":{"line":177,"column":11},"end":{"line":177,"column":11}}]},"16":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":2},"end":{"line":188,"column":2}},{"start":{"line":188,"column":2},"end":{"line":188,"column":2}}]},"17":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"18":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"./lodash\"),","    Graph = require(\"./graphlib\").Graph;","","module.exports = {","  addDummyNode: addDummyNode,","  simplify: simplify,","  asNonCompoundGraph: asNonCompoundGraph,","  successorWeights: successorWeights,","  predecessorWeights: predecessorWeights,","  intersectRect: intersectRect,","  buildLayerMatrix: buildLayerMatrix,","  normalizeRanks: normalizeRanks,","  removeEmptyRanks: removeEmptyRanks,","  addBorderNode: addBorderNode,","  maxRank: maxRank,","  partition: partition,","  time: time,","  notime: notime","};","","/*"," * Adds a dummy node to the graph and return v."," */","function addDummyNode(g, type, attrs, name) {","  var v;","  do {","    v = _.uniqueId(name);","  } while (g.hasNode(v));","","  attrs.dummy = type;","  g.setNode(v, attrs);","  return v;","}","","/*"," * Returns a new graph with only simple edges. Handles aggregation of data"," * associated with multi-edges."," */","function simplify(g) {","  var simplified = new Graph().setGraph(g.graph());","  _.each(g.nodes(), function(v) { simplified.setNode(v, g.node(v)); });","  _.each(g.edges(), function(e) {","    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 },","        label = g.edge(e);","    simplified.setEdge(e.v, e.w, {","      weight: simpleLabel.weight + label.weight,","      minlen: Math.max(simpleLabel.minlen, label.minlen)","    });","  });","  return simplified;","}","","function asNonCompoundGraph(g) {","  var simplified = new Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());","  _.each(g.nodes(), function(v) {","    if (!g.children(v).length) {","      simplified.setNode(v, g.node(v));","    }","  });","  _.each(g.edges(), function(e) {","    simplified.setEdge(e, g.edge(e));","  });","  return simplified;","}","","function successorWeights(g) {","  var weightMap = _.map(g.nodes(), function(v) {","    var sucs = {};","    _.each(g.outEdges(v), function(e) {","      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;","    });","    return sucs;","  });","  return _.zipObject(g.nodes(), weightMap);","}","","function predecessorWeights(g) {","  var weightMap = _.map(g.nodes(), function(v) {","    var preds = {};","    _.each(g.inEdges(v), function(e) {","      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;","    });","    return preds;","  });","  return _.zipObject(g.nodes(), weightMap);","}","","/*"," * Finds where a line starting at point ({x, y}) would intersect a rectangle"," * ({x, y, width, height}) if it were pointing at the rectangle's center."," */","function intersectRect(rect, point) {","  var x = rect.x;","  var y = rect.y;","","  // Rectangle intersection algorithm from:","  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes","  var dx = point.x - x;","  var dy = point.y - y;","  var w = rect.width / 2;","  var h = rect.height / 2;","","  if (!dx && !dy) {","    throw new Error(\"Not possible to find intersection inside of the rectangle\");","  }","","  var sx, sy;","  if (Math.abs(dy) * w > Math.abs(dx) * h) {","    // Intersection is top or bottom of rect.","    if (dy < 0) {","      h = -h;","    }","    sx = h * dx / dy;","    sy = h;","  } else {","    // Intersection is left or right of rect.","    if (dx < 0) {","      w = -w;","    }","    sx = w;","    sy = w * dy / dx;","  }","","  return { x: x + sx, y: y + sy };","}","","/*"," * Given a DAG with each node assigned \"rank\" and \"order\" properties, this"," * function will produce a matrix with the ids of each node."," */","function buildLayerMatrix(g) {","  var layering = _.map(_.range(maxRank(g) + 1), function() { return []; });","  _.each(g.nodes(), function(v) {","    var node = g.node(v),","        rank = node.rank;","    if (!_.isUndefined(rank)) {","      layering[rank][node.order] = v;","    }","  });","  return layering;","}","","/*"," * Adjusts the ranks for all nodes in the graph such that all nodes v have"," * rank(v) >= 0 and at least one node w has rank(w) = 0."," */","function normalizeRanks(g) {","  var min = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));","  _.each(g.nodes(), function(v) {","    var node = g.node(v);","    if (_.has(node, \"rank\")) {","      node.rank -= min;","    }","  });","}","","function removeEmptyRanks(g) {","  // Ranks may not start at 0, so we need to offset them","  var offset = _.min(_.map(g.nodes(), function(v) { return g.node(v).rank; }));","","  var layers = [];","  _.each(g.nodes(), function(v) {","    var rank = g.node(v).rank - offset;","    if (!layers[rank]) {","      layers[rank] = [];","    }","    layers[rank].push(v);","  });","","  var delta = 0,","      nodeRankFactor = g.graph().nodeRankFactor;","  _.each(layers, function(vs, i) {","    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {","      --delta;","    } else if (delta) {","      _.each(vs, function(v) { g.node(v).rank += delta; });","    }","  });","}","","function addBorderNode(g, prefix, rank, order) {","  var node = {","    width: 0,","    height: 0","  };","  if (arguments.length >= 4) {","    node.rank = rank;","    node.order = order;","  }","  return addDummyNode(g, \"border\", node, prefix);","}","","function maxRank(g) {","  return _.max(_.map(g.nodes(), function(v) {","    var rank = g.node(v).rank;","    if (!_.isUndefined(rank)) {","      return rank;","    }","  }));","}","","/*"," * Partition a collection into two groups: `lhs` and `rhs`. If the supplied"," * function returns true for an entry it goes into `lhs`. Otherwise it goes"," * into `rhs."," */","function partition(collection, fn) {","  var result = { lhs: [], rhs: [] };","  _.each(collection, function(value) {","    if (fn(value)) {","      result.lhs.push(value);","    } else {","      result.rhs.push(value);","    }","  });","  return result;","}","","/*"," * Returns a new function that wraps `fn` with a timer. The wrapper logs the"," * time it takes to execute the function."," */","function time(name, fn) {","  var start = _.now();","  try {","    return fn();","  } finally {","    console.log(name + \" time: \" + (_.now() - start) + \"ms\");","  }","}","","function notime(name, fn) {","  return fn();","}",""],"l":{"3":1,"6":1,"26":1,"27":0,"28":0,"29":0,"32":0,"33":0,"34":0,"41":1,"42":0,"43":0,"44":0,"45":0,"47":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"62":0,"63":0,"65":0,"68":1,"69":0,"70":0,"71":0,"72":0,"74":0,"76":0,"79":1,"80":0,"81":0,"82":0,"83":0,"85":0,"87":0,"94":1,"95":0,"96":0,"100":0,"101":0,"102":0,"103":0,"105":0,"106":0,"109":0,"110":0,"112":0,"113":0,"115":0,"116":0,"119":0,"120":0,"122":0,"123":0,"126":0,"133":1,"134":0,"135":0,"136":0,"138":0,"139":0,"142":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"159":1,"161":0,"163":0,"164":0,"165":0,"166":0,"167":0,"169":0,"172":0,"174":0,"175":0,"176":0,"177":0,"178":0,"183":1,"184":0,"188":0,"189":0,"190":0,"192":0,"195":1,"196":0,"197":0,"198":0,"199":0,"209":1,"210":0,"211":0,"212":0,"213":0,"215":0,"218":0,"225":1,"226":0,"227":0,"228":0,"230":0,"234":1,"235":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":1,"14":0,"15":0,"16":1,"17":0},"b":{"1":[0,0,0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"rank","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":17}}},"2":{"name":"tightTreeRanker","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":28}}},"3":{"name":"networkSimplexRanker","line":46,"loc":{"start":{"line":46,"column":0},"end":{"line":46,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":6,"column":50}},"2":{"start":{"line":8,"column":0},"end":{"line":8,"column":22}},"3":{"start":{"line":29,"column":0},"end":{"line":36,"column":1}},"4":{"start":{"line":30,"column":2},"end":{"line":35,"column":3}},"5":{"start":{"line":31,"column":28},"end":{"line":31,"column":52}},"6":{"start":{"line":31,"column":53},"end":{"line":31,"column":59}},"7":{"start":{"line":32,"column":23},"end":{"line":32,"column":42}},"8":{"start":{"line":32,"column":43},"end":{"line":32,"column":49}},"9":{"start":{"line":33,"column":25},"end":{"line":33,"column":46}},"10":{"start":{"line":33,"column":47},"end":{"line":33,"column":53}},"11":{"start":{"line":34,"column":13},"end":{"line":34,"column":37}},"12":{"start":{"line":39,"column":0},"end":{"line":39,"column":36}},"13":{"start":{"line":41,"column":0},"end":{"line":44,"column":1}},"14":{"start":{"line":42,"column":2},"end":{"line":42,"column":17}},"15":{"start":{"line":43,"column":2},"end":{"line":43,"column":18}},"16":{"start":{"line":46,"column":0},"end":{"line":48,"column":1}},"17":{"start":{"line":47,"column":2},"end":{"line":47,"column":20}}},"branchMap":{"1":{"line":30,"type":"switch","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":59}},{"start":{"line":32,"column":4},"end":{"line":32,"column":49}},{"start":{"line":33,"column":4},"end":{"line":33,"column":53}},{"start":{"line":34,"column":4},"end":{"line":34,"column":37}}]}},"code":["\"use strict\";","","var rankUtil = require(\"./util\"),","    longestPath = rankUtil.longestPath,","    feasibleTree = require(\"./feasible-tree\"),","    networkSimplex = require(\"./network-simplex\");","","module.exports = rank;","","/*"," * Assigns a rank to each node in the input graph that respects the \"minlen\""," * constraint specified on edges between nodes."," *"," * This basic structure is derived from Gansner, et al., \"A Technique for"," * Drawing Directed Graphs.\""," *"," * Pre-conditions:"," *"," *    1. Graph must be a connected DAG"," *    2. Graph nodes must be objects"," *    3. Graph edges must have \"weight\" and \"minlen\" attributes"," *"," * Post-conditions:"," *"," *    1. Graph nodes will have a \"rank\" attribute based on the results of the"," *       algorithm. Ranks can start at any index (including negative), we'll"," *       fix them up later."," */","function rank(g) {","  switch(g.graph().ranker) {","    case \"network-simplex\": networkSimplexRanker(g); break;","    case \"tight-tree\": tightTreeRanker(g); break;","    case \"longest-path\": longestPathRanker(g); break;","    default: networkSimplexRanker(g);","  }","}","","// A fast and simple ranker, but results are far from optimal.","var longestPathRanker = longestPath;","","function tightTreeRanker(g) {","  longestPath(g);","  feasibleTree(g);","}","","function networkSimplexRanker(g) {","  networkSimplex(g);","}",""],"l":{"3":1,"8":1,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"39":1,"41":1,"42":0,"43":0,"46":1,"47":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/util.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/util.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"longestPath","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":24}}},"2":{"name":"dfs","line":34,"loc":{"start":{"line":34,"column":2},"end":{"line":34,"column":18}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":42},"end":{"line":41,"column":54}}},"4":{"name":"slack","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":59,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":31,"column":0},"end":{"line":53,"column":1}},"4":{"start":{"line":32,"column":2},"end":{"line":32,"column":19}},"5":{"start":{"line":34,"column":2},"end":{"line":50,"column":3}},"6":{"start":{"line":35,"column":4},"end":{"line":35,"column":26}},"7":{"start":{"line":36,"column":4},"end":{"line":38,"column":5}},"8":{"start":{"line":37,"column":6},"end":{"line":37,"column":24}},"9":{"start":{"line":39,"column":4},"end":{"line":39,"column":22}},"10":{"start":{"line":41,"column":4},"end":{"line":43,"column":8}},"11":{"start":{"line":42,"column":6},"end":{"line":42,"column":41}},"12":{"start":{"line":45,"column":4},"end":{"line":47,"column":5}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":15}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":31}},"15":{"start":{"line":52,"column":2},"end":{"line":52,"column":27}},"16":{"start":{"line":59,"column":0},"end":{"line":61,"column":1}},"17":{"start":{"line":60,"column":2},"end":{"line":60,"column":64}}},"branchMap":{"1":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":4},"end":{"line":36,"column":4}},{"start":{"line":36,"column":4},"end":{"line":36,"column":4}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\");","","module.exports = {","  longestPath: longestPath,","  slack: slack","};","","/*"," * Initializes ranks for the input graph using the longest path algorithm. This"," * algorithm scales well and is fast in practice, it yields rather poor"," * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom"," * ranks wide and leaving edges longer than necessary. However, due to its"," * speed, this algorithm is good for getting an initial ranking that can be fed"," * into other algorithms."," *"," * This algorithm does not normalize layers because it will be used by other"," * algorithms in most cases. If using this algorithm directly, be sure to"," * run normalize at the end."," *"," * Pre-conditions:"," *"," *    1. Input graph is a DAG."," *    2. Input graph node labels can be assigned properties."," *"," * Post-conditions:"," *"," *    1. Each node will be assign an (unnormalized) \"rank\" property."," */","function longestPath(g) {","  var visited = {};","","  function dfs(v) {","    var label = g.node(v);","    if (_.has(visited, v)) {","      return label.rank;","    }","    visited[v] = true;","","    var rank = _.min(_.map(g.outEdges(v), function(e) {","      return dfs(e.w) - g.edge(e).minlen;","    }));","","    if (rank === Number.POSITIVE_INFINITY) {","      rank = 0;","    }","","    return (label.rank = rank);","  }","","  _.each(g.sources(), dfs);","}","","/*"," * Returns the amount of slack for the given edge. The slack is defined as the"," * difference between the length of the edge and its minimum length."," */","function slack(g, e) {","  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;","}",""],"l":{"3":1,"5":1,"31":1,"32":0,"34":1,"35":0,"36":0,"37":0,"39":0,"41":0,"42":0,"45":0,"46":0,"49":0,"52":0,"59":1,"60":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/feasible-tree.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/feasible-tree.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":1,"28":0,"29":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"feasibleTree","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":25}}},"2":{"name":"tightTree","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":25}}},"3":{"name":"dfs","line":57,"loc":{"start":{"line":57,"column":2},"end":{"line":57,"column":18}}},"4":{"name":"(anonymous_4)","line":58,"loc":{"start":{"line":58,"column":27},"end":{"line":58,"column":39}}},"5":{"name":"findMinSlackEdge","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":32}}},"6":{"name":"(anonymous_6)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":38}}},"7":{"name":"shiftRanks","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":33}}},"8":{"name":"(anonymous_8)","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":32}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":36}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}},"3":{"start":{"line":34,"column":0},"end":{"line":50,"column":1}},"4":{"start":{"line":35,"column":2},"end":{"line":35,"column":41}},"5":{"start":{"line":38,"column":2},"end":{"line":39,"column":27}},"6":{"start":{"line":40,"column":2},"end":{"line":40,"column":23}},"7":{"start":{"line":42,"column":2},"end":{"line":42,"column":18}},"8":{"start":{"line":43,"column":2},"end":{"line":47,"column":3}},"9":{"start":{"line":44,"column":4},"end":{"line":44,"column":34}},"10":{"start":{"line":45,"column":4},"end":{"line":45,"column":65}},"11":{"start":{"line":46,"column":4},"end":{"line":46,"column":28}},"12":{"start":{"line":49,"column":2},"end":{"line":49,"column":11}},"13":{"start":{"line":56,"column":0},"end":{"line":71,"column":1}},"14":{"start":{"line":57,"column":2},"end":{"line":67,"column":3}},"15":{"start":{"line":58,"column":4},"end":{"line":66,"column":7}},"16":{"start":{"line":59,"column":6},"end":{"line":60,"column":42}},"17":{"start":{"line":61,"column":6},"end":{"line":65,"column":7}},"18":{"start":{"line":62,"column":8},"end":{"line":62,"column":25}},"19":{"start":{"line":63,"column":8},"end":{"line":63,"column":28}},"20":{"start":{"line":64,"column":8},"end":{"line":64,"column":15}},"21":{"start":{"line":69,"column":2},"end":{"line":69,"column":25}},"22":{"start":{"line":70,"column":2},"end":{"line":70,"column":23}},"23":{"start":{"line":77,"column":0},"end":{"line":83,"column":1}},"24":{"start":{"line":78,"column":2},"end":{"line":82,"column":5}},"25":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"26":{"start":{"line":80,"column":6},"end":{"line":80,"column":25}},"27":{"start":{"line":85,"column":0},"end":{"line":89,"column":1}},"28":{"start":{"line":86,"column":2},"end":{"line":88,"column":5}},"29":{"start":{"line":87,"column":4},"end":{"line":87,"column":28}}},"branchMap":{"1":{"line":45,"type":"cond-expr","locations":[{"start":{"line":45,"column":32},"end":{"line":45,"column":46}},{"start":{"line":45,"column":49},"end":{"line":45,"column":64}}]},"2":{"line":60,"type":"cond-expr","locations":[{"start":{"line":60,"column":30},"end":{"line":60,"column":33}},{"start":{"line":60,"column":36},"end":{"line":60,"column":41}}]},"3":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":6},"end":{"line":61,"column":6}},{"start":{"line":61,"column":6},"end":{"line":61,"column":6}}]},"4":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":10},"end":{"line":61,"column":23}},{"start":{"line":61,"column":27},"end":{"line":61,"column":39}}]},"5":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\"),","    Graph = require(\"../graphlib\").Graph,","    slack = require(\"./util\").slack;","","module.exports = feasibleTree;","","/*"," * Constructs a spanning tree with tight edges and adjusted the input node's"," * ranks to achieve this. A tight edge is one that is has a length that matches"," * its \"minlen\" attribute."," *"," * The basic structure for this function is derived from Gansner, et al., \"A"," * Technique for Drawing Directed Graphs.\""," *"," * Pre-conditions:"," *"," *    1. Graph must be a DAG."," *    2. Graph must be connected."," *    3. Graph must have at least one node."," *    5. Graph nodes must have been previously assigned a \"rank\" property that"," *       respects the \"minlen\" property of incident edges."," *    6. Graph edges must have a \"minlen\" property."," *"," * Post-conditions:"," *"," *    - Graph nodes will have their rank adjusted to ensure that all edges are"," *      tight."," *"," * Returns a tree (undirected graph) that is constructed using only \"tight\""," * edges."," */","function feasibleTree(g) {","  var t = new Graph({ directed: false });","","  // Choose arbitrary node from which to start our tree","  var start = g.nodes()[0],","      size = g.nodeCount();","  t.setNode(start, {});","","  var edge, delta;","  while (tightTree(t, g) < size) {","    edge = findMinSlackEdge(t, g);","    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);","    shiftRanks(t, g, delta);","  }","","  return t;","}","","/*"," * Finds a maximal tree of tight edges and returns the number of nodes in the"," * tree."," */","function tightTree(t, g) {","  function dfs(v) {","    _.each(g.nodeEdges(v), function(e) {","      var edgeV = e.v,","          w = (v === edgeV) ? e.w : edgeV;","      if (!t.hasNode(w) && !slack(g, e)) {","        t.setNode(w, {});","        t.setEdge(v, w, {});","        dfs(w);","      }","    });","  }","","  _.each(t.nodes(), dfs);","  return t.nodeCount();","}","","/*"," * Finds the edge with the smallest slack that is incident on tree and returns"," * it."," */","function findMinSlackEdge(t, g) {","  return _.min(g.edges(), function(e) {","    if (t.hasNode(e.v) !== t.hasNode(e.w)) {","      return slack(g, e);","    }","  });","}","","function shiftRanks(t, g, delta) {","  _.each(t.nodes(), function(v) {","    g.node(v).rank += delta;","  });","}",""],"l":{"3":1,"7":1,"34":1,"35":0,"38":0,"40":0,"42":0,"43":0,"44":0,"45":0,"46":0,"49":0,"56":1,"57":1,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"69":0,"70":0,"77":1,"78":0,"79":0,"80":0,"85":1,"86":0,"87":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/network-simplex.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/rank/network-simplex.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":1,"25":0,"26":0,"27":1,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":1,"92":0,"93":1,"94":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},"fnMap":{"1":{"name":"networkSimplex","line":54,"loc":{"start":{"line":54,"column":0},"end":{"line":54,"column":27}}},"2":{"name":"initCutValues","line":71,"loc":{"start":{"line":71,"column":0},"end":{"line":71,"column":29}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":13},"end":{"line":74,"column":25}}},"4":{"name":"assignCutValue","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":79,"column":37}}},"5":{"name":"calcCutValue","line":89,"loc":{"start":{"line":89,"column":0},"end":{"line":89,"column":35}}},"6":{"name":"(anonymous_6)","line":106,"loc":{"start":{"line":106,"column":29},"end":{"line":106,"column":41}}},"7":{"name":"initLowLimValues","line":125,"loc":{"start":{"line":125,"column":0},"end":{"line":125,"column":38}}},"8":{"name":"dfsAssignLowLim","line":132,"loc":{"start":{"line":132,"column":0},"end":{"line":132,"column":60}}},"9":{"name":"(anonymous_9)","line":137,"loc":{"start":{"line":137,"column":28},"end":{"line":137,"column":40}}},"10":{"name":"leaveEdge","line":155,"loc":{"start":{"line":155,"column":0},"end":{"line":155,"column":25}}},"11":{"name":"(anonymous_11)","line":156,"loc":{"start":{"line":156,"column":30},"end":{"line":156,"column":42}}},"12":{"name":"enterEdge","line":161,"loc":{"start":{"line":161,"column":0},"end":{"line":161,"column":31}}},"13":{"name":"(anonymous_13)","line":185,"loc":{"start":{"line":185,"column":39},"end":{"line":185,"column":54}}},"14":{"name":"(anonymous_14)","line":190,"loc":{"start":{"line":190,"column":27},"end":{"line":190,"column":42}}},"15":{"name":"exchangeEdges","line":193,"loc":{"start":{"line":193,"column":0},"end":{"line":193,"column":35}}},"16":{"name":"updateRanks","line":203,"loc":{"start":{"line":203,"column":0},"end":{"line":203,"column":27}}},"17":{"name":"(anonymous_17)","line":204,"loc":{"start":{"line":204,"column":31},"end":{"line":204,"column":43}}},"18":{"name":"(anonymous_18)","line":207,"loc":{"start":{"line":207,"column":13},"end":{"line":207,"column":25}}},"19":{"name":"isTreeEdge","line":224,"loc":{"start":{"line":224,"column":0},"end":{"line":224,"column":32}}},"20":{"name":"isDescendant","line":232,"loc":{"start":{"line":232,"column":0},"end":{"line":232,"column":47}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":9,"column":43}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"3":{"start":{"line":14,"column":0},"end":{"line":14,"column":51}},"4":{"start":{"line":15,"column":0},"end":{"line":15,"column":45}},"5":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"6":{"start":{"line":17,"column":0},"end":{"line":17,"column":37}},"7":{"start":{"line":18,"column":0},"end":{"line":18,"column":37}},"8":{"start":{"line":19,"column":0},"end":{"line":19,"column":45}},"9":{"start":{"line":54,"column":0},"end":{"line":66,"column":1}},"10":{"start":{"line":55,"column":2},"end":{"line":55,"column":18}},"11":{"start":{"line":56,"column":2},"end":{"line":56,"column":14}},"12":{"start":{"line":57,"column":2},"end":{"line":57,"column":26}},"13":{"start":{"line":58,"column":2},"end":{"line":58,"column":22}},"14":{"start":{"line":59,"column":2},"end":{"line":59,"column":22}},"15":{"start":{"line":61,"column":2},"end":{"line":61,"column":11}},"16":{"start":{"line":62,"column":2},"end":{"line":65,"column":3}},"17":{"start":{"line":63,"column":4},"end":{"line":63,"column":27}},"18":{"start":{"line":64,"column":4},"end":{"line":64,"column":30}},"19":{"start":{"line":71,"column":0},"end":{"line":77,"column":1}},"20":{"start":{"line":72,"column":2},"end":{"line":72,"column":35}},"21":{"start":{"line":73,"column":2},"end":{"line":73,"column":34}},"22":{"start":{"line":74,"column":2},"end":{"line":76,"column":5}},"23":{"start":{"line":75,"column":4},"end":{"line":75,"column":28}},"24":{"start":{"line":79,"column":0},"end":{"line":83,"column":1}},"25":{"start":{"line":80,"column":2},"end":{"line":81,"column":31}},"26":{"start":{"line":82,"column":2},"end":{"line":82,"column":61}},"27":{"start":{"line":89,"column":0},"end":{"line":123,"column":1}},"28":{"start":{"line":90,"column":2},"end":{"line":97,"column":19}},"29":{"start":{"line":99,"column":2},"end":{"line":102,"column":3}},"30":{"start":{"line":100,"column":4},"end":{"line":100,"column":24}},"31":{"start":{"line":101,"column":4},"end":{"line":101,"column":38}},"32":{"start":{"line":104,"column":2},"end":{"line":104,"column":30}},"33":{"start":{"line":106,"column":2},"end":{"line":120,"column":5}},"34":{"start":{"line":107,"column":4},"end":{"line":108,"column":38}},"35":{"start":{"line":110,"column":4},"end":{"line":119,"column":5}},"36":{"start":{"line":111,"column":6},"end":{"line":112,"column":41}},"37":{"start":{"line":114,"column":6},"end":{"line":114,"column":60}},"38":{"start":{"line":115,"column":6},"end":{"line":118,"column":7}},"39":{"start":{"line":116,"column":8},"end":{"line":116,"column":58}},"40":{"start":{"line":117,"column":8},"end":{"line":117,"column":66}},"41":{"start":{"line":122,"column":2},"end":{"line":122,"column":18}},"42":{"start":{"line":125,"column":0},"end":{"line":130,"column":1}},"43":{"start":{"line":126,"column":2},"end":{"line":128,"column":3}},"44":{"start":{"line":127,"column":4},"end":{"line":127,"column":27}},"45":{"start":{"line":129,"column":2},"end":{"line":129,"column":37}},"46":{"start":{"line":132,"column":0},"end":{"line":153,"column":1}},"47":{"start":{"line":133,"column":2},"end":{"line":134,"column":27}},"48":{"start":{"line":136,"column":2},"end":{"line":136,"column":20}},"49":{"start":{"line":137,"column":2},"end":{"line":141,"column":5}},"50":{"start":{"line":138,"column":4},"end":{"line":140,"column":5}},"51":{"start":{"line":139,"column":6},"end":{"line":139,"column":62}},"52":{"start":{"line":143,"column":2},"end":{"line":143,"column":18}},"53":{"start":{"line":144,"column":2},"end":{"line":144,"column":24}},"54":{"start":{"line":145,"column":2},"end":{"line":150,"column":3}},"55":{"start":{"line":146,"column":4},"end":{"line":146,"column":26}},"56":{"start":{"line":149,"column":4},"end":{"line":149,"column":24}},"57":{"start":{"line":152,"column":2},"end":{"line":152,"column":17}},"58":{"start":{"line":155,"column":0},"end":{"line":159,"column":1}},"59":{"start":{"line":156,"column":2},"end":{"line":158,"column":5}},"60":{"start":{"line":157,"column":4},"end":{"line":157,"column":37}},"61":{"start":{"line":161,"column":0},"end":{"line":191,"column":1}},"62":{"start":{"line":162,"column":2},"end":{"line":163,"column":17}},"63":{"start":{"line":168,"column":2},"end":{"line":171,"column":3}},"64":{"start":{"line":169,"column":4},"end":{"line":169,"column":15}},"65":{"start":{"line":170,"column":4},"end":{"line":170,"column":15}},"66":{"start":{"line":173,"column":2},"end":{"line":176,"column":19}},"67":{"start":{"line":180,"column":2},"end":{"line":183,"column":3}},"68":{"start":{"line":181,"column":4},"end":{"line":181,"column":23}},"69":{"start":{"line":182,"column":4},"end":{"line":182,"column":16}},"70":{"start":{"line":185,"column":2},"end":{"line":188,"column":5}},"71":{"start":{"line":186,"column":4},"end":{"line":187,"column":63}},"72":{"start":{"line":190,"column":2},"end":{"line":190,"column":70}},"73":{"start":{"line":190,"column":44},"end":{"line":190,"column":66}},"74":{"start":{"line":193,"column":0},"end":{"line":201,"column":1}},"75":{"start":{"line":194,"column":2},"end":{"line":195,"column":14}},"76":{"start":{"line":196,"column":2},"end":{"line":196,"column":21}},"77":{"start":{"line":197,"column":2},"end":{"line":197,"column":26}},"78":{"start":{"line":198,"column":2},"end":{"line":198,"column":22}},"79":{"start":{"line":199,"column":2},"end":{"line":199,"column":22}},"80":{"start":{"line":200,"column":2},"end":{"line":200,"column":20}},"81":{"start":{"line":203,"column":0},"end":{"line":219,"column":1}},"82":{"start":{"line":204,"column":2},"end":{"line":205,"column":29}},"83":{"start":{"line":204,"column":45},"end":{"line":204,"column":70}},"84":{"start":{"line":206,"column":2},"end":{"line":206,"column":19}},"85":{"start":{"line":207,"column":2},"end":{"line":218,"column":5}},"86":{"start":{"line":208,"column":4},"end":{"line":210,"column":24}},"87":{"start":{"line":212,"column":4},"end":{"line":215,"column":5}},"88":{"start":{"line":213,"column":6},"end":{"line":213,"column":31}},"89":{"start":{"line":214,"column":6},"end":{"line":214,"column":21}},"90":{"start":{"line":217,"column":4},"end":{"line":217,"column":82}},"91":{"start":{"line":224,"column":0},"end":{"line":226,"column":1}},"92":{"start":{"line":225,"column":2},"end":{"line":225,"column":28}},"93":{"start":{"line":232,"column":0},"end":{"line":234,"column":1}},"94":{"start":{"line":233,"column":2},"end":{"line":233,"column":68}}},"branchMap":{"1":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"2":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":28},"end":{"line":108,"column":31}},{"start":{"line":108,"column":34},"end":{"line":108,"column":37}}]},"3":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"4":{"line":114,"type":"cond-expr","locations":[{"start":{"line":114,"column":33},"end":{"line":114,"column":44}},{"start":{"line":114,"column":47},"end":{"line":114,"column":59}}]},"5":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":6}},{"start":{"line":115,"column":6},"end":{"line":115,"column":6}}]},"6":{"line":117,"type":"cond-expr","locations":[{"start":{"line":117,"column":35},"end":{"line":117,"column":49}},{"start":{"line":117,"column":52},"end":{"line":117,"column":65}}]},"7":{"line":126,"type":"if","locations":[{"start":{"line":126,"column":2},"end":{"line":126,"column":2}},{"start":{"line":126,"column":2},"end":{"line":126,"column":2}}]},"8":{"line":138,"type":"if","locations":[{"start":{"line":138,"column":4},"end":{"line":138,"column":4}},{"start":{"line":138,"column":4},"end":{"line":138,"column":4}}]},"9":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"10":{"line":168,"type":"if","locations":[{"start":{"line":168,"column":2},"end":{"line":168,"column":2}},{"start":{"line":168,"column":2},"end":{"line":168,"column":2}}]},"11":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"12":{"line":186,"type":"binary-expr","locations":[{"start":{"line":186,"column":11},"end":{"line":186,"column":62}},{"start":{"line":187,"column":11},"end":{"line":187,"column":62}}]},"13":{"line":212,"type":"if","locations":[{"start":{"line":212,"column":4},"end":{"line":212,"column":4}},{"start":{"line":212,"column":4},"end":{"line":212,"column":4}}]},"14":{"line":217,"type":"cond-expr","locations":[{"start":{"line":217,"column":54},"end":{"line":217,"column":65}},{"start":{"line":217,"column":68},"end":{"line":217,"column":80}}]},"15":{"line":233,"type":"binary-expr","locations":[{"start":{"line":233,"column":9},"end":{"line":233,"column":36}},{"start":{"line":233,"column":40},"end":{"line":233,"column":67}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\"),","    feasibleTree = require(\"./feasible-tree\"),","    slack = require(\"./util\").slack,","    initRank = require(\"./util\").longestPath,","    preorder = require(\"../graphlib\").alg.preorder,","    postorder = require(\"../graphlib\").alg.postorder,","    simplify = require(\"../util\").simplify;","","module.exports = networkSimplex;","","// Expose some internals for testing purposes","networkSimplex.initLowLimValues = initLowLimValues;","networkSimplex.initCutValues = initCutValues;","networkSimplex.calcCutValue = calcCutValue;","networkSimplex.leaveEdge = leaveEdge;","networkSimplex.enterEdge = enterEdge;","networkSimplex.exchangeEdges = exchangeEdges;","","/*"," * The network simplex algorithm assigns ranks to each node in the input graph"," * and iteratively improves the ranking to reduce the length of edges."," *"," * Preconditions:"," *"," *    1. The input graph must be a DAG."," *    2. All nodes in the graph must have an object value."," *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes."," *"," * Postconditions:"," *"," *    1. All nodes in the graph will have an assigned \"rank\" attribute that has"," *       been optimized by the network simplex algorithm. Ranks start at 0."," *"," *"," * A rough sketch of the algorithm is as follows:"," *"," *    1. Assign initial ranks to each node. We use the longest path algorithm,"," *       which assigns ranks to the lowest position possible. In general this"," *       leads to very wide bottom ranks and unnecessarily long edges."," *    2. Construct a feasible tight tree. A tight tree is one such that all"," *       edges in the tree have no slack (difference between length of edge"," *       and minlen for the edge). This by itself greatly improves the assigned"," *       rankings by shorting edges."," *    3. Iteratively find edges that have negative cut values. Generally a"," *       negative cut value indicates that the edge could be removed and a new"," *       tree edge could be added to produce a more compact graph."," *"," * Much of the algorithms here are derived from Gansner, et al., \"A Technique"," * for Drawing Directed Graphs.\" The structure of the file roughly follows the"," * structure of the overall algorithm."," */","function networkSimplex(g) {","  g = simplify(g);","  initRank(g);","  var t = feasibleTree(g);","  initLowLimValues(t);","  initCutValues(t, g);","","  var e, f;","  while ((e = leaveEdge(t))) {","    f = enterEdge(t, g, e);","    exchangeEdges(t, g, e, f);","  }","}","","/*"," * Initializes cut values for all edges in the tree."," */","function initCutValues(t, g) {","  var vs = postorder(t, t.nodes());","  vs = vs.slice(0, vs.length - 1);","  _.each(vs, function(v) {","    assignCutValue(t, g, v);","  });","}","","function assignCutValue(t, g, child) {","  var childLab = t.node(child),","      parent = childLab.parent;","  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);","}","","/*"," * Given the tight tree, its graph, and a child in the graph calculate and"," * return the cut value for the edge between the child and its parent."," */","function calcCutValue(t, g, child) {","  var childLab = t.node(child),","      parent = childLab.parent,","      // True if the child is on the tail end of the edge in the directed graph","      childIsTail = true,","      // The graph's view of the tree edge we're inspecting","      graphEdge = g.edge(child, parent),","      // The accumulated cut value for the edge between this node and its parent","      cutValue = 0;","","  if (!graphEdge) {","    childIsTail = false;","    graphEdge = g.edge(parent, child);","  }","","  cutValue = graphEdge.weight;","","  _.each(g.nodeEdges(child), function(e) {","    var isOutEdge = e.v === child,","        other = isOutEdge ? e.w : e.v;","","    if (other !== parent) {","      var pointsToHead = isOutEdge === childIsTail,","          otherWeight = g.edge(e).weight;","","      cutValue += pointsToHead ? otherWeight : -otherWeight;","      if (isTreeEdge(t, child, other)) {","        var otherCutValue = t.edge(child, other).cutvalue;","        cutValue += pointsToHead ? -otherCutValue : otherCutValue;","      }","    }","  });","","  return cutValue;","}","","function initLowLimValues(tree, root) {","  if (arguments.length < 2) {","    root = tree.nodes()[0];","  }","  dfsAssignLowLim(tree, {}, 1, root);","}","","function dfsAssignLowLim(tree, visited, nextLim, v, parent) {","  var low = nextLim,","      label = tree.node(v);","","  visited[v] = true;","  _.each(tree.neighbors(v), function(w) {","    if (!_.has(visited, w)) {","      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);","    }","  });","","  label.low = low;","  label.lim = nextLim++;","  if (parent) {","    label.parent = parent;","  } else {","    // TODO should be able to remove this when we incrementally update low lim","    delete label.parent;","  }","","  return nextLim;","}","","function leaveEdge(tree) {","  return _.find(tree.edges(), function(e) {","    return tree.edge(e).cutvalue < 0;","  });","}","","function enterEdge(t, g, edge) {","  var v = edge.v,","      w = edge.w;","","  // For the rest of this function we assume that v is the tail and w is the","  // head, so if we don't have this edge in the graph we should flip it to","  // match the correct orientation.","  if (!g.hasEdge(v, w)) {","    v = edge.w;","    w = edge.v;","  }","","  var vLabel = t.node(v),","      wLabel = t.node(w),","      tailLabel = vLabel,","      flip = false;","","  // If the root is in the tail of the edge then we need to flip the logic that","  // checks for the head and tail nodes in the candidates function below.","  if (vLabel.lim > wLabel.lim) {","    tailLabel = wLabel;","    flip = true;","  }","","  var candidates = _.filter(g.edges(), function(edge) {","    return flip === isDescendant(t, t.node(edge.v), tailLabel) &&","           flip !== isDescendant(t, t.node(edge.w), tailLabel);","  });","","  return _.min(candidates, function(edge) { return slack(g, edge); });","}","","function exchangeEdges(t, g, e, f) {","  var v = e.v,","      w = e.w;","  t.removeEdge(v, w);","  t.setEdge(f.v, f.w, {});","  initLowLimValues(t);","  initCutValues(t, g);","  updateRanks(t, g);","}","","function updateRanks(t, g) {","  var root = _.find(t.nodes(), function(v) { return !g.node(v).parent; }),","      vs = preorder(t, root);","  vs = vs.slice(1);","  _.each(vs, function(v) {","    var parent = t.node(v).parent,","        edge = g.edge(v, parent),","        flipped = false;","","    if (!edge) {","      edge = g.edge(parent, v);","      flipped = true;","    }","","    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);","  });","}","","/*"," * Returns true if the edge is in the tree."," */","function isTreeEdge(tree, u, v) {","  return tree.hasEdge(u, v);","}","","/*"," * Returns true if the specified node is descendant of the root node per the"," * assigned low and lim attributes in the tree."," */","function isDescendant(tree, vLabel, rootLabel) {","  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;","}",""],"l":{"3":1,"11":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"61":0,"62":0,"63":0,"64":0,"71":1,"72":0,"73":0,"74":0,"75":0,"79":1,"80":0,"82":0,"89":1,"90":0,"99":0,"100":0,"101":0,"104":0,"106":0,"107":0,"110":0,"111":0,"114":0,"115":0,"116":0,"117":0,"122":0,"125":1,"126":0,"127":0,"129":0,"132":1,"133":0,"136":0,"137":0,"138":0,"139":0,"143":0,"144":0,"145":0,"146":0,"149":0,"152":0,"155":1,"156":0,"157":0,"161":1,"162":0,"168":0,"169":0,"170":0,"173":0,"180":0,"181":0,"182":0,"185":0,"186":0,"190":0,"193":1,"194":0,"196":0,"197":0,"198":0,"199":0,"200":0,"203":1,"204":0,"206":0,"207":0,"208":0,"212":0,"213":0,"214":0,"217":0,"224":1,"225":0,"232":1,"233":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/parent-dummy-chains.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/parent-dummy-chains.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"parentDummyChains","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":30}}},"2":{"name":"(anonymous_2)","line":8,"loc":{"start":{"line":8,"column":32},"end":{"line":8,"column":44}}},"3":{"name":"findPath","line":48,"loc":{"start":{"line":48,"column":0},"end":{"line":48,"column":42}}},"4":{"name":"postorder","line":74,"loc":{"start":{"line":74,"column":0},"end":{"line":74,"column":22}}},"5":{"name":"dfs","line":78,"loc":{"start":{"line":78,"column":2},"end":{"line":78,"column":18}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":28}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"3":{"start":{"line":5,"column":0},"end":{"line":44,"column":1}},"4":{"start":{"line":6,"column":2},"end":{"line":6,"column":35}},"5":{"start":{"line":8,"column":2},"end":{"line":43,"column":5}},"6":{"start":{"line":9,"column":4},"end":{"line":16,"column":25}},"7":{"start":{"line":18,"column":4},"end":{"line":42,"column":5}},"8":{"start":{"line":19,"column":6},"end":{"line":19,"column":23}},"9":{"start":{"line":21,"column":6},"end":{"line":30,"column":7}},"10":{"start":{"line":22,"column":8},"end":{"line":25,"column":9}},"11":{"start":{"line":24,"column":10},"end":{"line":24,"column":20}},"12":{"start":{"line":27,"column":8},"end":{"line":29,"column":9}},"13":{"start":{"line":28,"column":10},"end":{"line":28,"column":28}},"14":{"start":{"line":32,"column":6},"end":{"line":38,"column":7}},"15":{"start":{"line":33,"column":8},"end":{"line":36,"column":9}},"16":{"start":{"line":35,"column":10},"end":{"line":35,"column":20}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":30}},"18":{"start":{"line":40,"column":6},"end":{"line":40,"column":28}},"19":{"start":{"line":41,"column":6},"end":{"line":41,"column":29}},"20":{"start":{"line":48,"column":0},"end":{"line":72,"column":1}},"21":{"start":{"line":49,"column":2},"end":{"line":54,"column":10}},"22":{"start":{"line":57,"column":2},"end":{"line":57,"column":13}},"23":{"start":{"line":58,"column":2},"end":{"line":62,"column":81}},"24":{"start":{"line":59,"column":4},"end":{"line":59,"column":30}},"25":{"start":{"line":60,"column":4},"end":{"line":60,"column":23}},"26":{"start":{"line":63,"column":2},"end":{"line":63,"column":15}},"27":{"start":{"line":66,"column":2},"end":{"line":66,"column":13}},"28":{"start":{"line":67,"column":2},"end":{"line":69,"column":3}},"29":{"start":{"line":68,"column":4},"end":{"line":68,"column":23}},"30":{"start":{"line":71,"column":2},"end":{"line":71,"column":59}},"31":{"start":{"line":74,"column":0},"end":{"line":86,"column":1}},"32":{"start":{"line":75,"column":2},"end":{"line":76,"column":14}},"33":{"start":{"line":78,"column":2},"end":{"line":82,"column":3}},"34":{"start":{"line":79,"column":4},"end":{"line":79,"column":18}},"35":{"start":{"line":80,"column":4},"end":{"line":80,"column":31}},"36":{"start":{"line":81,"column":4},"end":{"line":81,"column":41}},"37":{"start":{"line":83,"column":2},"end":{"line":83,"column":28}},"38":{"start":{"line":85,"column":2},"end":{"line":85,"column":16}}},"branchMap":{"1":{"line":21,"type":"if","locations":[{"start":{"line":21,"column":6},"end":{"line":21,"column":6}},{"start":{"line":21,"column":6},"end":{"line":21,"column":6}}]},"2":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":15},"end":{"line":22,"column":46}},{"start":{"line":23,"column":15},"end":{"line":23,"column":48}}]},"3":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":8}},{"start":{"line":27,"column":8},"end":{"line":27,"column":8}}]},"4":{"line":32,"type":"if","locations":[{"start":{"line":32,"column":6},"end":{"line":32,"column":6}},{"start":{"line":32,"column":6},"end":{"line":32,"column":6}}]},"5":{"line":33,"type":"binary-expr","locations":[{"start":{"line":33,"column":15},"end":{"line":33,"column":40}},{"start":{"line":34,"column":15},"end":{"line":34,"column":69}}]},"6":{"line":61,"type":"binary-expr","locations":[{"start":{"line":61,"column":11},"end":{"line":61,"column":17}},{"start":{"line":62,"column":12},"end":{"line":62,"column":43}},{"start":{"line":62,"column":47},"end":{"line":62,"column":78}}]}},"code":["var _ = require(\"./lodash\");","","module.exports = parentDummyChains;","","function parentDummyChains(g) {","  var postorderNums = postorder(g);","","  _.each(g.graph().dummyChains, function(v) {","    var node = g.node(v),","        edgeObj = node.edgeObj,","        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),","        path = pathData.path,","        lca = pathData.lca,","        pathIdx = 0,","        pathV = path[pathIdx],","        ascending = true;","","    while (v !== edgeObj.w) {","      node = g.node(v);","","      if (ascending) {","        while ((pathV = path[pathIdx]) !== lca &&","               g.node(pathV).maxRank < node.rank) {","          pathIdx++;","        }","","        if (pathV === lca) {","          ascending = false;","        }","      }","","      if (!ascending) {","        while (pathIdx < path.length - 1 &&","               g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {","          pathIdx++;","        }","        pathV = path[pathIdx];","      }","","      g.setParent(v, pathV);","      v = g.successors(v)[0];","    }","  });","}","","// Find a path from v to w through the lowest common ancestor (LCA). Return the","// full path and the LCA.","function findPath(g, postorderNums, v, w) {","  var vPath = [],","      wPath = [],","      low = Math.min(postorderNums[v].low, postorderNums[w].low),","      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),","      parent,","      lca;","","  // Traverse up from v to find the LCA","  parent = v;","  do {","    parent = g.parent(parent);","    vPath.push(parent);","  } while (parent &&","           (postorderNums[parent].low > low || lim > postorderNums[parent].lim));","  lca = parent;","","  // Traverse from w to LCA","  parent = w;","  while ((parent = g.parent(parent)) !== lca) {","    wPath.push(parent);","  }","","  return { path: vPath.concat(wPath.reverse()), lca: lca };","}","","function postorder(g) {","  var result = {},","      lim = 0;","","  function dfs(v) {","    var low = lim;","    _.each(g.children(v), dfs);","    result[v] = { low: low, lim: lim++ };","  }","  _.each(g.children(), dfs);","","  return result;","}",""],"l":{"1":1,"3":1,"5":1,"6":0,"8":0,"9":0,"18":0,"19":0,"21":0,"22":0,"24":0,"27":0,"28":0,"32":0,"33":0,"35":0,"37":0,"40":0,"41":0,"48":1,"49":0,"57":0,"58":0,"59":0,"60":0,"63":0,"66":0,"67":0,"68":0,"71":0,"74":1,"75":0,"78":1,"79":0,"80":0,"81":0,"83":0,"85":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/nesting-graph.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/nesting-graph.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"run","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":16}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":32}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":23},"end":{"line":47,"column":39}}},"4":{"name":"dfs","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":58}}},"5":{"name":"(anonymous_5)","line":74,"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":35}}},"6":{"name":"treeDepths","line":101,"loc":{"start":{"line":101,"column":0},"end":{"line":101,"column":23}}},"7":{"name":"dfs","line":103,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":25}}},"8":{"name":"(anonymous_8)","line":106,"loc":{"start":{"line":106,"column":23},"end":{"line":106,"column":39}}},"9":{"name":"(anonymous_9)","line":112,"loc":{"start":{"line":112,"column":23},"end":{"line":112,"column":35}}},"10":{"name":"sumWeights","line":116,"loc":{"start":{"line":116,"column":0},"end":{"line":116,"column":23}}},"11":{"name":"(anonymous_11)","line":117,"loc":{"start":{"line":117,"column":29},"end":{"line":117,"column":46}}},"12":{"name":"cleanup","line":122,"loc":{"start":{"line":122,"column":0},"end":{"line":122,"column":20}}},"13":{"name":"(anonymous_13)","line":126,"loc":{"start":{"line":126,"column":20},"end":{"line":126,"column":32}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":32,"column":0},"end":{"line":54,"column":1}},"4":{"start":{"line":33,"column":2},"end":{"line":36,"column":31}},"5":{"start":{"line":38,"column":2},"end":{"line":38,"column":31}},"6":{"start":{"line":41,"column":2},"end":{"line":41,"column":66}},"7":{"start":{"line":41,"column":34},"end":{"line":41,"column":62}},"8":{"start":{"line":44,"column":2},"end":{"line":44,"column":33}},"9":{"start":{"line":47,"column":2},"end":{"line":49,"column":5}},"10":{"start":{"line":48,"column":4},"end":{"line":48,"column":57}},"11":{"start":{"line":53,"column":2},"end":{"line":53,"column":37}},"12":{"start":{"line":56,"column":0},"end":{"line":99,"column":1}},"13":{"start":{"line":57,"column":2},"end":{"line":57,"column":31}},"14":{"start":{"line":58,"column":2},"end":{"line":63,"column":3}},"15":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"16":{"start":{"line":60,"column":6},"end":{"line":60,"column":57}},"17":{"start":{"line":62,"column":4},"end":{"line":62,"column":11}},"18":{"start":{"line":65,"column":2},"end":{"line":67,"column":24}},"19":{"start":{"line":69,"column":2},"end":{"line":69,"column":22}},"20":{"start":{"line":70,"column":2},"end":{"line":70,"column":24}},"21":{"start":{"line":71,"column":2},"end":{"line":71,"column":25}},"22":{"start":{"line":72,"column":2},"end":{"line":72,"column":30}},"23":{"start":{"line":74,"column":2},"end":{"line":94,"column":5}},"24":{"start":{"line":75,"column":4},"end":{"line":75,"column":57}},"25":{"start":{"line":77,"column":4},"end":{"line":81,"column":71}},"26":{"start":{"line":83,"column":4},"end":{"line":87,"column":7}},"27":{"start":{"line":89,"column":4},"end":{"line":93,"column":7}},"28":{"start":{"line":96,"column":2},"end":{"line":98,"column":3}},"29":{"start":{"line":97,"column":4},"end":{"line":97,"column":68}},"30":{"start":{"line":101,"column":0},"end":{"line":114,"column":1}},"31":{"start":{"line":102,"column":2},"end":{"line":102,"column":18}},"32":{"start":{"line":103,"column":2},"end":{"line":111,"column":3}},"33":{"start":{"line":104,"column":4},"end":{"line":104,"column":33}},"34":{"start":{"line":105,"column":4},"end":{"line":109,"column":5}},"35":{"start":{"line":106,"column":6},"end":{"line":108,"column":9}},"36":{"start":{"line":107,"column":8},"end":{"line":107,"column":30}},"37":{"start":{"line":110,"column":4},"end":{"line":110,"column":22}},"38":{"start":{"line":112,"column":2},"end":{"line":112,"column":51}},"39":{"start":{"line":112,"column":37},"end":{"line":112,"column":47}},"40":{"start":{"line":113,"column":2},"end":{"line":113,"column":16}},"41":{"start":{"line":116,"column":0},"end":{"line":120,"column":1}},"42":{"start":{"line":117,"column":2},"end":{"line":119,"column":8}},"43":{"start":{"line":118,"column":4},"end":{"line":118,"column":34}},"44":{"start":{"line":122,"column":0},"end":{"line":132,"column":1}},"45":{"start":{"line":123,"column":2},"end":{"line":123,"column":29}},"46":{"start":{"line":124,"column":2},"end":{"line":124,"column":39}},"47":{"start":{"line":125,"column":2},"end":{"line":125,"column":32}},"48":{"start":{"line":126,"column":2},"end":{"line":131,"column":5}},"49":{"start":{"line":127,"column":4},"end":{"line":127,"column":25}},"50":{"start":{"line":128,"column":4},"end":{"line":130,"column":5}},"51":{"start":{"line":129,"column":6},"end":{"line":129,"column":22}}},"branchMap":{"1":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"2":{"line":59,"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":59,"column":4}},{"start":{"line":59,"column":4},"end":{"line":59,"column":4}}]},"3":{"line":78,"type":"cond-expr","locations":[{"start":{"line":78,"column":41},"end":{"line":78,"column":60}},{"start":{"line":78,"column":63},"end":{"line":78,"column":68}}]},"4":{"line":79,"type":"cond-expr","locations":[{"start":{"line":79,"column":47},"end":{"line":79,"column":69}},{"start":{"line":79,"column":72},"end":{"line":79,"column":77}}]},"5":{"line":80,"type":"cond-expr","locations":[{"start":{"line":80,"column":43},"end":{"line":80,"column":49}},{"start":{"line":80,"column":52},"end":{"line":80,"column":62}}]},"6":{"line":81,"type":"cond-expr","locations":[{"start":{"line":81,"column":44},"end":{"line":81,"column":45}},{"start":{"line":81,"column":48},"end":{"line":81,"column":70}}]},"7":{"line":96,"type":"if","locations":[{"start":{"line":96,"column":2},"end":{"line":96,"column":2}},{"start":{"line":96,"column":2},"end":{"line":96,"column":2}}]},"8":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"9":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":16}},{"start":{"line":105,"column":20},"end":{"line":105,"column":35}}]},"10":{"line":128,"type":"if","locations":[{"start":{"line":128,"column":4},"end":{"line":128,"column":4}},{"start":{"line":128,"column":4},"end":{"line":128,"column":4}}]}},"code":["var _ = require(\"./lodash\"),","    util = require(\"./util\");","","module.exports = {","  run: run,","  cleanup: cleanup","};","","/*"," * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,"," * adds appropriate edges to ensure that all cluster nodes are placed between"," * these boundries, and ensures that the graph is connected."," *"," * In addition we ensure, through the use of the minlen property, that nodes"," * and subgraph border nodes to not end up on the same rank."," *"," * Preconditions:"," *"," *    1. Input graph is a DAG"," *    2. Nodes in the input graph has a minlen attribute"," *"," * Postconditions:"," *"," *    1. Input graph is connected."," *    2. Dummy nodes are added for the tops and bottoms of subgraphs."," *    3. The minlen attribute for nodes is adjusted to ensure nodes do not"," *       get placed on the same rank as subgraph border nodes."," *"," * The nesting graph idea comes from Sander, \"Layout of Compound Directed"," * Graphs.\""," */","function run(g) {","  var root = util.addDummyNode(g, \"root\", {}, \"_root\"),","      depths = treeDepths(g),","      height = _.max(depths) - 1,","      nodeSep = 2 * height + 1;","","  g.graph().nestingRoot = root;","","  // Multiply minlen by nodeSep to align nodes on non-border ranks.","  _.each(g.edges(), function(e) { g.edge(e).minlen *= nodeSep; });","","  // Calculate a weight that is sufficient to keep subgraphs vertically compact","  var weight = sumWeights(g) + 1;","","  // Create border nodes and link them up","  _.each(g.children(), function(child) {","    dfs(g, root, nodeSep, weight, height, depths, child);","  });","","  // Save the multiplier for node layers for later removal of empty border","  // layers.","  g.graph().nodeRankFactor = nodeSep;","}","","function dfs(g, root, nodeSep, weight, height, depths, v) {","  var children = g.children(v);","  if (!children.length) {","    if (v !== root) {","      g.setEdge(root, v, { weight: 0, minlen: nodeSep });","    }","    return;","  }","","  var top = util.addBorderNode(g, \"_bt\"),","      bottom = util.addBorderNode(g, \"_bb\"),","      label = g.node(v);","","  g.setParent(top, v);","  label.borderTop = top;","  g.setParent(bottom, v);","  label.borderBottom = bottom;","","  _.each(children, function(child) {","    dfs(g, root, nodeSep, weight, height, depths, child);","","    var childNode = g.node(child),","        childTop = childNode.borderTop ? childNode.borderTop : child,","        childBottom = childNode.borderBottom ? childNode.borderBottom : child,","        thisWeight = childNode.borderTop ? weight : 2 * weight,","        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;","","    g.setEdge(top, childTop, {","      weight: thisWeight,","      minlen: minlen,","      nestingEdge: true","    });","","    g.setEdge(childBottom, bottom, {","      weight: thisWeight,","      minlen: minlen,","      nestingEdge: true","    });","  });","","  if (!g.parent(v)) {","    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });","  }","}","","function treeDepths(g) {","  var depths = {};","  function dfs(v, depth) {","    var children = g.children(v);","    if (children && children.length) {","      _.each(children, function(child) {","        dfs(child, depth + 1);","      });","    }","    depths[v] = depth;","  }","  _.each(g.children(), function(v) { dfs(v, 1); });","  return depths;","}","","function sumWeights(g) {","  return _.reduce(g.edges(), function(acc, e) {","    return acc + g.edge(e).weight;","  }, 0);","}","","function cleanup(g) {","  var graphLabel = g.graph();","  g.removeNode(graphLabel.nestingRoot);","  delete graphLabel.nestingRoot;","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    if (edge.nestingEdge) {","      g.removeEdge(e);","    }","  });","}",""],"l":{"1":1,"4":1,"32":1,"33":0,"38":0,"41":0,"44":0,"47":0,"48":0,"53":0,"56":1,"57":0,"58":0,"59":0,"60":0,"62":0,"65":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"77":0,"83":0,"89":0,"96":0,"97":0,"101":1,"102":0,"103":1,"104":0,"105":0,"106":0,"107":0,"110":0,"112":0,"113":0,"116":1,"117":0,"118":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/add-border-segments.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/add-border-segments.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"addBorderSegments","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}}},"2":{"name":"dfs","line":7,"loc":{"start":{"line":7,"column":2},"end":{"line":7,"column":18}}},"3":{"name":"addBorderNode","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":29}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":35}},"3":{"start":{"line":6,"column":0},"end":{"line":27,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":24,"column":3}},"5":{"start":{"line":8,"column":4},"end":{"line":9,"column":25}},"6":{"start":{"line":10,"column":4},"end":{"line":12,"column":5}},"7":{"start":{"line":11,"column":6},"end":{"line":11,"column":28}},"8":{"start":{"line":14,"column":4},"end":{"line":23,"column":5}},"9":{"start":{"line":15,"column":6},"end":{"line":15,"column":27}},"10":{"start":{"line":16,"column":6},"end":{"line":16,"column":28}},"11":{"start":{"line":17,"column":6},"end":{"line":22,"column":7}},"12":{"start":{"line":20,"column":8},"end":{"line":20,"column":61}},"13":{"start":{"line":21,"column":8},"end":{"line":21,"column":62}},"14":{"start":{"line":26,"column":2},"end":{"line":26,"column":28}},"15":{"start":{"line":29,"column":0},"end":{"line":38,"column":1}},"16":{"start":{"line":30,"column":2},"end":{"line":32,"column":59}},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":28}},"18":{"start":{"line":34,"column":2},"end":{"line":34,"column":24}},"19":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"20":{"start":{"line":36,"column":4},"end":{"line":36,"column":41}}},"branchMap":{"1":{"line":10,"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":4}},{"start":{"line":10,"column":4},"end":{"line":10,"column":4}}]},"2":{"line":14,"type":"if","locations":[{"start":{"line":14,"column":4},"end":{"line":14,"column":4}},{"start":{"line":14,"column":4},"end":{"line":14,"column":4}}]},"3":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]}},"code":["var _ = require(\"./lodash\"),","    util = require(\"./util\");","","module.exports = addBorderSegments;","","function addBorderSegments(g) {","  function dfs(v) {","    var children = g.children(v),","        node = g.node(v);","    if (children.length) {","      _.each(children, dfs);","    }","","    if (_.has(node, \"minRank\")) {","      node.borderLeft = [];","      node.borderRight = [];","      for (var rank = node.minRank, maxRank = node.maxRank + 1;","           rank < maxRank;","           ++rank) {","        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);","        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);","      }","    }","  }","","  _.each(g.children(), dfs);","}","","function addBorderNode(g, prop, prefix, sg, sgNode, rank) {","  var label = { width: 0, height: 0, rank: rank, borderType: prop },","      prev = sgNode[prop][rank - 1],","      curr = util.addDummyNode(g, \"border\", label, prefix);","  sgNode[prop][rank] = curr;","  g.setParent(curr, sg);","  if (prev) {","    g.setEdge(prev, curr, { weight: 1 });","  }","}",""],"l":{"1":1,"4":1,"6":1,"7":1,"8":0,"10":0,"11":0,"14":0,"15":0,"16":0,"17":0,"20":0,"21":0,"26":0,"29":1,"30":0,"33":0,"34":0,"35":0,"36":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/coordinate-system.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/coordinate-system.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"adjust","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":19}}},"2":{"name":"undo","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":17}}},"3":{"name":"swapWidthHeight","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":28}}},"4":{"name":"(anonymous_4)","line":30,"loc":{"start":{"line":30,"column":20},"end":{"line":30,"column":32}}},"5":{"name":"(anonymous_5)","line":31,"loc":{"start":{"line":31,"column":20},"end":{"line":31,"column":32}}},"6":{"name":"swapWidthHeightOne","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":35}}},"7":{"name":"reverseY","line":40,"loc":{"start":{"line":40,"column":0},"end":{"line":40,"column":21}}},"8":{"name":"(anonymous_8)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":32}}},"9":{"name":"(anonymous_9)","line":43,"loc":{"start":{"line":43,"column":20},"end":{"line":43,"column":32}}},"10":{"name":"reverseYOne","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":28}}},"11":{"name":"swapXY","line":56,"loc":{"start":{"line":56,"column":0},"end":{"line":56,"column":19}}},"12":{"name":"(anonymous_12)","line":57,"loc":{"start":{"line":57,"column":20},"end":{"line":57,"column":32}}},"13":{"name":"(anonymous_13)","line":59,"loc":{"start":{"line":59,"column":20},"end":{"line":59,"column":32}}},"14":{"name":"swapXYOne","line":68,"loc":{"start":{"line":68,"column":0},"end":{"line":68,"column":26}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":2}},"3":{"start":{"line":10,"column":0},"end":{"line":15,"column":1}},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":48}},"5":{"start":{"line":12,"column":2},"end":{"line":14,"column":3}},"6":{"start":{"line":13,"column":4},"end":{"line":13,"column":23}},"7":{"start":{"line":17,"column":0},"end":{"line":27,"column":1}},"8":{"start":{"line":18,"column":2},"end":{"line":18,"column":48}},"9":{"start":{"line":19,"column":2},"end":{"line":21,"column":3}},"10":{"start":{"line":20,"column":4},"end":{"line":20,"column":16}},"11":{"start":{"line":23,"column":2},"end":{"line":26,"column":3}},"12":{"start":{"line":24,"column":4},"end":{"line":24,"column":14}},"13":{"start":{"line":25,"column":4},"end":{"line":25,"column":23}},"14":{"start":{"line":29,"column":0},"end":{"line":32,"column":1}},"15":{"start":{"line":30,"column":2},"end":{"line":30,"column":68}},"16":{"start":{"line":30,"column":34},"end":{"line":30,"column":64}},"17":{"start":{"line":31,"column":2},"end":{"line":31,"column":68}},"18":{"start":{"line":31,"column":34},"end":{"line":31,"column":64}},"19":{"start":{"line":34,"column":0},"end":{"line":38,"column":1}},"20":{"start":{"line":35,"column":2},"end":{"line":35,"column":22}},"21":{"start":{"line":36,"column":2},"end":{"line":36,"column":29}},"22":{"start":{"line":37,"column":2},"end":{"line":37,"column":19}},"23":{"start":{"line":40,"column":0},"end":{"line":50,"column":1}},"24":{"start":{"line":41,"column":2},"end":{"line":41,"column":61}},"25":{"start":{"line":41,"column":34},"end":{"line":41,"column":57}},"26":{"start":{"line":43,"column":2},"end":{"line":49,"column":5}},"27":{"start":{"line":44,"column":4},"end":{"line":44,"column":25}},"28":{"start":{"line":45,"column":4},"end":{"line":45,"column":37}},"29":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"30":{"start":{"line":47,"column":6},"end":{"line":47,"column":24}},"31":{"start":{"line":52,"column":0},"end":{"line":54,"column":1}},"32":{"start":{"line":53,"column":2},"end":{"line":53,"column":21}},"33":{"start":{"line":56,"column":0},"end":{"line":66,"column":1}},"34":{"start":{"line":57,"column":2},"end":{"line":57,"column":59}},"35":{"start":{"line":57,"column":34},"end":{"line":57,"column":55}},"36":{"start":{"line":59,"column":2},"end":{"line":65,"column":5}},"37":{"start":{"line":60,"column":4},"end":{"line":60,"column":25}},"38":{"start":{"line":61,"column":4},"end":{"line":61,"column":35}},"39":{"start":{"line":62,"column":4},"end":{"line":64,"column":5}},"40":{"start":{"line":63,"column":6},"end":{"line":63,"column":22}},"41":{"start":{"line":68,"column":0},"end":{"line":72,"column":1}},"42":{"start":{"line":69,"column":2},"end":{"line":69,"column":18}},"43":{"start":{"line":70,"column":2},"end":{"line":70,"column":20}},"44":{"start":{"line":71,"column":2},"end":{"line":71,"column":14}}},"branchMap":{"1":{"line":12,"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":12,"column":2}},{"start":{"line":12,"column":2},"end":{"line":12,"column":2}}]},"2":{"line":12,"type":"binary-expr","locations":[{"start":{"line":12,"column":6},"end":{"line":12,"column":22}},{"start":{"line":12,"column":26},"end":{"line":12,"column":42}}]},"3":{"line":19,"type":"if","locations":[{"start":{"line":19,"column":2},"end":{"line":19,"column":2}},{"start":{"line":19,"column":2},"end":{"line":19,"column":2}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":6},"end":{"line":19,"column":22}},{"start":{"line":19,"column":26},"end":{"line":19,"column":42}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":2},"end":{"line":23,"column":2}},{"start":{"line":23,"column":2},"end":{"line":23,"column":2}}]},"6":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":6},"end":{"line":23,"column":22}},{"start":{"line":23,"column":26},"end":{"line":23,"column":42}}]},"7":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"8":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":4},"end":{"line":62,"column":4}},{"start":{"line":62,"column":4},"end":{"line":62,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"./lodash\");","","module.exports = {","  adjust: adjust,","  undo: undo","};","","function adjust(g) {","  var rankDir = g.graph().rankdir.toLowerCase();","  if (rankDir === \"lr\" || rankDir === \"rl\") {","    swapWidthHeight(g);","  }","}","","function undo(g) {","  var rankDir = g.graph().rankdir.toLowerCase();","  if (rankDir === \"bt\" || rankDir === \"rl\") {","    reverseY(g);","  }","","  if (rankDir === \"lr\" || rankDir === \"rl\") {","    swapXY(g);","    swapWidthHeight(g);","  }","}","","function swapWidthHeight(g) {","  _.each(g.nodes(), function(v) { swapWidthHeightOne(g.node(v)); });","  _.each(g.edges(), function(e) { swapWidthHeightOne(g.edge(e)); });","}","","function swapWidthHeightOne(attrs) {","  var w = attrs.width;","  attrs.width = attrs.height;","  attrs.height = w;","}","","function reverseY(g) {","  _.each(g.nodes(), function(v) { reverseYOne(g.node(v)); });","","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    _.each(edge.points, reverseYOne);","    if (_.has(edge, \"y\")) {","      reverseYOne(edge);","    }","  });","}","","function reverseYOne(attrs) {","  attrs.y = -attrs.y;","}","","function swapXY(g) {","  _.each(g.nodes(), function(v) { swapXYOne(g.node(v)); });","","  _.each(g.edges(), function(e) {","    var edge = g.edge(e);","    _.each(edge.points, swapXYOne);","    if (_.has(edge, \"x\")) {","      swapXYOne(edge);","    }","  });","}","","function swapXYOne(attrs) {","  var x = attrs.x;","  attrs.x = attrs.y;","  attrs.y = x;","}",""],"l":{"3":1,"5":1,"10":1,"11":0,"12":0,"13":0,"17":1,"18":0,"19":0,"20":0,"23":0,"24":0,"25":0,"29":1,"30":0,"31":0,"34":1,"35":0,"36":0,"37":0,"40":1,"41":0,"43":0,"44":0,"45":0,"46":0,"47":0,"52":1,"53":0,"56":1,"57":0,"59":0,"60":0,"61":0,"62":0,"63":0,"68":1,"69":0,"70":0,"71":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"order","line":29,"loc":{"start":{"line":29,"column":0},"end":{"line":29,"column":18}}},"2":{"name":"buildLayerGraphs","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":50}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":22},"end":{"line":56,"column":37}}},"4":{"name":"sweepLayerGraphs","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":61,"column":50}}},"5":{"name":"(anonymous_5)","line":63,"loc":{"start":{"line":63,"column":22},"end":{"line":63,"column":35}}},"6":{"name":"(anonymous_6)","line":66,"loc":{"start":{"line":66,"column":22},"end":{"line":66,"column":37}}},"7":{"name":"assignOrder","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":34}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":19},"end":{"line":74,"column":35}}},"9":{"name":"(anonymous_9)","line":75,"loc":{"start":{"line":75,"column":18},"end":{"line":75,"column":33}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":10,"column":30}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":23}},"3":{"start":{"line":29,"column":0},"end":{"line":53,"column":1}},"4":{"start":{"line":30,"column":2},"end":{"line":32,"column":84}},"5":{"start":{"line":34,"column":2},"end":{"line":34,"column":30}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":27}},"7":{"start":{"line":37,"column":2},"end":{"line":38,"column":11}},"8":{"start":{"line":40,"column":2},"end":{"line":50,"column":3}},"9":{"start":{"line":41,"column":4},"end":{"line":41,"column":74}},"10":{"start":{"line":43,"column":4},"end":{"line":43,"column":40}},"11":{"start":{"line":44,"column":4},"end":{"line":44,"column":37}},"12":{"start":{"line":45,"column":4},"end":{"line":49,"column":5}},"13":{"start":{"line":46,"column":6},"end":{"line":46,"column":19}},"14":{"start":{"line":47,"column":6},"end":{"line":47,"column":35}},"15":{"start":{"line":48,"column":6},"end":{"line":48,"column":18}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":23}},"17":{"start":{"line":55,"column":0},"end":{"line":59,"column":1}},"18":{"start":{"line":56,"column":2},"end":{"line":58,"column":5}},"19":{"start":{"line":57,"column":4},"end":{"line":57,"column":50}},"20":{"start":{"line":61,"column":0},"end":{"line":71,"column":1}},"21":{"start":{"line":62,"column":2},"end":{"line":62,"column":23}},"22":{"start":{"line":63,"column":2},"end":{"line":70,"column":5}},"23":{"start":{"line":64,"column":4},"end":{"line":64,"column":31}},"24":{"start":{"line":65,"column":4},"end":{"line":65,"column":55}},"25":{"start":{"line":66,"column":4},"end":{"line":68,"column":7}},"26":{"start":{"line":67,"column":6},"end":{"line":67,"column":27}},"27":{"start":{"line":69,"column":4},"end":{"line":69,"column":46}},"28":{"start":{"line":73,"column":0},"end":{"line":79,"column":1}},"29":{"start":{"line":74,"column":2},"end":{"line":78,"column":5}},"30":{"start":{"line":75,"column":4},"end":{"line":77,"column":7}},"31":{"start":{"line":76,"column":6},"end":{"line":76,"column":26}}},"branchMap":{"1":{"line":41,"type":"cond-expr","locations":[{"start":{"line":41,"column":29},"end":{"line":41,"column":44}},{"start":{"line":41,"column":47},"end":{"line":41,"column":60}}]},"2":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\"),","    initOrder = require(\"./init-order\"),","    crossCount = require(\"./cross-count\"),","    sortSubgraph = require(\"./sort-subgraph\"),","    buildLayerGraph = require(\"./build-layer-graph\"),","    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),","    Graph = require(\"../graphlib\").Graph,","    util = require(\"../util\");","","module.exports = order;","","/*"," * Applies heuristics to minimize edge crossings in the graph and sets the best"," * order solution as an order attribute on each node."," *"," * Pre-conditions:"," *"," *    1. Graph must be DAG"," *    2. Graph nodes must be objects with a \"rank\" attribute"," *    3. Graph edges must have the \"weight\" attribute"," *"," * Post-conditions:"," *"," *    1. Graph nodes will have an \"order\" attribute based on the results of the"," *       algorithm."," */","function order(g) {","  var maxRank = util.maxRank(g),","      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),","      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");","","  var layering = initOrder(g);","  assignOrder(g, layering);","","  var bestCC = Number.POSITIVE_INFINITY,","      best;","","  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {","    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);","","    layering = util.buildLayerMatrix(g);","    var cc = crossCount(g, layering);","    if (cc < bestCC) {","      lastBest = 0;","      best = _.cloneDeep(layering);","      bestCC = cc;","    }","  }","","  assignOrder(g, best);","}","","function buildLayerGraphs(g, ranks, relationship) {","  return _.map(ranks, function(rank) {","    return buildLayerGraph(g, rank, relationship);","  });","}","","function sweepLayerGraphs(layerGraphs, biasRight) {","  var cg = new Graph();","  _.each(layerGraphs, function(lg) {","    var root = lg.graph().root;","    var sorted = sortSubgraph(lg, root, cg, biasRight);","    _.each(sorted.vs, function(v, i) {","      lg.node(v).order = i;","    });","    addSubgraphConstraints(lg, cg, sorted.vs);","  });","}","","function assignOrder(g, layering) {","  _.each(layering, function(layer) {","    _.each(layer, function(v, i) {","      g.node(v).order = i;","    });","  });","}",""],"l":{"3":1,"12":1,"29":1,"30":0,"34":0,"35":0,"37":0,"40":0,"41":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"52":0,"55":1,"56":0,"57":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"69":0,"73":1,"74":0,"75":0,"76":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/init-order.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/init-order.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"initOrder","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"2":{"name":"(anonymous_2)","line":20,"loc":{"start":{"line":20,"column":40},"end":{"line":20,"column":52}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":41},"end":{"line":23,"column":53}}},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":43},"end":{"line":24,"column":54}}},"5":{"name":"dfs","line":26,"loc":{"start":{"line":26,"column":2},"end":{"line":26,"column":18}}},"6":{"name":"(anonymous_6)","line":34,"loc":{"start":{"line":34,"column":40},"end":{"line":34,"column":52}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":27}},"3":{"start":{"line":18,"column":0},"end":{"line":38,"column":1}},"4":{"start":{"line":19,"column":2},"end":{"line":24,"column":70}},"5":{"start":{"line":21,"column":8},"end":{"line":21,"column":37}},"6":{"start":{"line":23,"column":55},"end":{"line":23,"column":77}},"7":{"start":{"line":24,"column":56},"end":{"line":24,"column":66}},"8":{"start":{"line":26,"column":2},"end":{"line":32,"column":3}},"9":{"start":{"line":27,"column":4},"end":{"line":27,"column":34}},"10":{"start":{"line":27,"column":27},"end":{"line":27,"column":34}},"11":{"start":{"line":28,"column":4},"end":{"line":28,"column":22}},"12":{"start":{"line":29,"column":4},"end":{"line":29,"column":25}},"13":{"start":{"line":30,"column":4},"end":{"line":30,"column":30}},"14":{"start":{"line":31,"column":4},"end":{"line":31,"column":33}},"15":{"start":{"line":34,"column":2},"end":{"line":34,"column":80}},"16":{"start":{"line":34,"column":54},"end":{"line":34,"column":76}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":25}},"18":{"start":{"line":37,"column":2},"end":{"line":37,"column":16}}},"branchMap":{"1":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":27,"column":4}},{"start":{"line":27,"column":4},"end":{"line":27,"column":4}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\");","","module.exports = initOrder;","","/*"," * Assigns an initial order value for each node by performing a DFS search"," * starting from nodes in the first rank. Nodes are assigned an order in their"," * rank as they are first visited."," *"," * This approach comes from Gansner, et al., \"A Technique for Drawing Directed"," * Graphs.\""," *"," * Returns a layering matrix with an array per layer and each layer sorted by"," * the order of its nodes."," */","function initOrder(g) {","  var visited = {},","      simpleNodes = _.filter(g.nodes(), function(v) {","        return !g.children(v).length;","      }),","      maxRank = _.max(_.map(simpleNodes, function(v) { return g.node(v).rank; })),","      layers = _.map(_.range(maxRank + 1), function() { return []; });","","  function dfs(v) {","    if (_.has(visited, v)) return;","    visited[v] = true;","    var node = g.node(v);","    layers[node.rank].push(v);","    _.each(g.successors(v), dfs);","  }","","  var orderedVs = _.sortBy(simpleNodes, function(v) { return g.node(v).rank; });","  _.each(orderedVs, dfs);","","  return layers;","}",""],"l":{"3":1,"5":1,"18":1,"19":0,"21":0,"23":0,"24":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"34":0,"35":0,"37":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/cross-count.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/cross-count.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"crossCount","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":33}}},"2":{"name":"twoLayerCrossCount","line":31,"loc":{"start":{"line":31,"column":0},"end":{"line":31,"column":55}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":47},"end":{"line":36,"column":63}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":49},"end":{"line":37,"column":61}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":17},"end":{"line":39,"column":29}}},"6":{"name":"(anonymous_6)","line":51,"loc":{"start":{"line":51,"column":40},"end":{"line":51,"column":51}}},"7":{"name":"(anonymous_7)","line":55,"loc":{"start":{"line":55,"column":30},"end":{"line":55,"column":46}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":28}},"3":{"start":{"line":23,"column":0},"end":{"line":29,"column":1}},"4":{"start":{"line":24,"column":2},"end":{"line":24,"column":13}},"5":{"start":{"line":25,"column":2},"end":{"line":27,"column":3}},"6":{"start":{"line":26,"column":4},"end":{"line":26,"column":60}},"7":{"start":{"line":28,"column":2},"end":{"line":28,"column":12}},"8":{"start":{"line":31,"column":0},"end":{"line":70,"column":1}},"9":{"start":{"line":35,"column":2},"end":{"line":36,"column":79}},"10":{"start":{"line":36,"column":65},"end":{"line":36,"column":74}},"11":{"start":{"line":37,"column":2},"end":{"line":44,"column":12}},"12":{"start":{"line":38,"column":4},"end":{"line":43,"column":21}},"13":{"start":{"line":40,"column":14},"end":{"line":40,"column":70}},"14":{"start":{"line":47,"column":2},"end":{"line":47,"column":21}},"15":{"start":{"line":48,"column":2},"end":{"line":48,"column":58}},"16":{"start":{"line":48,"column":41},"end":{"line":48,"column":58}},"17":{"start":{"line":49,"column":2},"end":{"line":49,"column":36}},"18":{"start":{"line":50,"column":2},"end":{"line":50,"column":18}},"19":{"start":{"line":51,"column":2},"end":{"line":51,"column":66}},"20":{"start":{"line":51,"column":53},"end":{"line":51,"column":62}},"21":{"start":{"line":54,"column":2},"end":{"line":54,"column":13}},"22":{"start":{"line":55,"column":2},"end":{"line":67,"column":6}},"23":{"start":{"line":56,"column":4},"end":{"line":56,"column":39}},"24":{"start":{"line":57,"column":4},"end":{"line":57,"column":32}},"25":{"start":{"line":58,"column":4},"end":{"line":58,"column":22}},"26":{"start":{"line":59,"column":4},"end":{"line":65,"column":5}},"27":{"start":{"line":60,"column":6},"end":{"line":62,"column":7}},"28":{"start":{"line":61,"column":8},"end":{"line":61,"column":37}},"29":{"start":{"line":63,"column":6},"end":{"line":63,"column":31}},"30":{"start":{"line":64,"column":6},"end":{"line":64,"column":34}},"31":{"start":{"line":66,"column":4},"end":{"line":66,"column":35}},"32":{"start":{"line":69,"column":2},"end":{"line":69,"column":12}}},"branchMap":{"1":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\");","","module.exports = crossCount;","","/*"," * A function that takes a layering (an array of layers, each with an array of"," * ordererd nodes) and a graph and returns a weighted crossing count."," *"," * Pre-conditions:"," *"," *    1. Input graph must be simple (not a multigraph), directed, and include"," *       only simple edges."," *    2. Edges in the input graph must have assigned weights."," *"," * Post-conditions:"," *"," *    1. The graph and layering matrix are left unchanged."," *"," * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\""," */","function crossCount(g, layering) {","  var cc = 0;","  for (var i = 1; i < layering.length; ++i) {","    cc += twoLayerCrossCount(g, layering[i-1], layering[i]);","  }","  return cc;","}","","function twoLayerCrossCount(g, northLayer, southLayer) {","  // Sort all of the edges between the north and south layers by their position","  // in the north layer and then the south. Map these edges to the position of","  // their head in the south layer.","  var southPos = _.zipObject(southLayer,","                             _.map(southLayer, function (v, i) { return i; }));","  var southEntries = _.flatten(_.map(northLayer, function(v) {","    return _.chain(g.outEdges(v))","            .map(function(e) {","              return { pos: southPos[e.w], weight: g.edge(e).weight };","            })","            .sortBy(\"pos\")","            .value();","  }), true);","","  // Build the accumulator tree","  var firstIndex = 1;","  while (firstIndex < southLayer.length) firstIndex <<= 1;","  var treeSize = 2 * firstIndex - 1;","  firstIndex -= 1;","  var tree = _.map(new Array(treeSize), function() { return 0; });","","  // Calculate the weighted crossings","  var cc = 0;","  _.each(southEntries.forEach(function(entry) {","    var index = entry.pos + firstIndex;","    tree[index] += entry.weight;","    var weightSum = 0;","    while (index > 0) {","      if (index % 2) {","        weightSum += tree[index + 1];","      }","      index = (index - 1) >> 1;","      tree[index] += entry.weight;","    }","    cc += entry.weight * weightSum;","  }));","","  return cc;","}",""],"l":{"3":1,"5":1,"23":1,"24":0,"25":0,"26":0,"28":0,"31":1,"35":0,"36":0,"37":0,"38":0,"40":0,"47":0,"48":0,"49":0,"50":0,"51":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"63":0,"64":0,"66":0,"69":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/sort-subgraph.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/sort-subgraph.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"sortSubgraph","line":8,"loc":{"start":{"line":8,"column":0},"end":{"line":8,"column":43}}},"2":{"name":"(anonymous_2)","line":16,"loc":{"start":{"line":16,"column":32},"end":{"line":16,"column":44}}},"3":{"name":"(anonymous_3)","line":22,"loc":{"start":{"line":22,"column":22},"end":{"line":22,"column":38}}},"4":{"name":"expandSubgraphs","line":55,"loc":{"start":{"line":55,"column":0},"end":{"line":55,"column":45}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":34}}},"6":{"name":"(anonymous_6)","line":57,"loc":{"start":{"line":57,"column":38},"end":{"line":57,"column":50}}},"7":{"name":"mergeBarycenters","line":66,"loc":{"start":{"line":66,"column":0},"end":{"line":66,"column":41}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":4,"column":29}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"3":{"start":{"line":8,"column":0},"end":{"line":53,"column":1}},"4":{"start":{"line":9,"column":2},"end":{"line":13,"column":21}},"5":{"start":{"line":15,"column":2},"end":{"line":19,"column":3}},"6":{"start":{"line":16,"column":4},"end":{"line":18,"column":7}},"7":{"start":{"line":17,"column":6},"end":{"line":17,"column":34}},"8":{"start":{"line":21,"column":2},"end":{"line":21,"column":43}},"9":{"start":{"line":22,"column":2},"end":{"line":30,"column":5}},"10":{"start":{"line":23,"column":4},"end":{"line":29,"column":5}},"11":{"start":{"line":24,"column":6},"end":{"line":24,"column":67}},"12":{"start":{"line":25,"column":6},"end":{"line":25,"column":42}},"13":{"start":{"line":26,"column":6},"end":{"line":28,"column":7}},"14":{"start":{"line":27,"column":8},"end":{"line":27,"column":48}},"15":{"start":{"line":32,"column":2},"end":{"line":32,"column":50}},"16":{"start":{"line":33,"column":2},"end":{"line":33,"column":38}},"17":{"start":{"line":35,"column":2},"end":{"line":35,"column":40}},"18":{"start":{"line":37,"column":2},"end":{"line":50,"column":3}},"19":{"start":{"line":38,"column":4},"end":{"line":38,"column":53}},"20":{"start":{"line":39,"column":4},"end":{"line":49,"column":5}},"21":{"start":{"line":40,"column":6},"end":{"line":41,"column":49}},"22":{"start":{"line":42,"column":6},"end":{"line":45,"column":7}},"23":{"start":{"line":43,"column":8},"end":{"line":43,"column":30}},"24":{"start":{"line":44,"column":8},"end":{"line":44,"column":26}},"25":{"start":{"line":46,"column":6},"end":{"line":47,"column":78}},"26":{"start":{"line":48,"column":6},"end":{"line":48,"column":25}},"27":{"start":{"line":52,"column":2},"end":{"line":52,"column":16}},"28":{"start":{"line":55,"column":0},"end":{"line":64,"column":1}},"29":{"start":{"line":56,"column":2},"end":{"line":63,"column":5}},"30":{"start":{"line":57,"column":4},"end":{"line":62,"column":14}},"31":{"start":{"line":58,"column":6},"end":{"line":60,"column":7}},"32":{"start":{"line":59,"column":8},"end":{"line":59,"column":31}},"33":{"start":{"line":61,"column":6},"end":{"line":61,"column":15}},"34":{"start":{"line":66,"column":0},"end":{"line":76,"column":1}},"35":{"start":{"line":67,"column":2},"end":{"line":75,"column":3}},"36":{"start":{"line":68,"column":4},"end":{"line":70,"column":55}},"37":{"start":{"line":71,"column":4},"end":{"line":71,"column":34}},"38":{"start":{"line":73,"column":4},"end":{"line":73,"column":41}},"39":{"start":{"line":74,"column":4},"end":{"line":74,"column":33}}},"branchMap":{"1":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":18},"end":{"line":11,"column":33}},{"start":{"line":11,"column":36},"end":{"line":11,"column":45}}]},"2":{"line":12,"type":"cond-expr","locations":[{"start":{"line":12,"column":18},"end":{"line":12,"column":34}},{"start":{"line":12,"column":36},"end":{"line":12,"column":45}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":2},"end":{"line":15,"column":2}},{"start":{"line":15,"column":2},"end":{"line":15,"column":2}}]},"4":{"line":17,"type":"binary-expr","locations":[{"start":{"line":17,"column":13},"end":{"line":17,"column":21}},{"start":{"line":17,"column":25},"end":{"line":17,"column":33}}]},"5":{"line":23,"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":23,"column":4}},{"start":{"line":23,"column":4},"end":{"line":23,"column":4}}]},"6":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":26,"column":6}},{"start":{"line":26,"column":6},"end":{"line":26,"column":6}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"8":{"line":39,"type":"if","locations":[{"start":{"line":39,"column":4},"end":{"line":39,"column":4}},{"start":{"line":39,"column":4},"end":{"line":39,"column":4}}]},"9":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":6},"end":{"line":42,"column":6}},{"start":{"line":42,"column":6},"end":{"line":42,"column":6}}]},"10":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":6}},{"start":{"line":58,"column":6},"end":{"line":58,"column":6}}]},"11":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]}},"code":["var _ = require(\"../lodash\"),","    barycenter = require(\"./barycenter\"),","    resolveConflicts = require(\"./resolve-conflicts\"),","    sort = require(\"./sort\");","","module.exports = sortSubgraph;","","function sortSubgraph(g, v, cg, biasRight) {","  var movable = g.children(v),","      node = g.node(v),","      bl = node ? node.borderLeft : undefined,","      br = node ? node.borderRight: undefined,","      subgraphs = {};","","  if (bl) {","    movable = _.filter(movable, function(w) {","      return w !== bl && w !== br;","    });","  }","","  var barycenters = barycenter(g, movable);","  _.each(barycenters, function(entry) {","    if (g.children(entry.v).length) {","      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);","      subgraphs[entry.v] = subgraphResult;","      if (_.has(subgraphResult, \"barycenter\")) {","        mergeBarycenters(entry, subgraphResult);","      }","    }","  });","","  var entries = resolveConflicts(barycenters, cg);","  expandSubgraphs(entries, subgraphs);","","  var result = sort(entries, biasRight);","","  if (bl) {","    result.vs = _.flatten([bl, result.vs, br], true);","    if (g.predecessors(bl).length) {","      var blPred = g.node(g.predecessors(bl)[0]),","          brPred = g.node(g.predecessors(br)[0]);","      if (!_.has(result, \"barycenter\")) {","        result.barycenter = 0;","        result.weight = 0;","      }","      result.barycenter = (result.barycenter * result.weight +","                           blPred.order + brPred.order) / (result.weight + 2);","      result.weight += 2;","    }","  }","","  return result;","}","","function expandSubgraphs(entries, subgraphs) {","  _.each(entries, function(entry) {","    entry.vs = _.flatten(entry.vs.map(function(v) {","      if (subgraphs[v]) {","        return subgraphs[v].vs;","      }","      return v;","    }), true);","  });","}","","function mergeBarycenters(target, other) {","  if (!_.isUndefined(target.barycenter)) {","    target.barycenter = (target.barycenter * target.weight +","                         other.barycenter * other.weight) /","                        (target.weight + other.weight);","    target.weight += other.weight;","  } else {","    target.barycenter = other.barycenter;","    target.weight = other.weight;","  }","}",""],"l":{"1":1,"6":1,"8":1,"9":0,"15":0,"16":0,"17":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"32":0,"33":0,"35":0,"37":0,"38":0,"39":0,"40":0,"42":0,"43":0,"44":0,"46":0,"48":0,"52":0,"55":1,"56":0,"57":0,"58":0,"59":0,"61":0,"66":1,"67":0,"68":0,"71":0,"73":0,"74":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/barycenter.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/barycenter.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"1":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"barycenter","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}}},"2":{"name":"(anonymous_2)","line":6,"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":36}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":33},"end":{"line":11,"column":50}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"3":{"start":{"line":5,"column":0},"end":{"line":27,"column":1}},"4":{"start":{"line":6,"column":2},"end":{"line":26,"column":5}},"5":{"start":{"line":7,"column":4},"end":{"line":7,"column":27}},"6":{"start":{"line":8,"column":4},"end":{"line":25,"column":5}},"7":{"start":{"line":9,"column":6},"end":{"line":9,"column":22}},"8":{"start":{"line":11,"column":6},"end":{"line":18,"column":32}},"9":{"start":{"line":12,"column":8},"end":{"line":13,"column":32}},"10":{"start":{"line":14,"column":8},"end":{"line":17,"column":10}},"11":{"start":{"line":20,"column":6},"end":{"line":24,"column":8}}},"branchMap":{"1":{"line":8,"type":"if","locations":[{"start":{"line":8,"column":4},"end":{"line":8,"column":4}},{"start":{"line":8,"column":4},"end":{"line":8,"column":4}}]}},"code":["var _ = require(\"../lodash\");","","module.exports = barycenter;","","function barycenter(g, movable) {","  return _.map(movable, function(v) {","    var inV = g.inEdges(v);","    if (!inV.length) {","      return { v: v };","    } else {","      var result = _.reduce(inV, function(acc, e) {","        var edge = g.edge(e),","            nodeU = g.node(e.v);","        return {","          sum: acc.sum + (edge.weight * nodeU.order),","          weight: acc.weight + edge.weight","        };","      }, { sum: 0, weight: 0 });","","      return {","        v: v,","        barycenter: result.sum / result.weight,","        weight: result.weight","      };","    }","  });","}","",""],"l":{"1":1,"3":1,"5":1,"6":0,"7":0,"8":0,"9":0,"11":0,"12":0,"14":0,"20":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/resolve-conflicts.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/resolve-conflicts.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":1,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"resolveConflicts","line":32,"loc":{"start":{"line":32,"column":0},"end":{"line":32,"column":39}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":18},"end":{"line":34,"column":37}}},"3":{"name":"(anonymous_3)","line":48,"loc":{"start":{"line":48,"column":21},"end":{"line":48,"column":33}}},"4":{"name":"(anonymous_4)","line":57,"loc":{"start":{"line":57,"column":42},"end":{"line":57,"column":58}}},"5":{"name":"doResolveConflicts","line":64,"loc":{"start":{"line":64,"column":0},"end":{"line":64,"column":39}}},"6":{"name":"handleIn","line":67,"loc":{"start":{"line":67,"column":2},"end":{"line":67,"column":28}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":11},"end":{"line":68,"column":28}}},"8":{"name":"handleOut","line":80,"loc":{"start":{"line":80,"column":2},"end":{"line":80,"column":29}}},"9":{"name":"(anonymous_9)","line":81,"loc":{"start":{"line":81,"column":11},"end":{"line":81,"column":28}}},"10":{"name":"(anonymous_10)","line":97,"loc":{"start":{"line":97,"column":18},"end":{"line":97,"column":34}}},"11":{"name":"(anonymous_11)","line":98,"loc":{"start":{"line":98,"column":15},"end":{"line":98,"column":31}}},"12":{"name":"mergeEntries","line":104,"loc":{"start":{"line":104,"column":0},"end":{"line":104,"column":38}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":34}},"3":{"start":{"line":32,"column":0},"end":{"line":62,"column":1}},"4":{"start":{"line":33,"column":2},"end":{"line":33,"column":25}},"5":{"start":{"line":34,"column":2},"end":{"line":46,"column":5}},"6":{"start":{"line":35,"column":4},"end":{"line":41,"column":6}},"7":{"start":{"line":42,"column":4},"end":{"line":45,"column":5}},"8":{"start":{"line":43,"column":6},"end":{"line":43,"column":40}},"9":{"start":{"line":44,"column":6},"end":{"line":44,"column":32}},"10":{"start":{"line":48,"column":2},"end":{"line":55,"column":5}},"11":{"start":{"line":49,"column":4},"end":{"line":50,"column":36}},"12":{"start":{"line":51,"column":4},"end":{"line":54,"column":5}},"13":{"start":{"line":52,"column":6},"end":{"line":52,"column":24}},"14":{"start":{"line":53,"column":6},"end":{"line":53,"column":42}},"15":{"start":{"line":57,"column":2},"end":{"line":59,"column":5}},"16":{"start":{"line":58,"column":4},"end":{"line":58,"column":27}},"17":{"start":{"line":61,"column":2},"end":{"line":61,"column":39}},"18":{"start":{"line":64,"column":0},"end":{"line":102,"column":1}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":19}},"20":{"start":{"line":67,"column":2},"end":{"line":78,"column":3}},"21":{"start":{"line":68,"column":4},"end":{"line":77,"column":6}},"22":{"start":{"line":69,"column":6},"end":{"line":71,"column":7}},"23":{"start":{"line":70,"column":8},"end":{"line":70,"column":15}},"24":{"start":{"line":72,"column":6},"end":{"line":76,"column":7}},"25":{"start":{"line":75,"column":8},"end":{"line":75,"column":37}},"26":{"start":{"line":80,"column":2},"end":{"line":87,"column":3}},"27":{"start":{"line":81,"column":4},"end":{"line":86,"column":6}},"28":{"start":{"line":82,"column":6},"end":{"line":82,"column":32}},"29":{"start":{"line":83,"column":6},"end":{"line":85,"column":7}},"30":{"start":{"line":84,"column":8},"end":{"line":84,"column":31}},"31":{"start":{"line":89,"column":2},"end":{"line":94,"column":3}},"32":{"start":{"line":90,"column":4},"end":{"line":90,"column":32}},"33":{"start":{"line":91,"column":4},"end":{"line":91,"column":24}},"34":{"start":{"line":92,"column":4},"end":{"line":92,"column":51}},"35":{"start":{"line":93,"column":4},"end":{"line":93,"column":40}},"36":{"start":{"line":96,"column":2},"end":{"line":101,"column":19}},"37":{"start":{"line":97,"column":36},"end":{"line":97,"column":57}},"38":{"start":{"line":99,"column":12},"end":{"line":99,"column":70}},"39":{"start":{"line":104,"column":0},"end":{"line":123,"column":1}},"40":{"start":{"line":105,"column":2},"end":{"line":106,"column":17}},"41":{"start":{"line":108,"column":2},"end":{"line":111,"column":3}},"42":{"start":{"line":109,"column":4},"end":{"line":109,"column":45}},"43":{"start":{"line":110,"column":4},"end":{"line":110,"column":28}},"44":{"start":{"line":113,"column":2},"end":{"line":116,"column":3}},"45":{"start":{"line":114,"column":4},"end":{"line":114,"column":45}},"46":{"start":{"line":115,"column":4},"end":{"line":115,"column":28}},"47":{"start":{"line":118,"column":2},"end":{"line":118,"column":42}},"48":{"start":{"line":119,"column":2},"end":{"line":119,"column":35}},"49":{"start":{"line":120,"column":2},"end":{"line":120,"column":25}},"50":{"start":{"line":121,"column":2},"end":{"line":121,"column":42}},"51":{"start":{"line":122,"column":2},"end":{"line":122,"column":23}}},"branchMap":{"1":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"2":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"3":{"line":51,"type":"binary-expr","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":30}},{"start":{"line":51,"column":34},"end":{"line":51,"column":56}}]},"4":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":6},"end":{"line":69,"column":6}},{"start":{"line":69,"column":6},"end":{"line":69,"column":6}}]},"5":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":6}},{"start":{"line":72,"column":6},"end":{"line":72,"column":6}}]},"6":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":10},"end":{"line":72,"column":42}},{"start":{"line":73,"column":10},"end":{"line":73,"column":42}},{"start":{"line":74,"column":10},"end":{"line":74,"column":48}}]},"7":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":6},"end":{"line":83,"column":6}},{"start":{"line":83,"column":6},"end":{"line":83,"column":6}}]},"8":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":2},"end":{"line":108,"column":2}},{"start":{"line":108,"column":2},"end":{"line":108,"column":2}}]},"9":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":2},"end":{"line":113,"column":2}},{"start":{"line":113,"column":2},"end":{"line":113,"column":2}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\");","","module.exports = resolveConflicts;","","/*"," * Given a list of entries of the form {v, barycenter, weight} and a"," * constraint graph this function will resolve any conflicts between the"," * constraint graph and the barycenters for the entries. If the barycenters for"," * an entry would violate a constraint in the constraint graph then we coalesce"," * the nodes in the conflict into a new node that respects the contraint and"," * aggregates barycenter and weight information."," *"," * This implementation is based on the description in Forster, \"A Fast and"," * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it"," * differs in some specific details."," *"," * Pre-conditions:"," *"," *    1. Each entry has the form {v, barycenter, weight}, or if the node has"," *       no barycenter, then {v}."," *"," * Returns:"," *"," *    A new list of entries of the form {vs, i, barycenter, weight}. The list"," *    `vs` may either be a singleton or it may be an aggregation of nodes"," *    ordered such that they do not violate constraints from the constraint"," *    graph. The property `i` is the lowest original index of any of the"," *    elements in `vs`."," */","function resolveConflicts(entries, cg) {","  var mappedEntries = {};","  _.each(entries, function(entry, i) {","    var tmp = mappedEntries[entry.v] = {","      indegree: 0,","      \"in\": [],","      out: [],","      vs: [entry.v],","      i: i","    };","    if (!_.isUndefined(entry.barycenter)) {","      tmp.barycenter = entry.barycenter;","      tmp.weight = entry.weight;","    }","  });","","  _.each(cg.edges(), function(e) {","    var entryV = mappedEntries[e.v],","        entryW = mappedEntries[e.w];","    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {","      entryW.indegree++;","      entryV.out.push(mappedEntries[e.w]);","    }","  });","","  var sourceSet = _.filter(mappedEntries, function(entry) {","    return !entry.indegree;","  });","","  return doResolveConflicts(sourceSet);","}","","function doResolveConflicts(sourceSet) {","  var entries = [];","","  function handleIn(vEntry) {","    return function(uEntry) {","      if (uEntry.merged) {","        return;","      }","      if (_.isUndefined(uEntry.barycenter) ||","          _.isUndefined(vEntry.barycenter) ||","          uEntry.barycenter >= vEntry.barycenter) {","        mergeEntries(vEntry, uEntry);","      }","    };","  }","","  function handleOut(vEntry) {","    return function(wEntry) {","      wEntry[\"in\"].push(vEntry);","      if (--wEntry.indegree === 0) {","        sourceSet.push(wEntry);","      }","    };","  }","","  while (sourceSet.length) {","    var entry = sourceSet.pop();","    entries.push(entry);","    _.each(entry[\"in\"].reverse(), handleIn(entry));","    _.each(entry.out, handleOut(entry));","  }","","  return _.chain(entries)","          .filter(function(entry) { return !entry.merged; })","          .map(function(entry) {","            return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);","          })","          .value();","}","","function mergeEntries(target, source) {","  var sum = 0,","      weight = 0;","","  if (target.weight) {","    sum += target.barycenter * target.weight;","    weight += target.weight;","  }","","  if (source.weight) {","    sum += source.barycenter * source.weight;","    weight += source.weight;","  }","","  target.vs = source.vs.concat(target.vs);","  target.barycenter = sum / weight;","  target.weight = weight;","  target.i = Math.min(source.i, target.i);","  source.merged = true;","}",""],"l":{"3":1,"5":1,"32":1,"33":0,"34":0,"35":0,"42":0,"43":0,"44":0,"48":0,"49":0,"51":0,"52":0,"53":0,"57":0,"58":0,"61":0,"64":1,"65":0,"67":1,"68":0,"69":0,"70":0,"72":0,"75":0,"80":1,"81":0,"82":0,"83":0,"84":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"99":0,"104":1,"105":0,"108":0,"109":0,"110":0,"113":0,"114":0,"115":0,"118":0,"119":0,"120":0,"121":0,"122":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/sort.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/sort.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"sort","line":6,"loc":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}}},"2":{"name":"(anonymous_2)","line":7,"loc":{"start":{"line":7,"column":38},"end":{"line":7,"column":54}}},"3":{"name":"(anonymous_3)","line":11,"loc":{"start":{"line":11,"column":39},"end":{"line":11,"column":55}}},"4":{"name":"(anonymous_4)","line":21,"loc":{"start":{"line":21,"column":19},"end":{"line":21,"column":36}}},"5":{"name":"consumeUnsortable","line":37,"loc":{"start":{"line":37,"column":0},"end":{"line":37,"column":50}}},"6":{"name":"compareWithBias","line":47,"loc":{"start":{"line":47,"column":0},"end":{"line":47,"column":31}}},"7":{"name":"(anonymous_7)","line":48,"loc":{"start":{"line":48,"column":9},"end":{"line":48,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":30}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":22}},"3":{"start":{"line":6,"column":0},"end":{"line":35,"column":1}},"4":{"start":{"line":7,"column":2},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":38}},"6":{"start":{"line":10,"column":2},"end":{"line":15,"column":18}},"7":{"start":{"line":11,"column":57},"end":{"line":11,"column":73}},"8":{"start":{"line":17,"column":2},"end":{"line":17,"column":46}},"9":{"start":{"line":19,"column":2},"end":{"line":19,"column":55}},"10":{"start":{"line":21,"column":2},"end":{"line":27,"column":5}},"11":{"start":{"line":22,"column":4},"end":{"line":22,"column":31}},"12":{"start":{"line":23,"column":4},"end":{"line":23,"column":22}},"13":{"start":{"line":24,"column":4},"end":{"line":24,"column":43}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":27}},"15":{"start":{"line":26,"column":4},"end":{"line":26,"column":57}},"16":{"start":{"line":29,"column":2},"end":{"line":29,"column":43}},"17":{"start":{"line":30,"column":2},"end":{"line":33,"column":3}},"18":{"start":{"line":31,"column":4},"end":{"line":31,"column":37}},"19":{"start":{"line":32,"column":4},"end":{"line":32,"column":27}},"20":{"start":{"line":34,"column":2},"end":{"line":34,"column":16}},"21":{"start":{"line":37,"column":0},"end":{"line":45,"column":1}},"22":{"start":{"line":38,"column":2},"end":{"line":38,"column":11}},"23":{"start":{"line":39,"column":2},"end":{"line":43,"column":3}},"24":{"start":{"line":40,"column":4},"end":{"line":40,"column":21}},"25":{"start":{"line":41,"column":4},"end":{"line":41,"column":21}},"26":{"start":{"line":42,"column":4},"end":{"line":42,"column":12}},"27":{"start":{"line":44,"column":2},"end":{"line":44,"column":15}},"28":{"start":{"line":47,"column":0},"end":{"line":57,"column":1}},"29":{"start":{"line":48,"column":2},"end":{"line":56,"column":4}},"30":{"start":{"line":49,"column":4},"end":{"line":53,"column":5}},"31":{"start":{"line":50,"column":6},"end":{"line":50,"column":16}},"32":{"start":{"line":51,"column":11},"end":{"line":53,"column":5}},"33":{"start":{"line":52,"column":6},"end":{"line":52,"column":15}},"34":{"start":{"line":55,"column":4},"end":{"line":55,"column":61}}},"branchMap":{"1":{"line":30,"type":"if","locations":[{"start":{"line":30,"column":2},"end":{"line":30,"column":2}},{"start":{"line":30,"column":2},"end":{"line":30,"column":2}}]},"2":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":9},"end":{"line":39,"column":26}},{"start":{"line":39,"column":30},"end":{"line":39,"column":68}}]},"3":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":49,"column":4}},{"start":{"line":49,"column":4},"end":{"line":49,"column":4}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":11},"end":{"line":51,"column":11}},{"start":{"line":51,"column":11},"end":{"line":51,"column":11}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":55,"column":19},"end":{"line":55,"column":38}},{"start":{"line":55,"column":41},"end":{"line":55,"column":60}}]}},"code":["var _ = require(\"../lodash\"),","    util = require(\"../util\");","","module.exports = sort;","","function sort(entries, biasRight) {","  var parts = util.partition(entries, function(entry) {","    return _.has(entry, \"barycenter\");","  });","  var sortable = parts.lhs,","      unsortable = _.sortBy(parts.rhs, function(entry) { return -entry.i; }),","      vs = [],","      sum = 0,","      weight = 0,","      vsIndex = 0;","","  sortable.sort(compareWithBias(!!biasRight));","","  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);","","  _.each(sortable, function (entry) {","    vsIndex += entry.vs.length;","    vs.push(entry.vs);","    sum += entry.barycenter * entry.weight;","    weight += entry.weight;","    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);","  });","","  var result = { vs: _.flatten(vs, true) };","  if (weight) {","    result.barycenter = sum / weight;","    result.weight = weight;","  }","  return result;","}","","function consumeUnsortable(vs, unsortable, index) {","  var last;","  while (unsortable.length && (last = _.last(unsortable)).i <= index) {","    unsortable.pop();","    vs.push(last.vs);","    index++;","  }","  return index;","}","","function compareWithBias(bias) {","  return function(entryV, entryW) {","    if (entryV.barycenter < entryW.barycenter) {","      return -1;","    } else if (entryV.barycenter > entryW.barycenter) {","      return 1;","    }","","    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;","  };","}",""],"l":{"1":1,"4":1,"6":1,"7":0,"8":0,"10":0,"11":0,"17":0,"19":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"29":0,"30":0,"31":0,"32":0,"34":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"44":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"55":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/build-layer-graph.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/build-layer-graph.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":0},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"buildLayerGraph","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}}},"2":{"name":"(anonymous_2)","line":39,"loc":{"start":{"line":39,"column":39},"end":{"line":39,"column":51}}},"3":{"name":"(anonymous_3)","line":41,"loc":{"start":{"line":41,"column":20},"end":{"line":41,"column":32}}},"4":{"name":"(anonymous_4)","line":50,"loc":{"start":{"line":50,"column":33},"end":{"line":50,"column":45}}},"5":{"name":"createRootNode","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":27}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":2,"column":41}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":33}},"3":{"start":{"line":36,"column":0},"end":{"line":67,"column":1}},"4":{"start":{"line":37,"column":2},"end":{"line":39,"column":74}},"5":{"start":{"line":39,"column":53},"end":{"line":39,"column":70}},"6":{"start":{"line":41,"column":2},"end":{"line":64,"column":5}},"7":{"start":{"line":42,"column":4},"end":{"line":43,"column":29}},"8":{"start":{"line":45,"column":4},"end":{"line":63,"column":5}},"9":{"start":{"line":46,"column":6},"end":{"line":46,"column":24}},"10":{"start":{"line":47,"column":6},"end":{"line":47,"column":42}},"11":{"start":{"line":50,"column":6},"end":{"line":55,"column":9}},"12":{"start":{"line":51,"column":8},"end":{"line":53,"column":60}},"13":{"start":{"line":54,"column":8},"end":{"line":54,"column":68}},"14":{"start":{"line":57,"column":6},"end":{"line":62,"column":7}},"15":{"start":{"line":58,"column":8},"end":{"line":61,"column":11}},"16":{"start":{"line":66,"column":2},"end":{"line":66,"column":16}},"17":{"start":{"line":69,"column":0},"end":{"line":73,"column":1}},"18":{"start":{"line":70,"column":2},"end":{"line":70,"column":8}},"19":{"start":{"line":71,"column":2},"end":{"line":71,"column":47}},"20":{"start":{"line":72,"column":2},"end":{"line":72,"column":11}}},"branchMap":{"1":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":4},"end":{"line":45,"column":4}},{"start":{"line":45,"column":4},"end":{"line":45,"column":4}}]},"2":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":26}},{"start":{"line":45,"column":30},"end":{"line":45,"column":50}},{"start":{"line":45,"column":54},"end":{"line":45,"column":74}}]},"3":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":26},"end":{"line":47,"column":32}},{"start":{"line":47,"column":36},"end":{"line":47,"column":40}}]},"4":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":28},"end":{"line":51,"column":31}},{"start":{"line":51,"column":34},"end":{"line":51,"column":37}}]},"5":{"line":53,"type":"cond-expr","locations":[{"start":{"line":53,"column":44},"end":{"line":53,"column":55}},{"start":{"line":53,"column":58},"end":{"line":53,"column":59}}]},"6":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]}},"code":["var _ = require(\"../lodash\"),","    Graph = require(\"../graphlib\").Graph;","","module.exports = buildLayerGraph;","","/*"," * Constructs a graph that can be used to sort a layer of nodes. The graph will"," * contain all base and subgraph nodes from the request layer in their original"," * hierarchy and any edges that are incident on these nodes and are of the type"," * requested by the \"relationship\" parameter."," *"," * Nodes from the requested rank that do not have parents are assigned a root"," * node in the output graph, which is set in the root graph attribute. This"," * makes it easy to walk the hierarchy of movable nodes during ordering."," *"," * Pre-conditions:"," *"," *    1. Input graph is a DAG"," *    2. Base nodes in the input graph have a rank attribute"," *    3. Subgraph nodes in the input graph has minRank and maxRank attributes"," *    4. Edges have an assigned weight"," *"," * Post-conditions:"," *"," *    1. Output graph has all nodes in the movable rank with preserved"," *       hierarchy."," *    2. Root nodes in the movable layer are made children of the node"," *       indicated by the root attribute of the graph."," *    3. Non-movable nodes incident on movable nodes, selected by the"," *       relationship parameter, are included in the graph (without hierarchy)."," *    4. Edges incident on movable nodes, selected by the relationship"," *       parameter, are added to the output graph."," *    5. The weights for copied edges are aggregated as need, since the output"," *       graph is not a multi-graph."," */","function buildLayerGraph(g, rank, relationship) {","  var root = createRootNode(g),","      result = new Graph({ compound: true }).setGraph({ root: root })","                  .setDefaultNodeLabel(function(v) { return g.node(v); });","","  _.each(g.nodes(), function(v) {","    var node = g.node(v),","        parent = g.parent(v);","","    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {","      result.setNode(v);","      result.setParent(v, parent || root);","","      // This assumes we have only short edges!","      _.each(g[relationship](v), function(e) {","        var u = e.v === v ? e.w : e.v,","            edge = result.edge(u, v),","            weight = !_.isUndefined(edge) ? edge.weight : 0;","        result.setEdge(u, v, { weight: g.edge(e).weight + weight });","      });","","      if (_.has(node, \"minRank\")) {","        result.setNode(v, {","          borderLeft: node.borderLeft[rank],","          borderRight: node.borderRight[rank]","        });","      }","    }","  });","","  return result;","}","","function createRootNode(g) {","  var v;","  while (g.hasNode((v = _.uniqueId(\"_root\"))));","  return v;","}",""],"l":{"1":1,"4":1,"36":1,"37":0,"39":0,"41":0,"42":0,"45":0,"46":0,"47":0,"50":0,"51":0,"54":0,"57":0,"58":0,"66":0,"69":1,"70":0,"71":0,"72":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/add-subgraph-constraints.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/order/add-subgraph-constraints.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"addSubgraphConstraints","line":5,"loc":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}}},"2":{"name":"(anonymous_2)","line":9,"loc":{"start":{"line":9,"column":13},"end":{"line":9,"column":25}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":29}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":40}},"3":{"start":{"line":5,"column":0},"end":{"line":53,"column":1}},"4":{"start":{"line":6,"column":2},"end":{"line":7,"column":15}},"5":{"start":{"line":9,"column":2},"end":{"line":28,"column":5}},"6":{"start":{"line":10,"column":4},"end":{"line":12,"column":18}},"7":{"start":{"line":13,"column":4},"end":{"line":27,"column":5}},"8":{"start":{"line":14,"column":6},"end":{"line":14,"column":31}},"9":{"start":{"line":15,"column":6},"end":{"line":21,"column":7}},"10":{"start":{"line":16,"column":8},"end":{"line":16,"column":33}},"11":{"start":{"line":17,"column":8},"end":{"line":17,"column":29}},"12":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"13":{"start":{"line":20,"column":8},"end":{"line":20,"column":25}},"14":{"start":{"line":22,"column":6},"end":{"line":25,"column":7}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":37}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":15}},"17":{"start":{"line":26,"column":6},"end":{"line":26,"column":21}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":6},"end":{"line":15,"column":6}},{"start":{"line":15,"column":6},"end":{"line":15,"column":6}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":6},"end":{"line":22,"column":6}},{"start":{"line":22,"column":6},"end":{"line":22,"column":6}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":10},"end":{"line":22,"column":19}},{"start":{"line":22,"column":23},"end":{"line":22,"column":42}}]}},"code":["var _ = require(\"../lodash\");","","module.exports = addSubgraphConstraints;","","function addSubgraphConstraints(g, cg, vs) {","  var prev = {},","      rootPrev;","","  _.each(vs, function(v) {","    var child = g.parent(v),","        parent,","        prevChild;","    while (child) {","      parent = g.parent(child);","      if (parent) {","        prevChild = prev[parent];","        prev[parent] = child;","      } else {","        prevChild = rootPrev;","        rootPrev = child;","      }","      if (prevChild && prevChild !== child) {","        cg.setEdge(prevChild, child);","        return;","      }","      child = parent;","    }","  });","","  /*","  function dfs(v) {","    var children = v ? g.children(v) : g.children();","    if (children.length) {","      var min = Number.POSITIVE_INFINITY,","          subgraphs = [];","      _.each(children, function(child) {","        var childMin = dfs(child);","        if (g.children(child).length) {","          subgraphs.push({ v: child, order: childMin });","        }","        min = Math.min(min, childMin);","      });","      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {","        cg.setEdge(prev.v, curr.v);","        return curr;","      });","      return min;","    }","    return g.node(v).order;","  }","  dfs(undefined);","  */","}",""],"l":{"1":1,"3":1,"5":1,"6":0,"9":0,"10":0,"13":0,"14":0,"15":0,"16":0,"17":0,"19":0,"20":0,"22":0,"23":0,"24":0,"26":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/position/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/position/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"position","line":9,"loc":{"start":{"line":9,"column":0},"end":{"line":9,"column":21}}},"2":{"name":"(anonymous_2)","line":13,"loc":{"start":{"line":13,"column":23},"end":{"line":13,"column":38}}},"3":{"name":"positionY","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":22}}},"4":{"name":"(anonymous_4)","line":22,"loc":{"start":{"line":22,"column":19},"end":{"line":22,"column":35}}},"5":{"name":"(anonymous_5)","line":23,"loc":{"start":{"line":23,"column":39},"end":{"line":23,"column":51}}},"6":{"name":"(anonymous_6)","line":24,"loc":{"start":{"line":24,"column":18},"end":{"line":24,"column":30}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":42}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":26}},"3":{"start":{"line":9,"column":0},"end":{"line":16,"column":1}},"4":{"start":{"line":10,"column":2},"end":{"line":10,"column":33}},"5":{"start":{"line":12,"column":2},"end":{"line":12,"column":15}},"6":{"start":{"line":13,"column":2},"end":{"line":15,"column":5}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":20}},"8":{"start":{"line":18,"column":0},"end":{"line":29,"column":1}},"9":{"start":{"line":19,"column":2},"end":{"line":21,"column":16}},"10":{"start":{"line":22,"column":2},"end":{"line":28,"column":5}},"11":{"start":{"line":23,"column":4},"end":{"line":23,"column":82}},"12":{"start":{"line":23,"column":53},"end":{"line":23,"column":77}},"13":{"start":{"line":24,"column":4},"end":{"line":26,"column":7}},"14":{"start":{"line":25,"column":6},"end":{"line":25,"column":42}},"15":{"start":{"line":27,"column":4},"end":{"line":27,"column":33}}},"branchMap":{},"code":["\"use strict\";","","var _ = require(\"../lodash\"),","    util = require(\"../util\"),","    positionX = require(\"./bk\").positionX;","","module.exports = position;","","function position(g) {","  g = util.asNonCompoundGraph(g);","","  positionY(g);","  _.each(positionX(g), function(x, v) {","    g.node(v).x = x;","  });","}","","function positionY(g) {","  var layering = util.buildLayerMatrix(g),","      rankSep = g.graph().ranksep,","      prevY = 0;","  _.each(layering, function(layer) {","    var maxHeight = _.max(_.map(layer, function(v) { return g.node(v).height; }));","    _.each(layer, function(v) {","      g.node(v).y = prevY + maxHeight / 2;","    });","    prevY += maxHeight + rankSep;","  });","}","",""],"l":{"3":1,"7":1,"9":1,"10":0,"12":0,"13":0,"14":0,"18":1,"19":0,"22":0,"23":0,"24":0,"25":0,"27":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/position/bk.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/position/bk.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":1,"140":0,"141":0,"142":0,"143":0,"144":0,"145":1,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":1,"191":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0},"fnMap":{"1":{"name":"findType1Conflicts","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}}},"2":{"name":"visitLayer","line":45,"loc":{"start":{"line":45,"column":2},"end":{"line":45,"column":40}}},"3":{"name":"(anonymous_3)","line":56,"loc":{"start":{"line":56,"column":18},"end":{"line":56,"column":33}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":43},"end":{"line":61,"column":62}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":43},"end":{"line":62,"column":55}}},"6":{"name":"findType2Conflicts","line":83,"loc":{"start":{"line":83,"column":0},"end":{"line":83,"column":41}}},"7":{"name":"scan","line":86,"loc":{"start":{"line":86,"column":2},"end":{"line":86,"column":77}}},"8":{"name":"(anonymous_8)","line":88,"loc":{"start":{"line":88,"column":40},"end":{"line":88,"column":52}}},"9":{"name":"(anonymous_9)","line":91,"loc":{"start":{"line":91,"column":34},"end":{"line":91,"column":46}}},"10":{"name":"visitLayer","line":103,"loc":{"start":{"line":103,"column":2},"end":{"line":103,"column":36}}},"11":{"name":"(anonymous_11)","line":108,"loc":{"start":{"line":108,"column":18},"end":{"line":108,"column":46}}},"12":{"name":"findOtherInnerSegmentNode","line":128,"loc":{"start":{"line":128,"column":0},"end":{"line":128,"column":41}}},"13":{"name":"(anonymous_13)","line":130,"loc":{"start":{"line":130,"column":37},"end":{"line":130,"column":49}}},"14":{"name":"addConflict","line":136,"loc":{"start":{"line":136,"column":0},"end":{"line":136,"column":38}}},"15":{"name":"hasConflict","line":150,"loc":{"start":{"line":150,"column":0},"end":{"line":150,"column":38}}},"16":{"name":"verticalAlignment","line":167,"loc":{"start":{"line":167,"column":0},"end":{"line":167,"column":63}}},"17":{"name":"(anonymous_17)","line":175,"loc":{"start":{"line":175,"column":19},"end":{"line":175,"column":35}}},"18":{"name":"(anonymous_18)","line":176,"loc":{"start":{"line":176,"column":18},"end":{"line":176,"column":37}}},"19":{"name":"(anonymous_19)","line":183,"loc":{"start":{"line":183,"column":19},"end":{"line":183,"column":35}}},"20":{"name":"(anonymous_20)","line":185,"loc":{"start":{"line":185,"column":18},"end":{"line":185,"column":30}}},"21":{"name":"(anonymous_21)","line":188,"loc":{"start":{"line":188,"column":26},"end":{"line":188,"column":38}}},"22":{"name":"horizontalCompaction","line":207,"loc":{"start":{"line":207,"column":0},"end":{"line":207,"column":68}}},"23":{"name":"pass1","line":218,"loc":{"start":{"line":218,"column":2},"end":{"line":218,"column":20}}},"24":{"name":"(anonymous_24)","line":221,"loc":{"start":{"line":221,"column":42},"end":{"line":221,"column":59}}},"25":{"name":"pass2","line":230,"loc":{"start":{"line":230,"column":2},"end":{"line":230,"column":20}}},"26":{"name":"(anonymous_26)","line":234,"loc":{"start":{"line":234,"column":45},"end":{"line":234,"column":62}}},"27":{"name":"(anonymous_27)","line":246,"loc":{"start":{"line":246,"column":16},"end":{"line":246,"column":28}}},"28":{"name":"buildBlockGraph","line":254,"loc":{"start":{"line":254,"column":0},"end":{"line":254,"column":56}}},"29":{"name":"(anonymous_29)","line":259,"loc":{"start":{"line":259,"column":19},"end":{"line":259,"column":35}}},"30":{"name":"(anonymous_30)","line":261,"loc":{"start":{"line":261,"column":18},"end":{"line":261,"column":30}}},"31":{"name":"findSmallestWidthAlignment","line":279,"loc":{"start":{"line":279,"column":0},"end":{"line":279,"column":44}}},"32":{"name":"(anonymous_32)","line":280,"loc":{"start":{"line":280,"column":20},"end":{"line":280,"column":33}}},"33":{"name":"(anonymous_33)","line":281,"loc":{"start":{"line":281,"column":24},"end":{"line":281,"column":39}}},"34":{"name":"(anonymous_34)","line":282,"loc":{"start":{"line":282,"column":24},"end":{"line":282,"column":39}}},"35":{"name":"alignCoordinates","line":294,"loc":{"start":{"line":294,"column":0},"end":{"line":294,"column":40}}},"36":{"name":"(anonymous_36)","line":298,"loc":{"start":{"line":298,"column":21},"end":{"line":298,"column":36}}},"37":{"name":"(anonymous_37)","line":299,"loc":{"start":{"line":299,"column":23},"end":{"line":299,"column":39}}},"38":{"name":"(anonymous_38)","line":308,"loc":{"start":{"line":308,"column":41},"end":{"line":308,"column":53}}},"39":{"name":"balance","line":314,"loc":{"start":{"line":314,"column":0},"end":{"line":314,"column":29}}},"40":{"name":"(anonymous_40)","line":315,"loc":{"start":{"line":315,"column":29},"end":{"line":315,"column":49}}},"41":{"name":"positionX","line":325,"loc":{"start":{"line":325,"column":0},"end":{"line":325,"column":22}}},"42":{"name":"(anonymous_42)","line":332,"loc":{"start":{"line":332,"column":21},"end":{"line":332,"column":36}}},"43":{"name":"(anonymous_43)","line":334,"loc":{"start":{"line":334,"column":23},"end":{"line":334,"column":39}}},"44":{"name":"(anonymous_44)","line":336,"loc":{"start":{"line":336,"column":51},"end":{"line":336,"column":67}}},"45":{"name":"(anonymous_45)","line":347,"loc":{"start":{"line":347,"column":29},"end":{"line":347,"column":41}}},"46":{"name":"sep","line":358,"loc":{"start":{"line":358,"column":0},"end":{"line":358,"column":43}}},"47":{"name":"(anonymous_47)","line":359,"loc":{"start":{"line":359,"column":9},"end":{"line":359,"column":27}}},"48":{"name":"width","line":396,"loc":{"start":{"line":396,"column":0},"end":{"line":396,"column":21}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":5,"column":30}},"2":{"start":{"line":12,"column":0},"end":{"line":23,"column":2}},"3":{"start":{"line":42,"column":0},"end":{"line":81,"column":1}},"4":{"start":{"line":43,"column":2},"end":{"line":43,"column":21}},"5":{"start":{"line":45,"column":2},"end":{"line":77,"column":3}},"6":{"start":{"line":46,"column":4},"end":{"line":54,"column":31}},"7":{"start":{"line":56,"column":4},"end":{"line":74,"column":7}},"8":{"start":{"line":57,"column":6},"end":{"line":58,"column":53}},"9":{"start":{"line":60,"column":6},"end":{"line":73,"column":7}},"10":{"start":{"line":61,"column":8},"end":{"line":70,"column":11}},"11":{"start":{"line":62,"column":10},"end":{"line":69,"column":13}},"12":{"start":{"line":63,"column":12},"end":{"line":64,"column":36}},"13":{"start":{"line":65,"column":12},"end":{"line":68,"column":13}},"14":{"start":{"line":67,"column":14},"end":{"line":67,"column":50}},"15":{"start":{"line":71,"column":8},"end":{"line":71,"column":24}},"16":{"start":{"line":72,"column":8},"end":{"line":72,"column":16}},"17":{"start":{"line":76,"column":4},"end":{"line":76,"column":17}},"18":{"start":{"line":79,"column":2},"end":{"line":79,"column":33}},"19":{"start":{"line":80,"column":2},"end":{"line":80,"column":19}},"20":{"start":{"line":83,"column":0},"end":{"line":126,"column":1}},"21":{"start":{"line":84,"column":2},"end":{"line":84,"column":21}},"22":{"start":{"line":86,"column":2},"end":{"line":100,"column":3}},"23":{"start":{"line":87,"column":4},"end":{"line":87,"column":10}},"24":{"start":{"line":88,"column":4},"end":{"line":99,"column":7}},"25":{"start":{"line":89,"column":6},"end":{"line":89,"column":19}},"26":{"start":{"line":90,"column":6},"end":{"line":98,"column":7}},"27":{"start":{"line":91,"column":8},"end":{"line":97,"column":11}},"28":{"start":{"line":92,"column":10},"end":{"line":92,"column":32}},"29":{"start":{"line":93,"column":10},"end":{"line":96,"column":11}},"30":{"start":{"line":95,"column":12},"end":{"line":95,"column":41}},"31":{"start":{"line":103,"column":2},"end":{"line":122,"column":3}},"32":{"start":{"line":104,"column":4},"end":{"line":106,"column":21}},"33":{"start":{"line":108,"column":4},"end":{"line":119,"column":7}},"34":{"start":{"line":109,"column":6},"end":{"line":117,"column":7}},"35":{"start":{"line":110,"column":8},"end":{"line":110,"column":45}},"36":{"start":{"line":111,"column":8},"end":{"line":116,"column":9}},"37":{"start":{"line":112,"column":10},"end":{"line":112,"column":55}},"38":{"start":{"line":113,"column":10},"end":{"line":113,"column":76}},"39":{"start":{"line":114,"column":10},"end":{"line":114,"column":36}},"40":{"start":{"line":115,"column":10},"end":{"line":115,"column":38}},"41":{"start":{"line":118,"column":6},"end":{"line":118,"column":70}},"42":{"start":{"line":121,"column":4},"end":{"line":121,"column":17}},"43":{"start":{"line":124,"column":2},"end":{"line":124,"column":33}},"44":{"start":{"line":125,"column":2},"end":{"line":125,"column":19}},"45":{"start":{"line":128,"column":0},"end":{"line":134,"column":1}},"46":{"start":{"line":129,"column":2},"end":{"line":133,"column":3}},"47":{"start":{"line":130,"column":4},"end":{"line":132,"column":7}},"48":{"start":{"line":131,"column":6},"end":{"line":131,"column":29}},"49":{"start":{"line":136,"column":0},"end":{"line":148,"column":1}},"50":{"start":{"line":137,"column":2},"end":{"line":141,"column":3}},"51":{"start":{"line":138,"column":4},"end":{"line":138,"column":16}},"52":{"start":{"line":139,"column":4},"end":{"line":139,"column":10}},"53":{"start":{"line":140,"column":4},"end":{"line":140,"column":12}},"54":{"start":{"line":143,"column":2},"end":{"line":143,"column":32}},"55":{"start":{"line":144,"column":2},"end":{"line":146,"column":3}},"56":{"start":{"line":145,"column":4},"end":{"line":145,"column":35}},"57":{"start":{"line":147,"column":2},"end":{"line":147,"column":23}},"58":{"start":{"line":150,"column":0},"end":{"line":157,"column":1}},"59":{"start":{"line":151,"column":2},"end":{"line":155,"column":3}},"60":{"start":{"line":152,"column":4},"end":{"line":152,"column":16}},"61":{"start":{"line":153,"column":4},"end":{"line":153,"column":10}},"62":{"start":{"line":154,"column":4},"end":{"line":154,"column":12}},"63":{"start":{"line":156,"column":2},"end":{"line":156,"column":32}},"64":{"start":{"line":167,"column":0},"end":{"line":205,"column":1}},"65":{"start":{"line":168,"column":2},"end":{"line":170,"column":15}},"66":{"start":{"line":175,"column":2},"end":{"line":181,"column":5}},"67":{"start":{"line":176,"column":4},"end":{"line":180,"column":7}},"68":{"start":{"line":177,"column":6},"end":{"line":177,"column":18}},"69":{"start":{"line":178,"column":6},"end":{"line":178,"column":19}},"70":{"start":{"line":179,"column":6},"end":{"line":179,"column":21}},"71":{"start":{"line":183,"column":2},"end":{"line":202,"column":5}},"72":{"start":{"line":184,"column":4},"end":{"line":184,"column":21}},"73":{"start":{"line":185,"column":4},"end":{"line":201,"column":7}},"74":{"start":{"line":186,"column":6},"end":{"line":186,"column":29}},"75":{"start":{"line":187,"column":6},"end":{"line":200,"column":7}},"76":{"start":{"line":188,"column":8},"end":{"line":188,"column":58}},"77":{"start":{"line":188,"column":40},"end":{"line":188,"column":54}},"78":{"start":{"line":189,"column":8},"end":{"line":189,"column":37}},"79":{"start":{"line":190,"column":8},"end":{"line":199,"column":9}},"80":{"start":{"line":191,"column":10},"end":{"line":191,"column":24}},"81":{"start":{"line":192,"column":10},"end":{"line":198,"column":11}},"82":{"start":{"line":195,"column":12},"end":{"line":195,"column":25}},"83":{"start":{"line":196,"column":12},"end":{"line":196,"column":41}},"84":{"start":{"line":197,"column":12},"end":{"line":197,"column":29}},"85":{"start":{"line":204,"column":2},"end":{"line":204,"column":38}},"86":{"start":{"line":207,"column":0},"end":{"line":251,"column":1}},"87":{"start":{"line":213,"column":2},"end":{"line":214,"column":62}},"88":{"start":{"line":217,"column":2},"end":{"line":217,"column":19}},"89":{"start":{"line":218,"column":2},"end":{"line":226,"column":3}},"90":{"start":{"line":219,"column":4},"end":{"line":225,"column":5}},"91":{"start":{"line":220,"column":6},"end":{"line":220,"column":24}},"92":{"start":{"line":221,"column":6},"end":{"line":224,"column":12}},"93":{"start":{"line":222,"column":8},"end":{"line":222,"column":19}},"94":{"start":{"line":223,"column":8},"end":{"line":223,"column":55}},"95":{"start":{"line":227,"column":2},"end":{"line":227,"column":32}},"96":{"start":{"line":229,"column":2},"end":{"line":229,"column":61}},"97":{"start":{"line":230,"column":2},"end":{"line":242,"column":3}},"98":{"start":{"line":231,"column":4},"end":{"line":241,"column":5}},"99":{"start":{"line":232,"column":6},"end":{"line":232,"column":19}},"100":{"start":{"line":233,"column":6},"end":{"line":233,"column":27}},"101":{"start":{"line":234,"column":6},"end":{"line":237,"column":35}},"102":{"start":{"line":235,"column":8},"end":{"line":235,"column":19}},"103":{"start":{"line":236,"column":8},"end":{"line":236,"column":55}},"104":{"start":{"line":238,"column":6},"end":{"line":240,"column":7}},"105":{"start":{"line":239,"column":8},"end":{"line":239,"column":37}},"106":{"start":{"line":243,"column":2},"end":{"line":243,"column":32}},"107":{"start":{"line":246,"column":2},"end":{"line":248,"column":5}},"108":{"start":{"line":247,"column":4},"end":{"line":247,"column":24}},"109":{"start":{"line":250,"column":2},"end":{"line":250,"column":12}},"110":{"start":{"line":254,"column":0},"end":{"line":274,"column":1}},"111":{"start":{"line":255,"column":2},"end":{"line":257,"column":70}},"112":{"start":{"line":259,"column":2},"end":{"line":271,"column":5}},"113":{"start":{"line":260,"column":4},"end":{"line":260,"column":10}},"114":{"start":{"line":261,"column":4},"end":{"line":270,"column":7}},"115":{"start":{"line":262,"column":6},"end":{"line":262,"column":26}},"116":{"start":{"line":263,"column":6},"end":{"line":263,"column":32}},"117":{"start":{"line":264,"column":6},"end":{"line":268,"column":7}},"118":{"start":{"line":265,"column":8},"end":{"line":266,"column":52}},"119":{"start":{"line":267,"column":8},"end":{"line":267,"column":81}},"120":{"start":{"line":269,"column":6},"end":{"line":269,"column":12}},"121":{"start":{"line":273,"column":2},"end":{"line":273,"column":20}},"122":{"start":{"line":279,"column":0},"end":{"line":285,"column":1}},"123":{"start":{"line":280,"column":2},"end":{"line":284,"column":5}},"124":{"start":{"line":281,"column":4},"end":{"line":282,"column":72}},"125":{"start":{"line":281,"column":41},"end":{"line":281,"column":68}},"126":{"start":{"line":282,"column":41},"end":{"line":282,"column":68}},"127":{"start":{"line":283,"column":4},"end":{"line":283,"column":21}},"128":{"start":{"line":294,"column":0},"end":{"line":312,"column":1}},"129":{"start":{"line":295,"column":2},"end":{"line":296,"column":34}},"130":{"start":{"line":298,"column":2},"end":{"line":311,"column":5}},"131":{"start":{"line":299,"column":4},"end":{"line":310,"column":7}},"132":{"start":{"line":300,"column":6},"end":{"line":302,"column":16}},"133":{"start":{"line":303,"column":6},"end":{"line":303,"column":33}},"134":{"start":{"line":303,"column":26},"end":{"line":303,"column":33}},"135":{"start":{"line":305,"column":6},"end":{"line":305,"column":78}},"136":{"start":{"line":307,"column":6},"end":{"line":309,"column":7}},"137":{"start":{"line":308,"column":8},"end":{"line":308,"column":76}},"138":{"start":{"line":308,"column":55},"end":{"line":308,"column":72}},"139":{"start":{"line":314,"column":0},"end":{"line":323,"column":1}},"140":{"start":{"line":315,"column":2},"end":{"line":322,"column":5}},"141":{"start":{"line":316,"column":4},"end":{"line":321,"column":5}},"142":{"start":{"line":317,"column":6},"end":{"line":317,"column":41}},"143":{"start":{"line":319,"column":6},"end":{"line":319,"column":41}},"144":{"start":{"line":320,"column":6},"end":{"line":320,"column":33}},"145":{"start":{"line":325,"column":0},"end":{"line":356,"column":1}},"146":{"start":{"line":326,"column":2},"end":{"line":328,"column":59}},"147":{"start":{"line":330,"column":2},"end":{"line":331,"column":23}},"148":{"start":{"line":332,"column":2},"end":{"line":351,"column":5}},"149":{"start":{"line":333,"column":4},"end":{"line":333,"column":78}},"150":{"start":{"line":334,"column":4},"end":{"line":350,"column":7}},"151":{"start":{"line":335,"column":6},"end":{"line":339,"column":7}},"152":{"start":{"line":336,"column":8},"end":{"line":338,"column":11}},"153":{"start":{"line":337,"column":10},"end":{"line":337,"column":43}},"154":{"start":{"line":341,"column":6},"end":{"line":341,"column":79}},"155":{"start":{"line":342,"column":6},"end":{"line":342,"column":80}},"156":{"start":{"line":343,"column":6},"end":{"line":345,"column":51}},"157":{"start":{"line":346,"column":6},"end":{"line":348,"column":7}},"158":{"start":{"line":347,"column":8},"end":{"line":347,"column":57}},"159":{"start":{"line":347,"column":43},"end":{"line":347,"column":53}},"160":{"start":{"line":349,"column":6},"end":{"line":349,"column":29}},"161":{"start":{"line":353,"column":2},"end":{"line":353,"column":57}},"162":{"start":{"line":354,"column":2},"end":{"line":354,"column":39}},"163":{"start":{"line":355,"column":2},"end":{"line":355,"column":39}},"164":{"start":{"line":358,"column":0},"end":{"line":394,"column":1}},"165":{"start":{"line":359,"column":2},"end":{"line":393,"column":4}},"166":{"start":{"line":360,"column":4},"end":{"line":363,"column":14}},"167":{"start":{"line":365,"column":4},"end":{"line":365,"column":28}},"168":{"start":{"line":366,"column":4},"end":{"line":371,"column":5}},"169":{"start":{"line":367,"column":6},"end":{"line":370,"column":7}},"170":{"start":{"line":368,"column":18},"end":{"line":368,"column":44}},"171":{"start":{"line":368,"column":45},"end":{"line":368,"column":51}},"172":{"start":{"line":369,"column":18},"end":{"line":369,"column":43}},"173":{"start":{"line":369,"column":44},"end":{"line":369,"column":50}},"174":{"start":{"line":372,"column":4},"end":{"line":374,"column":5}},"175":{"start":{"line":373,"column":6},"end":{"line":373,"column":41}},"176":{"start":{"line":375,"column":4},"end":{"line":375,"column":14}},"177":{"start":{"line":377,"column":4},"end":{"line":377,"column":50}},"178":{"start":{"line":378,"column":4},"end":{"line":378,"column":50}},"179":{"start":{"line":380,"column":4},"end":{"line":380,"column":28}},"180":{"start":{"line":381,"column":4},"end":{"line":386,"column":5}},"181":{"start":{"line":382,"column":6},"end":{"line":385,"column":7}},"182":{"start":{"line":383,"column":18},"end":{"line":383,"column":43}},"183":{"start":{"line":383,"column":44},"end":{"line":383,"column":50}},"184":{"start":{"line":384,"column":18},"end":{"line":384,"column":44}},"185":{"start":{"line":384,"column":45},"end":{"line":384,"column":51}},"186":{"start":{"line":387,"column":4},"end":{"line":389,"column":5}},"187":{"start":{"line":388,"column":6},"end":{"line":388,"column":41}},"188":{"start":{"line":390,"column":4},"end":{"line":390,"column":14}},"189":{"start":{"line":392,"column":4},"end":{"line":392,"column":15}},"190":{"start":{"line":396,"column":0},"end":{"line":398,"column":1}},"191":{"start":{"line":397,"column":2},"end":{"line":397,"column":25}}},"branchMap":{"1":{"line":58,"type":"cond-expr","locations":[{"start":{"line":58,"column":19},"end":{"line":58,"column":34}},{"start":{"line":58,"column":37},"end":{"line":58,"column":52}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":11}},{"start":{"line":60,"column":15},"end":{"line":60,"column":29}}]},"4":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":12},"end":{"line":65,"column":12}},{"start":{"line":65,"column":12},"end":{"line":65,"column":12}}]},"5":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":17},"end":{"line":65,"column":26}},{"start":{"line":65,"column":30},"end":{"line":65,"column":39}},{"start":{"line":66,"column":16},"end":{"line":66,"column":57}}]},"6":{"line":66,"type":"binary-expr","locations":[{"start":{"line":66,"column":18},"end":{"line":66,"column":30}},{"start":{"line":66,"column":34},"end":{"line":66,"column":56}}]},"7":{"line":90,"type":"if","locations":[{"start":{"line":90,"column":6},"end":{"line":90,"column":6}},{"start":{"line":90,"column":6},"end":{"line":90,"column":6}}]},"8":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":10},"end":{"line":93,"column":10}},{"start":{"line":93,"column":10},"end":{"line":93,"column":10}}]},"9":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":14},"end":{"line":93,"column":25}},{"start":{"line":94,"column":15},"end":{"line":94,"column":44}},{"start":{"line":94,"column":48},"end":{"line":94,"column":77}}]},"10":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":6},"end":{"line":109,"column":6}},{"start":{"line":109,"column":6},"end":{"line":109,"column":6}}]},"11":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":8},"end":{"line":111,"column":8}},{"start":{"line":111,"column":8},"end":{"line":111,"column":8}}]},"12":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":2},"end":{"line":129,"column":2}},{"start":{"line":129,"column":2},"end":{"line":129,"column":2}}]},"13":{"line":137,"type":"if","locations":[{"start":{"line":137,"column":2},"end":{"line":137,"column":2}},{"start":{"line":137,"column":2},"end":{"line":137,"column":2}}]},"14":{"line":144,"type":"if","locations":[{"start":{"line":144,"column":2},"end":{"line":144,"column":2}},{"start":{"line":144,"column":2},"end":{"line":144,"column":2}}]},"15":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"16":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":6},"end":{"line":187,"column":6}},{"start":{"line":187,"column":6},"end":{"line":187,"column":6}}]},"17":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":10},"end":{"line":192,"column":10}},{"start":{"line":192,"column":10},"end":{"line":192,"column":10}}]},"18":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":14},"end":{"line":192,"column":28}},{"start":{"line":193,"column":14},"end":{"line":193,"column":30}},{"start":{"line":194,"column":14},"end":{"line":194,"column":43}}]},"19":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":4},"end":{"line":219,"column":4}},{"start":{"line":219,"column":4},"end":{"line":219,"column":4}}]},"20":{"line":229,"type":"cond-expr","locations":[{"start":{"line":229,"column":32},"end":{"line":229,"column":44}},{"start":{"line":229,"column":47},"end":{"line":229,"column":60}}]},"21":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":4},"end":{"line":231,"column":4}},{"start":{"line":231,"column":4},"end":{"line":231,"column":4}}]},"22":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":6},"end":{"line":238,"column":6}},{"start":{"line":238,"column":6},"end":{"line":238,"column":6}}]},"23":{"line":238,"type":"binary-expr","locations":[{"start":{"line":238,"column":10},"end":{"line":238,"column":42}},{"start":{"line":238,"column":46},"end":{"line":238,"column":76}}]},"24":{"line":264,"type":"if","locations":[{"start":{"line":264,"column":6},"end":{"line":264,"column":6}},{"start":{"line":264,"column":6},"end":{"line":264,"column":6}}]},"25":{"line":267,"type":"binary-expr","locations":[{"start":{"line":267,"column":66},"end":{"line":267,"column":73}},{"start":{"line":267,"column":77},"end":{"line":267,"column":78}}]},"26":{"line":303,"type":"if","locations":[{"start":{"line":303,"column":6},"end":{"line":303,"column":6}},{"start":{"line":303,"column":6},"end":{"line":303,"column":6}}]},"27":{"line":305,"type":"cond-expr","locations":[{"start":{"line":305,"column":30},"end":{"line":305,"column":52}},{"start":{"line":305,"column":55},"end":{"line":305,"column":77}}]},"28":{"line":307,"type":"if","locations":[{"start":{"line":307,"column":6},"end":{"line":307,"column":6}},{"start":{"line":307,"column":6},"end":{"line":307,"column":6}}]},"29":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":4},"end":{"line":316,"column":4}},{"start":{"line":316,"column":4},"end":{"line":316,"column":4}}]},"30":{"line":333,"type":"cond-expr","locations":[{"start":{"line":333,"column":38},"end":{"line":333,"column":46}},{"start":{"line":333,"column":49},"end":{"line":333,"column":77}}]},"31":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":6},"end":{"line":335,"column":6}},{"start":{"line":335,"column":6},"end":{"line":335,"column":6}}]},"32":{"line":341,"type":"cond-expr","locations":[{"start":{"line":341,"column":45},"end":{"line":341,"column":59}},{"start":{"line":341,"column":62},"end":{"line":341,"column":74}}]},"33":{"line":346,"type":"if","locations":[{"start":{"line":346,"column":6},"end":{"line":346,"column":6}},{"start":{"line":346,"column":6},"end":{"line":346,"column":6}}]},"34":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":4},"end":{"line":366,"column":4}},{"start":{"line":366,"column":4},"end":{"line":366,"column":4}}]},"35":{"line":367,"type":"switch","locations":[{"start":{"line":368,"column":8},"end":{"line":368,"column":51}},{"start":{"line":369,"column":8},"end":{"line":369,"column":50}}]},"36":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":4},"end":{"line":372,"column":4}},{"start":{"line":372,"column":4},"end":{"line":372,"column":4}}]},"37":{"line":373,"type":"cond-expr","locations":[{"start":{"line":373,"column":26},"end":{"line":373,"column":31}},{"start":{"line":373,"column":34},"end":{"line":373,"column":40}}]},"38":{"line":377,"type":"cond-expr","locations":[{"start":{"line":377,"column":27},"end":{"line":377,"column":34}},{"start":{"line":377,"column":37},"end":{"line":377,"column":44}}]},"39":{"line":378,"type":"cond-expr","locations":[{"start":{"line":378,"column":27},"end":{"line":378,"column":34}},{"start":{"line":378,"column":37},"end":{"line":378,"column":44}}]},"40":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":4},"end":{"line":381,"column":4}},{"start":{"line":381,"column":4},"end":{"line":381,"column":4}}]},"41":{"line":382,"type":"switch","locations":[{"start":{"line":383,"column":8},"end":{"line":383,"column":50}},{"start":{"line":384,"column":8},"end":{"line":384,"column":51}}]},"42":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":4},"end":{"line":387,"column":4}},{"start":{"line":387,"column":4},"end":{"line":387,"column":4}}]},"43":{"line":388,"type":"cond-expr","locations":[{"start":{"line":388,"column":26},"end":{"line":388,"column":31}},{"start":{"line":388,"column":34},"end":{"line":388,"column":40}}]}},"code":["\"use strict\";","","var _ = require(\"../lodash\"),","    Graph = require(\"../graphlib\").Graph,","    util = require(\"../util\");","","/*"," * This module provides coordinate assignment based on Brandes and Köpf, \"Fast"," * and Simple Horizontal Coordinate Assignment.\""," */","","module.exports = {","  positionX: positionX,","  findType1Conflicts: findType1Conflicts,","  findType2Conflicts: findType2Conflicts,","  addConflict: addConflict,","  hasConflict: hasConflict,","  verticalAlignment: verticalAlignment,","  horizontalCompaction: horizontalCompaction,","  alignCoordinates: alignCoordinates,","  findSmallestWidthAlignment: findSmallestWidthAlignment,","  balance: balance","};","","/*"," * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\""," * property. A type-1 conflict is one where a non-inner segment crosses an"," * inner segment. An inner segment is an edge with both incident nodes marked"," * with the \"dummy\" property."," *"," * This algorithm scans layer by layer, starting with the second, for type-1"," * conflicts between the current layer and the previous layer. For each layer"," * it scans the nodes from left to right until it reaches one that is incident"," * on an inner segment. It then scans predecessors to determine if they have"," * edges that cross that inner segment. At the end a final scan is done for all"," * nodes on the current rank to see if they cross the last visited inner"," * segment."," *"," * This algorithm (safely) assumes that a dummy node will only be incident on a"," * single node in the layers being scanned."," */","function findType1Conflicts(g, layering) {","  var conflicts = {};","","  function visitLayer(prevLayer, layer) {","    var","      // last visited node in the previous layer that is incident on an inner","      // segment.","      k0 = 0,","      // Tracks the last node in this layer scanned for crossings with a type-1","      // segment.","      scanPos = 0,","      prevLayerLength = prevLayer.length,","      lastNode = _.last(layer);","","    _.each(layer, function(v, i) {","      var w = findOtherInnerSegmentNode(g, v),","          k1 = w ? g.node(w).order : prevLayerLength;","","      if (w || v === lastNode) {","        _.each(layer.slice(scanPos, i +1), function(scanNode) {","          _.each(g.predecessors(scanNode), function(u) {","            var uLabel = g.node(u),","                uPos = uLabel.order;","            if ((uPos < k0 || k1 < uPos) &&","                !(uLabel.dummy && g.node(scanNode).dummy)) {","              addConflict(conflicts, u, scanNode);","            }","          });","        });","        scanPos = i + 1;","        k0 = k1;","      }","    });","","    return layer;","  }","","  _.reduce(layering, visitLayer);","  return conflicts;","}","","function findType2Conflicts(g, layering) {","  var conflicts = {};","","  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {","    var v;","    _.each(_.range(southPos, southEnd), function(i) {","      v = south[i];","      if (g.node(v).dummy) {","        _.each(g.predecessors(v), function(u) {","          var uNode = g.node(u);","          if (uNode.dummy &&","              (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {","            addConflict(conflicts, u, v);","          }","        });","      }","    });","  }","","","  function visitLayer(north, south) {","    var prevNorthPos = -1,","        nextNorthPos,","        southPos = 0;","","    _.each(south, function(v, southLookahead) {","      if (g.node(v).dummy === \"border\") {","        var predecessors = g.predecessors(v);","        if (predecessors.length) {","          nextNorthPos = g.node(predecessors[0]).order;","          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);","          southPos = southLookahead;","          prevNorthPos = nextNorthPos;","        }","      }","      scan(south, southPos, south.length, nextNorthPos, north.length);","    });","","    return south;","  }","","  _.reduce(layering, visitLayer);","  return conflicts;","}","","function findOtherInnerSegmentNode(g, v) {","  if (g.node(v).dummy) {","    return _.find(g.predecessors(v), function(u) {","      return g.node(u).dummy;","    });","  }","}","","function addConflict(conflicts, v, w) {","  if (v > w) {","    var tmp = v;","    v = w;","    w = tmp;","  }","","  var conflictsV = conflicts[v];","  if (!conflictsV) {","    conflicts[v] = conflictsV = {};","  }","  conflictsV[w] = true;","}","","function hasConflict(conflicts, v, w) {","  if (v > w) {","    var tmp = v;","    v = w;","    w = tmp;","  }","  return _.has(conflicts[v], w);","}","","/*"," * Try to align nodes into vertical \"blocks\" where possible. This algorithm"," * attempts to align a node with one of its median neighbors. If the edge"," * connecting a neighbor is a type-1 conflict then we ignore that possibility."," * If a previous node has already formed a block with a node after the node"," * we're trying to form a block with, we also ignore that possibility - our"," * blocks would be split in that scenario."," */","function verticalAlignment(g, layering, conflicts, neighborFn) {","  var root = {},","      align = {},","      pos = {};","","  // We cache the position here based on the layering because the graph and","  // layering may be out of sync. The layering matrix is manipulated to","  // generate different extreme alignments.","  _.each(layering, function(layer) {","    _.each(layer, function(v, order) {","      root[v] = v;","      align[v] = v;","      pos[v] = order;","    });","  });","","  _.each(layering, function(layer) {","    var prevIdx = -1;","    _.each(layer, function(v) {","      var ws = neighborFn(v);","      if (ws.length) {","        ws = _.sortBy(ws, function(w) { return pos[w]; });","        var mp = (ws.length - 1) / 2;","        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {","          var w = ws[i];","          if (align[v] === v &&","              prevIdx < pos[w] &&","              !hasConflict(conflicts, v, w)) {","            align[w] = v;","            align[v] = root[v] = root[w];","            prevIdx = pos[w];","          }","        }","      }","    });","  });","","  return { root: root, align: align };","}","","function horizontalCompaction(g, layering, root, align, reverseSep) {","  // This portion of the algorithm differs from BK due to a number of problems.","  // Instead of their algorithm we construct a new block graph and do two","  // sweeps. The first sweep places blocks with the smallest possible","  // coordinates. The second sweep removes unused space by moving blocks to the","  // greatest coordinates without violating separation.","  var xs = {},","      blockG = buildBlockGraph(g, layering, root, reverseSep);","","  // First pass, assign smallest coordinates via DFS","  var visited = {};","  function pass1(v) {","    if (!_.has(visited, v)) {","      visited[v] = true;","      xs[v] = _.reduce(blockG.inEdges(v), function(max, e) {","        pass1(e.v);","        return Math.max(max, xs[e.v] + blockG.edge(e));","      }, 0);","    }","  }","  _.each(blockG.nodes(), pass1);","","  var borderType = reverseSep ? \"borderLeft\" : \"borderRight\";","  function pass2(v) {","    if (visited[v] !== 2) {","      visited[v]++;","      var node = g.node(v);","      var min = _.reduce(blockG.outEdges(v), function(min, e) {","        pass2(e.w);","        return Math.min(min, xs[e.w] - blockG.edge(e));","      }, Number.POSITIVE_INFINITY);","      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {","        xs[v] = Math.max(xs[v], min);","      }","    }","  }","  _.each(blockG.nodes(), pass2);","","  // Assign x coordinates to all nodes","  _.each(align, function(v) {","    xs[v] = xs[root[v]];","  });","","  return xs;","}","","","function buildBlockGraph(g, layering, root, reverseSep) {","  var blockGraph = new Graph(),","      graphLabel = g.graph(),","      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);","","  _.each(layering, function(layer) {","    var u;","    _.each(layer, function(v) {","      var vRoot = root[v];","      blockGraph.setNode(vRoot);","      if (u) {","        var uRoot = root[u],","            prevMax = blockGraph.edge(uRoot, vRoot);","        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));","      }","      u = v;","    });","  });","","  return blockGraph;","}","","/*"," * Returns the alignment that has the smallest width of the given alignments."," */","function findSmallestWidthAlignment(g, xss) {","  return _.min(xss, function(xs) {","    var min = _.min(xs, function(x, v) { return x - width(g, v) / 2; }),","        max = _.max(xs, function(x, v) { return x + width(g, v) / 2; });","    return max - min;","  });","}","","/*"," * Align the coordinates of each of the layout alignments such that"," * left-biased alignments have their minimum coordinate at the same point as"," * the minimum coordinate of the smallest width alignment and right-biased"," * alignments have their maximum coordinate at the same point as the maximum"," * coordinate of the smallest width alignment."," */","function alignCoordinates(xss, alignTo) {","  var alignToMin = _.min(alignTo),","      alignToMax = _.max(alignTo);","","  _.each([\"u\", \"d\"], function(vert) {","    _.each([\"l\", \"r\"], function(horiz) {","      var alignment = vert + horiz,","          xs = xss[alignment],","          delta;","      if (xs === alignTo) return;","","      delta = horiz === \"l\" ? alignToMin - _.min(xs) : alignToMax - _.max(xs);","","      if (delta) {","        xss[alignment] = _.mapValues(xs, function(x) { return x + delta; });","      }","    });","  });","}","","function balance(xss, align) {","  return _.mapValues(xss.ul, function(ignore, v) {","    if (align) {","      return xss[align.toLowerCase()][v];","    } else {","      var xs = _.sortBy(_.pluck(xss, v));","      return (xs[1] + xs[2]) / 2;","    }","  });","}","","function positionX(g) {","  var layering = util.buildLayerMatrix(g),","      conflicts = _.merge(findType1Conflicts(g, layering),","                          findType2Conflicts(g, layering));","","  var xss = {},","      adjustedLayering;","  _.each([\"u\", \"d\"], function(vert) {","    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();","    _.each([\"l\", \"r\"], function(horiz) {","      if (horiz === \"r\") {","        adjustedLayering = _.map(adjustedLayering, function(inner) {","          return _.values(inner).reverse();","        });","      }","","      var neighborFn = _.bind(vert === \"u\" ? g.predecessors : g.successors, g);","      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);","      var xs = horizontalCompaction(g, adjustedLayering,","                                    align.root, align.align,","                                    horiz === \"r\");","      if (horiz === \"r\") {","        xs = _.mapValues(xs, function(x) { return -x; });","      }","      xss[vert + horiz] = xs;","    });","  });","","  var smallestWidth = findSmallestWidthAlignment(g, xss);","  alignCoordinates(xss, smallestWidth);","  return balance(xss, g.graph().align);","}","","function sep(nodeSep, edgeSep, reverseSep) {","  return function(g, v, w) {","    var vLabel = g.node(v),","        wLabel = g.node(w),","        sum = 0,","        delta;","","    sum += vLabel.width / 2;","    if (_.has(vLabel, \"labelpos\")) {","      switch (vLabel.labelpos.toLowerCase()) {","        case \"l\": delta = -vLabel.width / 2; break;","        case \"r\": delta = vLabel.width / 2; break;","      }","    }","    if (delta) {","      sum += reverseSep ? delta : -delta;","    }","    delta = 0;","","    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;","    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;","","    sum += wLabel.width / 2;","    if (_.has(wLabel, \"labelpos\")) {","      switch (wLabel.labelpos.toLowerCase()) {","        case \"l\": delta = wLabel.width / 2; break;","        case \"r\": delta = -wLabel.width / 2; break;","      }","    }","    if (delta) {","      sum += reverseSep ? delta : -delta;","    }","    delta = 0;","","    return sum;","  };","}","","function width(g, v) {","  return g.node(v).width;","}",""],"l":{"3":1,"12":1,"42":1,"43":0,"45":1,"46":0,"56":0,"57":0,"60":0,"61":0,"62":0,"63":0,"65":0,"67":0,"71":0,"72":0,"76":0,"79":0,"80":0,"83":1,"84":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"95":0,"103":1,"104":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"118":0,"121":0,"124":0,"125":0,"128":1,"129":0,"130":0,"131":0,"136":1,"137":0,"138":0,"139":0,"140":0,"143":0,"144":0,"145":0,"147":0,"150":1,"151":0,"152":0,"153":0,"154":0,"156":0,"167":1,"168":0,"175":0,"176":0,"177":0,"178":0,"179":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"195":0,"196":0,"197":0,"204":0,"207":1,"213":0,"217":0,"218":1,"219":0,"220":0,"221":0,"222":0,"223":0,"227":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"238":0,"239":0,"243":0,"246":0,"247":0,"250":0,"254":1,"255":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"267":0,"269":0,"273":0,"279":1,"280":0,"281":0,"282":0,"283":0,"294":1,"295":0,"298":0,"299":0,"300":0,"303":0,"305":0,"307":0,"308":0,"314":1,"315":0,"316":0,"317":0,"319":0,"320":0,"325":1,"326":0,"330":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"341":0,"342":0,"343":0,"346":0,"347":0,"349":0,"353":0,"354":0,"355":0,"358":1,"359":0,"360":0,"365":0,"366":0,"367":0,"368":0,"369":0,"372":0,"373":0,"375":0,"377":0,"378":0,"380":0,"381":0,"382":0,"383":0,"384":0,"387":0,"388":0,"390":0,"392":0,"396":1,"397":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/debug.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/debug.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"debugOrdering","line":10,"loc":{"start":{"line":10,"column":0},"end":{"line":10,"column":26}},"skip":true},"2":{"name":"(anonymous_2)","line":15,"loc":{"start":{"line":15,"column":20},"end":{"line":15,"column":32}},"skip":true},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":20},"end":{"line":20,"column":32}},"skip":true},"4":{"name":"(anonymous_4)","line":24,"loc":{"start":{"line":24,"column":22},"end":{"line":24,"column":41}},"skip":true},"5":{"name":"(anonymous_5)","line":27,"loc":{"start":{"line":27,"column":20},"end":{"line":27,"column":35}},"skip":true}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":3,"column":40}},"2":{"start":{"line":5,"column":0},"end":{"line":7,"column":2}},"3":{"start":{"line":10,"column":0},"end":{"line":34,"column":1},"skip":true},"4":{"start":{"line":11,"column":2},"end":{"line":11,"column":45},"skip":true},"5":{"start":{"line":13,"column":2},"end":{"line":13,"column":71},"skip":true},"6":{"start":{"line":15,"column":2},"end":{"line":18,"column":5},"skip":true},"7":{"start":{"line":16,"column":4},"end":{"line":16,"column":31},"skip":true},"8":{"start":{"line":17,"column":4},"end":{"line":17,"column":45},"skip":true},"9":{"start":{"line":20,"column":2},"end":{"line":22,"column":5},"skip":true},"10":{"start":{"line":21,"column":4},"end":{"line":21,"column":36},"skip":true},"11":{"start":{"line":24,"column":2},"end":{"line":31,"column":5},"skip":true},"12":{"start":{"line":25,"column":4},"end":{"line":25,"column":29},"skip":true},"13":{"start":{"line":26,"column":4},"end":{"line":26,"column":40},"skip":true},"14":{"start":{"line":27,"column":4},"end":{"line":30,"column":7},"skip":true},"15":{"start":{"line":28,"column":6},"end":{"line":28,"column":42},"skip":true},"16":{"start":{"line":29,"column":6},"end":{"line":29,"column":15},"skip":true},"17":{"start":{"line":33,"column":2},"end":{"line":33,"column":11},"skip":true}},"branchMap":{},"code":["var _ = require(\"./lodash\"),","    util = require(\"./util\"),","    Graph = require(\"./graphlib\").Graph;","","module.exports = {","  debugOrdering: debugOrdering","};","","/* istanbul ignore next */","function debugOrdering(g) {","  var layerMatrix = util.buildLayerMatrix(g);","","  var h = new Graph({ compound: true, multigraph: true }).setGraph({});","","  _.each(g.nodes(), function(v) {","    h.setNode(v, { label: v });","    h.setParent(v, \"layer\" + g.node(v).rank);","  });","","  _.each(g.edges(), function(e) {","    h.setEdge(e.v, e.w, {}, e.name);","  });","","  _.each(layerMatrix, function(layer, i) {","    var layerV = \"layer\" + i;","    h.setNode(layerV, { rank: \"same\" });","    _.reduce(layer, function(u, v) {","      h.setEdge(u, v, { style: \"invis\" });","      return v;","    });","  });","","  return h;","}",""],"l":{"1":1,"5":1,"10":1,"11":1,"13":1,"15":1,"16":1,"17":1,"20":1,"21":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"33":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/lib/version.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":1,"column":25}}},"branchMap":{},"code":["module.exports = \"0.7.4\";",""],"l":{"1":1}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/karma.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/karma.conf.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":68,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":67,"column":5}}},"branchMap":{},"code":["// Karma configuration","// Generated on Sat Oct 18 2014 17:38:05 GMT-0700 (PDT)","","module.exports = function(config) {","  config.set({","","    // base path that will be used to resolve all patterns (eg. files, exclude)","    basePath: '',","","","    // frameworks to use","    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter","    frameworks: ['mocha'],","","","    // list of files / patterns to load in the browser","    files: [","      'build/dagre.js',","","      'node_modules/chai/chai.js',","      'test/bundle-test.js'","    ],","","","    // list of files to exclude","    exclude: [","    ],","","","    // preprocess matching files before serving them to the browser","    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor","    preprocessors: {","    },","","","    // test results reporter to use","    // possible values: 'dots', 'progress'","    // available reporters: https://npmjs.org/browse/keyword/karma-reporter","    reporters: ['progress'],","","","    // web server port","    port: 9876,","","","    // enable / disable colors in the output (reporters and logs)","    colors: true,","","","    // level of logging","    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG","    logLevel: config.LOG_INFO,","","","    // enable / disable watching file and executing tests whenever any file changes","    autoWatch: true,","","","    // start these browsers","    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher","    browsers: ['Chrome', 'Firefox', 'PhantomJS', 'Safari'],","","","    // Continuous Integration mode","    // if true, Karma captures browsers, runs the tests and exits","    singleRun: false","  });","};",""],"l":{"4":1,"5":0}},"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/karma.core.conf.js":{"path":"/home/travis/build/npmtest/node-npmtest-dagre/node_modules/dagre/karma.core.conf.js","s":{"1":1,"2":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":4,"loc":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":70,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":69,"column":5}}},"branchMap":{},"code":["// Karma configuration","// Generated on Sat Oct 18 2014 17:38:05 GMT-0700 (PDT)","","module.exports = function(config) {","  config.set({","","    // base path that will be used to resolve all patterns (eg. files, exclude)","    basePath: '',","","","    // frameworks to use","    // available frameworks: https://npmjs.org/browse/keyword/karma-adapter","    frameworks: ['mocha'],","","","    // list of files / patterns to load in the browser","    files: [","      'node_modules/lodash/index.js',","      'node_modules/graphlib/dist/graphlib.core.js',","      'build/dagre.core.js',","","      'node_modules/chai/chai.js',","      'test/bundle-test.js'","    ],","","","    // list of files to exclude","    exclude: [","    ],","","","    // preprocess matching files before serving them to the browser","    // available preprocessors: https://npmjs.org/browse/keyword/karma-preprocessor","    preprocessors: {","    },","","","    // test results reporter to use","    // possible values: 'dots', 'progress'","    // available reporters: https://npmjs.org/browse/keyword/karma-reporter","    reporters: ['progress'],","","","    // web server port","    port: 9876,","","","    // enable / disable colors in the output (reporters and logs)","    colors: true,","","","    // level of logging","    // possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG","    logLevel: config.LOG_INFO,","","","    // enable / disable watching file and executing tests whenever any file changes","    autoWatch: true,","","","    // start these browsers","    // available browser launchers: https://npmjs.org/browse/keyword/karma-launcher","    browsers: ['Chrome', 'Firefox', 'PhantomJS', 'Safari'],","","","    // Continuous Integration mode","    // if true, Karma captures browsers, runs the tests and exits","    singleRun: false","  });","};",""],"l":{"4":1,"5":0}}}